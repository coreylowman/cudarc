use super :: * ;pub unsafe fn cudaDeviceReset () -> cudaError_t { unsafe { culib () . cudaDeviceReset () } }
pub unsafe fn cudaDeviceSynchronize () -> cudaError_t { unsafe { culib () . cudaDeviceSynchronize () } }
pub unsafe fn cudaDeviceSetLimit (limit : cudaLimit , value : usize) -> cudaError_t { unsafe { culib () . cudaDeviceSetLimit (limit , value) } }
pub unsafe fn cudaDeviceGetLimit (pValue : * mut usize , limit : cudaLimit) -> cudaError_t { unsafe { culib () . cudaDeviceGetLimit (pValue , limit) } }
pub unsafe fn cudaDeviceGetTexture1DLinearMaxWidth (maxWidthInElements : * mut usize , fmtDesc : * const cudaChannelFormatDesc , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetTexture1DLinearMaxWidth (maxWidthInElements , fmtDesc , device) } }
pub unsafe fn cudaDeviceGetCacheConfig (pCacheConfig : * mut cudaFuncCache) -> cudaError_t { unsafe { culib () . cudaDeviceGetCacheConfig (pCacheConfig) } }
pub unsafe fn cudaDeviceGetStreamPriorityRange (leastPriority : * mut :: core :: ffi :: c_int , greatestPriority : * mut :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetStreamPriorityRange (leastPriority , greatestPriority) } }
pub unsafe fn cudaDeviceSetCacheConfig (cacheConfig : cudaFuncCache) -> cudaError_t { unsafe { culib () . cudaDeviceSetCacheConfig (cacheConfig) } }
pub unsafe fn cudaDeviceGetByPCIBusId (device : * mut :: core :: ffi :: c_int , pciBusId : * const :: core :: ffi :: c_char ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetByPCIBusId (device , pciBusId) } }
pub unsafe fn cudaDeviceGetPCIBusId (pciBusId : * mut :: core :: ffi :: c_char , len : :: core :: ffi :: c_int , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetPCIBusId (pciBusId , len , device) } }
pub unsafe fn cudaIpcGetEventHandle (handle : * mut cudaIpcEventHandle_t , event : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaIpcGetEventHandle (handle , event) } }
pub unsafe fn cudaIpcOpenEventHandle (event : * mut cudaEvent_t , handle : cudaIpcEventHandle_t ,) -> cudaError_t { unsafe { culib () . cudaIpcOpenEventHandle (event , handle) } }
pub unsafe fn cudaIpcGetMemHandle (handle : * mut cudaIpcMemHandle_t , devPtr : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaIpcGetMemHandle (handle , devPtr) } }
pub unsafe fn cudaIpcOpenMemHandle (devPtr : * mut * mut :: core :: ffi :: c_void , handle : cudaIpcMemHandle_t , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaIpcOpenMemHandle (devPtr , handle , flags) } }
pub unsafe fn cudaIpcCloseMemHandle (devPtr : * mut :: core :: ffi :: c_void) -> cudaError_t { unsafe { culib () . cudaIpcCloseMemHandle (devPtr) } }
pub unsafe fn cudaDeviceFlushGPUDirectRDMAWrites (target : cudaFlushGPUDirectRDMAWritesTarget , scope : cudaFlushGPUDirectRDMAWritesScope ,) -> cudaError_t { unsafe { culib () . cudaDeviceFlushGPUDirectRDMAWrites (target , scope) } }
pub unsafe fn cudaDeviceRegisterAsyncNotification (device : :: core :: ffi :: c_int , callbackFunc : cudaAsyncCallback , userData : * mut :: core :: ffi :: c_void , callback : * mut cudaAsyncCallbackHandle_t ,) -> cudaError_t { unsafe { culib () . cudaDeviceRegisterAsyncNotification (device , callbackFunc , userData , callback) } }
pub unsafe fn cudaDeviceUnregisterAsyncNotification (device : :: core :: ffi :: c_int , callback : cudaAsyncCallbackHandle_t ,) -> cudaError_t { unsafe { culib () . cudaDeviceUnregisterAsyncNotification (device , callback) } }
pub unsafe fn cudaDeviceGetSharedMemConfig (pConfig : * mut cudaSharedMemConfig) -> cudaError_t { unsafe { culib () . cudaDeviceGetSharedMemConfig (pConfig) } }
pub unsafe fn cudaDeviceSetSharedMemConfig (config : cudaSharedMemConfig) -> cudaError_t { unsafe { culib () . cudaDeviceSetSharedMemConfig (config) } }
pub unsafe fn cudaThreadExit () -> cudaError_t { unsafe { culib () . cudaThreadExit () } }
pub unsafe fn cudaThreadSynchronize () -> cudaError_t { unsafe { culib () . cudaThreadSynchronize () } }
pub unsafe fn cudaThreadSetLimit (limit : cudaLimit , value : usize) -> cudaError_t { unsafe { culib () . cudaThreadSetLimit (limit , value) } }
pub unsafe fn cudaThreadGetLimit (pValue : * mut usize , limit : cudaLimit) -> cudaError_t { unsafe { culib () . cudaThreadGetLimit (pValue , limit) } }
pub unsafe fn cudaThreadGetCacheConfig (pCacheConfig : * mut cudaFuncCache) -> cudaError_t { unsafe { culib () . cudaThreadGetCacheConfig (pCacheConfig) } }
pub unsafe fn cudaThreadSetCacheConfig (cacheConfig : cudaFuncCache) -> cudaError_t { unsafe { culib () . cudaThreadSetCacheConfig (cacheConfig) } }
pub unsafe fn cudaGetLastError () -> cudaError_t { unsafe { culib () . cudaGetLastError () } }
pub unsafe fn cudaPeekAtLastError () -> cudaError_t { unsafe { culib () . cudaPeekAtLastError () } }
pub unsafe fn cudaGetErrorName (error : cudaError_t) -> * const :: core :: ffi :: c_char { unsafe { culib () . cudaGetErrorName (error) } }
pub unsafe fn cudaGetErrorString (error : cudaError_t) -> * const :: core :: ffi :: c_char { unsafe { culib () . cudaGetErrorString (error) } }
pub unsafe fn cudaGetDeviceCount (count : * mut :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaGetDeviceCount (count) } }
pub unsafe fn cudaGetDeviceProperties_v2 (prop : * mut cudaDeviceProp , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaGetDeviceProperties_v2 (prop , device) } }
pub unsafe fn cudaDeviceGetAttribute (value : * mut :: core :: ffi :: c_int , attr : cudaDeviceAttr , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetAttribute (value , attr , device) } }
pub unsafe fn cudaDeviceGetDefaultMemPool (memPool : * mut cudaMemPool_t , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetDefaultMemPool (memPool , device) } }
pub unsafe fn cudaDeviceSetMemPool (device : :: core :: ffi :: c_int , memPool : cudaMemPool_t) -> cudaError_t { unsafe { culib () . cudaDeviceSetMemPool (device , memPool) } }
pub unsafe fn cudaDeviceGetMemPool (memPool : * mut cudaMemPool_t , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetMemPool (memPool , device) } }
pub unsafe fn cudaDeviceGetNvSciSyncAttributes (nvSciSyncAttrList : * mut :: core :: ffi :: c_void , device : :: core :: ffi :: c_int , flags : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetNvSciSyncAttributes (nvSciSyncAttrList , device , flags) } }
pub unsafe fn cudaDeviceGetP2PAttribute (value : * mut :: core :: ffi :: c_int , attr : cudaDeviceP2PAttr , srcDevice : :: core :: ffi :: c_int , dstDevice : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetP2PAttribute (value , attr , srcDevice , dstDevice) } }
pub unsafe fn cudaChooseDevice (device : * mut :: core :: ffi :: c_int , prop : * const cudaDeviceProp ,) -> cudaError_t { unsafe { culib () . cudaChooseDevice (device , prop) } }
pub unsafe fn cudaInitDevice (device : :: core :: ffi :: c_int , deviceFlags : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaInitDevice (device , deviceFlags , flags) } }
pub unsafe fn cudaSetDevice (device : :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaSetDevice (device) } }
pub unsafe fn cudaGetDevice (device : * mut :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaGetDevice (device) } }
pub unsafe fn cudaSetValidDevices (device_arr : * mut :: core :: ffi :: c_int , len : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaSetValidDevices (device_arr , len) } }
pub unsafe fn cudaSetDeviceFlags (flags : :: core :: ffi :: c_uint) -> cudaError_t { unsafe { culib () . cudaSetDeviceFlags (flags) } }
pub unsafe fn cudaGetDeviceFlags (flags : * mut :: core :: ffi :: c_uint) -> cudaError_t { unsafe { culib () . cudaGetDeviceFlags (flags) } }
pub unsafe fn cudaStreamCreate (pStream : * mut cudaStream_t) -> cudaError_t { unsafe { culib () . cudaStreamCreate (pStream) } }
pub unsafe fn cudaStreamCreateWithFlags (pStream : * mut cudaStream_t , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamCreateWithFlags (pStream , flags) } }
pub unsafe fn cudaStreamCreateWithPriority (pStream : * mut cudaStream_t , flags : :: core :: ffi :: c_uint , priority : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaStreamCreateWithPriority (pStream , flags , priority) } }
pub unsafe fn cudaStreamGetPriority (hStream : cudaStream_t , priority : * mut :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaStreamGetPriority (hStream , priority) } }
pub unsafe fn cudaStreamGetFlags (hStream : cudaStream_t , flags : * mut :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamGetFlags (hStream , flags) } }
pub unsafe fn cudaStreamGetId (hStream : cudaStream_t , streamId : * mut :: core :: ffi :: c_ulonglong ,) -> cudaError_t { unsafe { culib () . cudaStreamGetId (hStream , streamId) } }
pub unsafe fn cudaStreamGetDevice (hStream : cudaStream_t , device : * mut :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaStreamGetDevice (hStream , device) } }
pub unsafe fn cudaCtxResetPersistingL2Cache () -> cudaError_t { unsafe { culib () . cudaCtxResetPersistingL2Cache () } }
pub unsafe fn cudaStreamCopyAttributes (dst : cudaStream_t , src : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaStreamCopyAttributes (dst , src) } }
pub unsafe fn cudaStreamGetAttribute (hStream : cudaStream_t , attr : cudaLaunchAttributeID , value_out : * mut cudaLaunchAttributeValue ,) -> cudaError_t { unsafe { culib () . cudaStreamGetAttribute (hStream , attr , value_out) } }
pub unsafe fn cudaStreamSetAttribute (hStream : cudaStream_t , attr : cudaLaunchAttributeID , value : * const cudaLaunchAttributeValue ,) -> cudaError_t { unsafe { culib () . cudaStreamSetAttribute (hStream , attr , value) } }
pub unsafe fn cudaStreamDestroy (stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaStreamDestroy (stream) } }
pub unsafe fn cudaStreamWaitEvent (stream : cudaStream_t , event : cudaEvent_t , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamWaitEvent (stream , event , flags) } }
pub unsafe fn cudaStreamAddCallback (stream : cudaStream_t , callback : cudaStreamCallback_t , userData : * mut :: core :: ffi :: c_void , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamAddCallback (stream , callback , userData , flags) } }
pub unsafe fn cudaStreamSynchronize (stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaStreamSynchronize (stream) } }
pub unsafe fn cudaStreamQuery (stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaStreamQuery (stream) } }
pub unsafe fn cudaStreamAttachMemAsync (stream : cudaStream_t , devPtr : * mut :: core :: ffi :: c_void , length : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamAttachMemAsync (stream , devPtr , length , flags) } }
pub unsafe fn cudaStreamBeginCapture (stream : cudaStream_t , mode : cudaStreamCaptureMode) -> cudaError_t { unsafe { culib () . cudaStreamBeginCapture (stream , mode) } }
pub unsafe fn cudaStreamBeginCaptureToGraph (stream : cudaStream_t , graph : cudaGraph_t , dependencies : * const cudaGraphNode_t , dependencyData : * const cudaGraphEdgeData , numDependencies : usize , mode : cudaStreamCaptureMode ,) -> cudaError_t { unsafe { culib () . cudaStreamBeginCaptureToGraph (stream , graph , dependencies , dependencyData , numDependencies , mode) } }
pub unsafe fn cudaThreadExchangeStreamCaptureMode (mode : * mut cudaStreamCaptureMode) -> cudaError_t { unsafe { culib () . cudaThreadExchangeStreamCaptureMode (mode) } }
pub unsafe fn cudaStreamEndCapture (stream : cudaStream_t , pGraph : * mut cudaGraph_t) -> cudaError_t { unsafe { culib () . cudaStreamEndCapture (stream , pGraph) } }
pub unsafe fn cudaStreamIsCapturing (stream : cudaStream_t , pCaptureStatus : * mut cudaStreamCaptureStatus ,) -> cudaError_t { unsafe { culib () . cudaStreamIsCapturing (stream , pCaptureStatus) } }
pub unsafe fn cudaStreamGetCaptureInfo_v2 (stream : cudaStream_t , captureStatus_out : * mut cudaStreamCaptureStatus , id_out : * mut :: core :: ffi :: c_ulonglong , graph_out : * mut cudaGraph_t , dependencies_out : * mut * const cudaGraphNode_t , numDependencies_out : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaStreamGetCaptureInfo_v2 (stream , captureStatus_out , id_out , graph_out , dependencies_out , numDependencies_out) } }
pub unsafe fn cudaStreamGetCaptureInfo_v3 (stream : cudaStream_t , captureStatus_out : * mut cudaStreamCaptureStatus , id_out : * mut :: core :: ffi :: c_ulonglong , graph_out : * mut cudaGraph_t , dependencies_out : * mut * const cudaGraphNode_t , edgeData_out : * mut * const cudaGraphEdgeData , numDependencies_out : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaStreamGetCaptureInfo_v3 (stream , captureStatus_out , id_out , graph_out , dependencies_out , edgeData_out , numDependencies_out) } }
pub unsafe fn cudaStreamUpdateCaptureDependencies (stream : cudaStream_t , dependencies : * mut cudaGraphNode_t , numDependencies : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamUpdateCaptureDependencies (stream , dependencies , numDependencies , flags) } }
pub unsafe fn cudaStreamUpdateCaptureDependencies_v2 (stream : cudaStream_t , dependencies : * mut cudaGraphNode_t , dependencyData : * const cudaGraphEdgeData , numDependencies : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaStreamUpdateCaptureDependencies_v2 (stream , dependencies , dependencyData , numDependencies , flags) } }
pub unsafe fn cudaEventCreate (event : * mut cudaEvent_t) -> cudaError_t { unsafe { culib () . cudaEventCreate (event) } }
pub unsafe fn cudaEventCreateWithFlags (event : * mut cudaEvent_t , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaEventCreateWithFlags (event , flags) } }
pub unsafe fn cudaEventRecord (event : cudaEvent_t , stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaEventRecord (event , stream) } }
pub unsafe fn cudaEventRecordWithFlags (event : cudaEvent_t , stream : cudaStream_t , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaEventRecordWithFlags (event , stream , flags) } }
pub unsafe fn cudaEventQuery (event : cudaEvent_t) -> cudaError_t { unsafe { culib () . cudaEventQuery (event) } }
pub unsafe fn cudaEventSynchronize (event : cudaEvent_t) -> cudaError_t { unsafe { culib () . cudaEventSynchronize (event) } }
pub unsafe fn cudaEventDestroy (event : cudaEvent_t) -> cudaError_t { unsafe { culib () . cudaEventDestroy (event) } }
pub unsafe fn cudaEventElapsedTime (ms : * mut f32 , start : cudaEvent_t , end : cudaEvent_t) -> cudaError_t { unsafe { culib () . cudaEventElapsedTime (ms , start , end) } }
pub unsafe fn cudaEventElapsedTime_v2 (ms : * mut f32 , start : cudaEvent_t , end : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaEventElapsedTime_v2 (ms , start , end) } }
pub unsafe fn cudaImportExternalMemory (extMem_out : * mut cudaExternalMemory_t , memHandleDesc : * const cudaExternalMemoryHandleDesc ,) -> cudaError_t { unsafe { culib () . cudaImportExternalMemory (extMem_out , memHandleDesc) } }
pub unsafe fn cudaExternalMemoryGetMappedBuffer (devPtr : * mut * mut :: core :: ffi :: c_void , extMem : cudaExternalMemory_t , bufferDesc : * const cudaExternalMemoryBufferDesc ,) -> cudaError_t { unsafe { culib () . cudaExternalMemoryGetMappedBuffer (devPtr , extMem , bufferDesc) } }
pub unsafe fn cudaExternalMemoryGetMappedMipmappedArray (mipmap : * mut cudaMipmappedArray_t , extMem : cudaExternalMemory_t , mipmapDesc : * const cudaExternalMemoryMipmappedArrayDesc ,) -> cudaError_t { unsafe { culib () . cudaExternalMemoryGetMappedMipmappedArray (mipmap , extMem , mipmapDesc) } }
pub unsafe fn cudaDestroyExternalMemory (extMem : cudaExternalMemory_t) -> cudaError_t { unsafe { culib () . cudaDestroyExternalMemory (extMem) } }
pub unsafe fn cudaImportExternalSemaphore (extSem_out : * mut cudaExternalSemaphore_t , semHandleDesc : * const cudaExternalSemaphoreHandleDesc ,) -> cudaError_t { unsafe { culib () . cudaImportExternalSemaphore (extSem_out , semHandleDesc) } }
pub unsafe fn cudaSignalExternalSemaphoresAsync_v2 (extSemArray : * const cudaExternalSemaphore_t , paramsArray : * const cudaExternalSemaphoreSignalParams , numExtSems : :: core :: ffi :: c_uint , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaSignalExternalSemaphoresAsync_v2 (extSemArray , paramsArray , numExtSems , stream) } }
pub unsafe fn cudaWaitExternalSemaphoresAsync_v2 (extSemArray : * const cudaExternalSemaphore_t , paramsArray : * const cudaExternalSemaphoreWaitParams , numExtSems : :: core :: ffi :: c_uint , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaWaitExternalSemaphoresAsync_v2 (extSemArray , paramsArray , numExtSems , stream) } }
pub unsafe fn cudaDestroyExternalSemaphore (extSem : cudaExternalSemaphore_t) -> cudaError_t { unsafe { culib () . cudaDestroyExternalSemaphore (extSem) } }
pub unsafe fn cudaLaunchKernel (func : * const :: core :: ffi :: c_void , gridDim : dim3 , blockDim : dim3 , args : * mut * mut :: core :: ffi :: c_void , sharedMem : usize , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaLaunchKernel (func , gridDim , blockDim , args , sharedMem , stream) } }
pub unsafe fn cudaLaunchKernelExC (config : * const cudaLaunchConfig_t , func : * const :: core :: ffi :: c_void , args : * mut * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaLaunchKernelExC (config , func , args) } }
pub unsafe fn cudaLaunchCooperativeKernel (func : * const :: core :: ffi :: c_void , gridDim : dim3 , blockDim : dim3 , args : * mut * mut :: core :: ffi :: c_void , sharedMem : usize , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaLaunchCooperativeKernel (func , gridDim , blockDim , args , sharedMem , stream) } }
pub unsafe fn cudaLaunchCooperativeKernelMultiDevice (launchParamsList : * mut cudaLaunchParams , numDevices : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaLaunchCooperativeKernelMultiDevice (launchParamsList , numDevices , flags) } }
pub unsafe fn cudaFuncSetCacheConfig (func : * const :: core :: ffi :: c_void , cacheConfig : cudaFuncCache ,) -> cudaError_t { unsafe { culib () . cudaFuncSetCacheConfig (func , cacheConfig) } }
pub unsafe fn cudaFuncGetAttributes (attr : * mut cudaFuncAttributes , func : * const :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaFuncGetAttributes (attr , func) } }
pub unsafe fn cudaFuncSetAttribute (func : * const :: core :: ffi :: c_void , attr : cudaFuncAttribute , value : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaFuncSetAttribute (func , attr , value) } }
pub unsafe fn cudaFuncGetName (name : * mut * const :: core :: ffi :: c_char , func : * const :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaFuncGetName (name , func) } }
pub unsafe fn cudaFuncGetParamInfo (func : * const :: core :: ffi :: c_void , paramIndex : usize , paramOffset : * mut usize , paramSize : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaFuncGetParamInfo (func , paramIndex , paramOffset , paramSize) } }
pub unsafe fn cudaSetDoubleForDevice (d : * mut f64) -> cudaError_t { unsafe { culib () . cudaSetDoubleForDevice (d) } }
pub unsafe fn cudaSetDoubleForHost (d : * mut f64) -> cudaError_t { unsafe { culib () . cudaSetDoubleForHost (d) } }
pub unsafe fn cudaLaunchHostFunc (stream : cudaStream_t , fn_ : cudaHostFn_t , userData : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaLaunchHostFunc (stream , fn_ , userData) } }
pub unsafe fn cudaFuncSetSharedMemConfig (func : * const :: core :: ffi :: c_void , config : cudaSharedMemConfig ,) -> cudaError_t { unsafe { culib () . cudaFuncSetSharedMemConfig (func , config) } }
pub unsafe fn cudaOccupancyMaxActiveBlocksPerMultiprocessor (numBlocks : * mut :: core :: ffi :: c_int , func : * const :: core :: ffi :: c_void , blockSize : :: core :: ffi :: c_int , dynamicSMemSize : usize ,) -> cudaError_t { unsafe { culib () . cudaOccupancyMaxActiveBlocksPerMultiprocessor (numBlocks , func , blockSize , dynamicSMemSize) } }
pub unsafe fn cudaOccupancyAvailableDynamicSMemPerBlock (dynamicSmemSize : * mut usize , func : * const :: core :: ffi :: c_void , numBlocks : :: core :: ffi :: c_int , blockSize : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaOccupancyAvailableDynamicSMemPerBlock (dynamicSmemSize , func , numBlocks , blockSize) } }
pub unsafe fn cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags (numBlocks : * mut :: core :: ffi :: c_int , func : * const :: core :: ffi :: c_void , blockSize : :: core :: ffi :: c_int , dynamicSMemSize : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags (numBlocks , func , blockSize , dynamicSMemSize , flags) } }
pub unsafe fn cudaOccupancyMaxPotentialClusterSize (clusterSize : * mut :: core :: ffi :: c_int , func : * const :: core :: ffi :: c_void , launchConfig : * const cudaLaunchConfig_t ,) -> cudaError_t { unsafe { culib () . cudaOccupancyMaxPotentialClusterSize (clusterSize , func , launchConfig) } }
pub unsafe fn cudaOccupancyMaxActiveClusters (numClusters : * mut :: core :: ffi :: c_int , func : * const :: core :: ffi :: c_void , launchConfig : * const cudaLaunchConfig_t ,) -> cudaError_t { unsafe { culib () . cudaOccupancyMaxActiveClusters (numClusters , func , launchConfig) } }
pub unsafe fn cudaMallocManaged (devPtr : * mut * mut :: core :: ffi :: c_void , size : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaMallocManaged (devPtr , size , flags) } }
pub unsafe fn cudaMalloc (devPtr : * mut * mut :: core :: ffi :: c_void , size : usize) -> cudaError_t { unsafe { culib () . cudaMalloc (devPtr , size) } }
pub unsafe fn cudaMallocHost (ptr : * mut * mut :: core :: ffi :: c_void , size : usize) -> cudaError_t { unsafe { culib () . cudaMallocHost (ptr , size) } }
pub unsafe fn cudaMallocPitch (devPtr : * mut * mut :: core :: ffi :: c_void , pitch : * mut usize , width : usize , height : usize ,) -> cudaError_t { unsafe { culib () . cudaMallocPitch (devPtr , pitch , width , height) } }
pub unsafe fn cudaMallocArray (array : * mut cudaArray_t , desc : * const cudaChannelFormatDesc , width : usize , height : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaMallocArray (array , desc , width , height , flags) } }
pub unsafe fn cudaFree (devPtr : * mut :: core :: ffi :: c_void) -> cudaError_t { unsafe { culib () . cudaFree (devPtr) } }
pub unsafe fn cudaFreeHost (ptr : * mut :: core :: ffi :: c_void) -> cudaError_t { unsafe { culib () . cudaFreeHost (ptr) } }
pub unsafe fn cudaFreeArray (array : cudaArray_t) -> cudaError_t { unsafe { culib () . cudaFreeArray (array) } }
pub unsafe fn cudaFreeMipmappedArray (mipmappedArray : cudaMipmappedArray_t) -> cudaError_t { unsafe { culib () . cudaFreeMipmappedArray (mipmappedArray) } }
pub unsafe fn cudaHostAlloc (pHost : * mut * mut :: core :: ffi :: c_void , size : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaHostAlloc (pHost , size , flags) } }
pub unsafe fn cudaHostRegister (ptr : * mut :: core :: ffi :: c_void , size : usize , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaHostRegister (ptr , size , flags) } }
pub unsafe fn cudaHostUnregister (ptr : * mut :: core :: ffi :: c_void) -> cudaError_t { unsafe { culib () . cudaHostUnregister (ptr) } }
pub unsafe fn cudaHostGetDevicePointer (pDevice : * mut * mut :: core :: ffi :: c_void , pHost : * mut :: core :: ffi :: c_void , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaHostGetDevicePointer (pDevice , pHost , flags) } }
pub unsafe fn cudaHostGetFlags (pFlags : * mut :: core :: ffi :: c_uint , pHost : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaHostGetFlags (pFlags , pHost) } }
pub unsafe fn cudaMalloc3D (pitchedDevPtr : * mut cudaPitchedPtr , extent : cudaExtent) -> cudaError_t { unsafe { culib () . cudaMalloc3D (pitchedDevPtr , extent) } }
pub unsafe fn cudaMalloc3DArray (array : * mut cudaArray_t , desc : * const cudaChannelFormatDesc , extent : cudaExtent , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaMalloc3DArray (array , desc , extent , flags) } }
pub unsafe fn cudaMallocMipmappedArray (mipmappedArray : * mut cudaMipmappedArray_t , desc : * const cudaChannelFormatDesc , extent : cudaExtent , numLevels : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaMallocMipmappedArray (mipmappedArray , desc , extent , numLevels , flags) } }
pub unsafe fn cudaGetMipmappedArrayLevel (levelArray : * mut cudaArray_t , mipmappedArray : cudaMipmappedArray_const_t , level : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGetMipmappedArrayLevel (levelArray , mipmappedArray , level) } }
pub unsafe fn cudaMemcpy3D (p : * const cudaMemcpy3DParms) -> cudaError_t { unsafe { culib () . cudaMemcpy3D (p) } }
pub unsafe fn cudaMemcpy3DPeer (p : * const cudaMemcpy3DPeerParms) -> cudaError_t { unsafe { culib () . cudaMemcpy3DPeer (p) } }
pub unsafe fn cudaMemcpy3DAsync (p : * const cudaMemcpy3DParms , stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaMemcpy3DAsync (p , stream) } }
pub unsafe fn cudaMemcpy3DPeerAsync (p : * const cudaMemcpy3DPeerParms , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpy3DPeerAsync (p , stream) } }
pub unsafe fn cudaMemGetInfo (free : * mut usize , total : * mut usize) -> cudaError_t { unsafe { culib () . cudaMemGetInfo (free , total) } }
pub unsafe fn cudaArrayGetInfo (desc : * mut cudaChannelFormatDesc , extent : * mut cudaExtent , flags : * mut :: core :: ffi :: c_uint , array : cudaArray_t ,) -> cudaError_t { unsafe { culib () . cudaArrayGetInfo (desc , extent , flags , array) } }
pub unsafe fn cudaArrayGetPlane (pPlaneArray : * mut cudaArray_t , hArray : cudaArray_t , planeIdx : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaArrayGetPlane (pPlaneArray , hArray , planeIdx) } }
pub unsafe fn cudaArrayGetMemoryRequirements (memoryRequirements : * mut cudaArrayMemoryRequirements , array : cudaArray_t , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaArrayGetMemoryRequirements (memoryRequirements , array , device) } }
pub unsafe fn cudaMipmappedArrayGetMemoryRequirements (memoryRequirements : * mut cudaArrayMemoryRequirements , mipmap : cudaMipmappedArray_t , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaMipmappedArrayGetMemoryRequirements (memoryRequirements , mipmap , device) } }
pub unsafe fn cudaArrayGetSparseProperties (sparseProperties : * mut cudaArraySparseProperties , array : cudaArray_t ,) -> cudaError_t { unsafe { culib () . cudaArrayGetSparseProperties (sparseProperties , array) } }
pub unsafe fn cudaMipmappedArrayGetSparseProperties (sparseProperties : * mut cudaArraySparseProperties , mipmap : cudaMipmappedArray_t ,) -> cudaError_t { unsafe { culib () . cudaMipmappedArrayGetSparseProperties (sparseProperties , mipmap) } }
pub unsafe fn cudaMemcpy (dst : * mut :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpy (dst , src , count , kind) } }
pub unsafe fn cudaMemcpyPeer (dst : * mut :: core :: ffi :: c_void , dstDevice : :: core :: ffi :: c_int , src : * const :: core :: ffi :: c_void , srcDevice : :: core :: ffi :: c_int , count : usize ,) -> cudaError_t { unsafe { culib () . cudaMemcpyPeer (dst , dstDevice , src , srcDevice , count) } }
pub unsafe fn cudaMemcpy2D (dst : * mut :: core :: ffi :: c_void , dpitch : usize , src : * const :: core :: ffi :: c_void , spitch : usize , width : usize , height : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2D (dst , dpitch , src , spitch , width , height , kind) } }
pub unsafe fn cudaMemcpy2DToArray (dst : cudaArray_t , wOffset : usize , hOffset : usize , src : * const :: core :: ffi :: c_void , spitch : usize , width : usize , height : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2DToArray (dst , wOffset , hOffset , src , spitch , width , height , kind) } }
pub unsafe fn cudaMemcpy2DFromArray (dst : * mut :: core :: ffi :: c_void , dpitch : usize , src : cudaArray_const_t , wOffset : usize , hOffset : usize , width : usize , height : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2DFromArray (dst , dpitch , src , wOffset , hOffset , width , height , kind) } }
pub unsafe fn cudaMemcpy2DArrayToArray (dst : cudaArray_t , wOffsetDst : usize , hOffsetDst : usize , src : cudaArray_const_t , wOffsetSrc : usize , hOffsetSrc : usize , width : usize , height : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2DArrayToArray (dst , wOffsetDst , hOffsetDst , src , wOffsetSrc , hOffsetSrc , width , height , kind) } }
pub unsafe fn cudaMemcpyToSymbol (symbol : * const :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpyToSymbol (symbol , src , count , offset , kind) } }
pub unsafe fn cudaMemcpyFromSymbol (dst : * mut :: core :: ffi :: c_void , symbol : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpyFromSymbol (dst , symbol , count , offset , kind) } }
pub unsafe fn cudaMemcpyAsync (dst : * mut :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyAsync (dst , src , count , kind , stream) } }
pub unsafe fn cudaMemcpyPeerAsync (dst : * mut :: core :: ffi :: c_void , dstDevice : :: core :: ffi :: c_int , src : * const :: core :: ffi :: c_void , srcDevice : :: core :: ffi :: c_int , count : usize , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyPeerAsync (dst , dstDevice , src , srcDevice , count , stream) } }
pub unsafe fn cudaMemcpyBatchAsync (dsts : * mut * mut :: core :: ffi :: c_void , srcs : * mut * mut :: core :: ffi :: c_void , sizes : * mut usize , count : usize , attrs : * mut cudaMemcpyAttributes , attrsIdxs : * mut usize , numAttrs : usize , failIdx : * mut usize , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyBatchAsync (dsts , srcs , sizes , count , attrs , attrsIdxs , numAttrs , failIdx , stream) } }
pub unsafe fn cudaMemcpy3DBatchAsync (numOps : usize , opList : * mut cudaMemcpy3DBatchOp , failIdx : * mut usize , flags : :: core :: ffi :: c_ulonglong , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpy3DBatchAsync (numOps , opList , failIdx , flags , stream) } }
pub unsafe fn cudaMemcpy2DAsync (dst : * mut :: core :: ffi :: c_void , dpitch : usize , src : * const :: core :: ffi :: c_void , spitch : usize , width : usize , height : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2DAsync (dst , dpitch , src , spitch , width , height , kind , stream) } }
pub unsafe fn cudaMemcpy2DToArrayAsync (dst : cudaArray_t , wOffset : usize , hOffset : usize , src : * const :: core :: ffi :: c_void , spitch : usize , width : usize , height : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2DToArrayAsync (dst , wOffset , hOffset , src , spitch , width , height , kind , stream) } }
pub unsafe fn cudaMemcpy2DFromArrayAsync (dst : * mut :: core :: ffi :: c_void , dpitch : usize , src : cudaArray_const_t , wOffset : usize , hOffset : usize , width : usize , height : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpy2DFromArrayAsync (dst , dpitch , src , wOffset , hOffset , width , height , kind , stream) } }
pub unsafe fn cudaMemcpyToSymbolAsync (symbol : * const :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyToSymbolAsync (symbol , src , count , offset , kind , stream) } }
pub unsafe fn cudaMemcpyFromSymbolAsync (dst : * mut :: core :: ffi :: c_void , symbol : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyFromSymbolAsync (dst , symbol , count , offset , kind , stream) } }
pub unsafe fn cudaMemset (devPtr : * mut :: core :: ffi :: c_void , value : :: core :: ffi :: c_int , count : usize ,) -> cudaError_t { unsafe { culib () . cudaMemset (devPtr , value , count) } }
pub unsafe fn cudaMemset2D (devPtr : * mut :: core :: ffi :: c_void , pitch : usize , value : :: core :: ffi :: c_int , width : usize , height : usize ,) -> cudaError_t { unsafe { culib () . cudaMemset2D (devPtr , pitch , value , width , height) } }
pub unsafe fn cudaMemset3D (pitchedDevPtr : cudaPitchedPtr , value : :: core :: ffi :: c_int , extent : cudaExtent ,) -> cudaError_t { unsafe { culib () . cudaMemset3D (pitchedDevPtr , value , extent) } }
pub unsafe fn cudaMemsetAsync (devPtr : * mut :: core :: ffi :: c_void , value : :: core :: ffi :: c_int , count : usize , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemsetAsync (devPtr , value , count , stream) } }
pub unsafe fn cudaMemset2DAsync (devPtr : * mut :: core :: ffi :: c_void , pitch : usize , value : :: core :: ffi :: c_int , width : usize , height : usize , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemset2DAsync (devPtr , pitch , value , width , height , stream) } }
pub unsafe fn cudaMemset3DAsync (pitchedDevPtr : cudaPitchedPtr , value : :: core :: ffi :: c_int , extent : cudaExtent , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemset3DAsync (pitchedDevPtr , value , extent , stream) } }
pub unsafe fn cudaGetSymbolAddress (devPtr : * mut * mut :: core :: ffi :: c_void , symbol : * const :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaGetSymbolAddress (devPtr , symbol) } }
pub unsafe fn cudaGetSymbolSize (size : * mut usize , symbol : * const :: core :: ffi :: c_void) -> cudaError_t { unsafe { culib () . cudaGetSymbolSize (size , symbol) } }
pub unsafe fn cudaMemPrefetchAsync (devPtr : * const :: core :: ffi :: c_void , count : usize , dstDevice : :: core :: ffi :: c_int , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemPrefetchAsync (devPtr , count , dstDevice , stream) } }
pub unsafe fn cudaMemPrefetchAsync_v2 (devPtr : * const :: core :: ffi :: c_void , count : usize , location : cudaMemLocation , flags : :: core :: ffi :: c_uint , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemPrefetchAsync_v2 (devPtr , count , location , flags , stream) } }
pub unsafe fn cudaMemAdvise (devPtr : * const :: core :: ffi :: c_void , count : usize , advice : cudaMemoryAdvise , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaMemAdvise (devPtr , count , advice , device) } }
pub unsafe fn cudaMemAdvise_v2 (devPtr : * const :: core :: ffi :: c_void , count : usize , advice : cudaMemoryAdvise , location : cudaMemLocation ,) -> cudaError_t { unsafe { culib () . cudaMemAdvise_v2 (devPtr , count , advice , location) } }
pub unsafe fn cudaMemRangeGetAttribute (data : * mut :: core :: ffi :: c_void , dataSize : usize , attribute : cudaMemRangeAttribute , devPtr : * const :: core :: ffi :: c_void , count : usize ,) -> cudaError_t { unsafe { culib () . cudaMemRangeGetAttribute (data , dataSize , attribute , devPtr , count) } }
pub unsafe fn cudaMemRangeGetAttributes (data : * mut * mut :: core :: ffi :: c_void , dataSizes : * mut usize , attributes : * mut cudaMemRangeAttribute , numAttributes : usize , devPtr : * const :: core :: ffi :: c_void , count : usize ,) -> cudaError_t { unsafe { culib () . cudaMemRangeGetAttributes (data , dataSizes , attributes , numAttributes , devPtr , count) } }
pub unsafe fn cudaMemcpyToArray (dst : cudaArray_t , wOffset : usize , hOffset : usize , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpyToArray (dst , wOffset , hOffset , src , count , kind) } }
pub unsafe fn cudaMemcpyFromArray (dst : * mut :: core :: ffi :: c_void , src : cudaArray_const_t , wOffset : usize , hOffset : usize , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpyFromArray (dst , src , wOffset , hOffset , count , kind) } }
pub unsafe fn cudaMemcpyArrayToArray (dst : cudaArray_t , wOffsetDst : usize , hOffsetDst : usize , src : cudaArray_const_t , wOffsetSrc : usize , hOffsetSrc : usize , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaMemcpyArrayToArray (dst , wOffsetDst , hOffsetDst , src , wOffsetSrc , hOffsetSrc , count , kind) } }
pub unsafe fn cudaMemcpyToArrayAsync (dst : cudaArray_t , wOffset : usize , hOffset : usize , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyToArrayAsync (dst , wOffset , hOffset , src , count , kind , stream) } }
pub unsafe fn cudaMemcpyFromArrayAsync (dst : * mut :: core :: ffi :: c_void , src : cudaArray_const_t , wOffset : usize , hOffset : usize , count : usize , kind : cudaMemcpyKind , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMemcpyFromArrayAsync (dst , src , wOffset , hOffset , count , kind , stream) } }
pub unsafe fn cudaMallocAsync (devPtr : * mut * mut :: core :: ffi :: c_void , size : usize , hStream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMallocAsync (devPtr , size , hStream) } }
pub unsafe fn cudaFreeAsync (devPtr : * mut :: core :: ffi :: c_void , hStream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaFreeAsync (devPtr , hStream) } }
pub unsafe fn cudaMemPoolTrimTo (memPool : cudaMemPool_t , minBytesToKeep : usize) -> cudaError_t { unsafe { culib () . cudaMemPoolTrimTo (memPool , minBytesToKeep) } }
pub unsafe fn cudaMemPoolSetAttribute (memPool : cudaMemPool_t , attr : cudaMemPoolAttr , value : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaMemPoolSetAttribute (memPool , attr , value) } }
pub unsafe fn cudaMemPoolGetAttribute (memPool : cudaMemPool_t , attr : cudaMemPoolAttr , value : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaMemPoolGetAttribute (memPool , attr , value) } }
pub unsafe fn cudaMemPoolSetAccess (memPool : cudaMemPool_t , descList : * const cudaMemAccessDesc , count : usize ,) -> cudaError_t { unsafe { culib () . cudaMemPoolSetAccess (memPool , descList , count) } }
pub unsafe fn cudaMemPoolGetAccess (flags : * mut cudaMemAccessFlags , memPool : cudaMemPool_t , location : * mut cudaMemLocation ,) -> cudaError_t { unsafe { culib () . cudaMemPoolGetAccess (flags , memPool , location) } }
pub unsafe fn cudaMemPoolCreate (memPool : * mut cudaMemPool_t , poolProps : * const cudaMemPoolProps ,) -> cudaError_t { unsafe { culib () . cudaMemPoolCreate (memPool , poolProps) } }
pub unsafe fn cudaMemPoolDestroy (memPool : cudaMemPool_t) -> cudaError_t { unsafe { culib () . cudaMemPoolDestroy (memPool) } }
pub unsafe fn cudaMallocFromPoolAsync (ptr : * mut * mut :: core :: ffi :: c_void , size : usize , memPool : cudaMemPool_t , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaMallocFromPoolAsync (ptr , size , memPool , stream) } }
pub unsafe fn cudaMemPoolExportToShareableHandle (shareableHandle : * mut :: core :: ffi :: c_void , memPool : cudaMemPool_t , handleType : cudaMemAllocationHandleType , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaMemPoolExportToShareableHandle (shareableHandle , memPool , handleType , flags) } }
pub unsafe fn cudaMemPoolImportFromShareableHandle (memPool : * mut cudaMemPool_t , shareableHandle : * mut :: core :: ffi :: c_void , handleType : cudaMemAllocationHandleType , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaMemPoolImportFromShareableHandle (memPool , shareableHandle , handleType , flags) } }
pub unsafe fn cudaMemPoolExportPointer (exportData : * mut cudaMemPoolPtrExportData , ptr : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaMemPoolExportPointer (exportData , ptr) } }
pub unsafe fn cudaMemPoolImportPointer (ptr : * mut * mut :: core :: ffi :: c_void , memPool : cudaMemPool_t , exportData : * mut cudaMemPoolPtrExportData ,) -> cudaError_t { unsafe { culib () . cudaMemPoolImportPointer (ptr , memPool , exportData) } }
pub unsafe fn cudaPointerGetAttributes (attributes : * mut cudaPointerAttributes , ptr : * const :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaPointerGetAttributes (attributes , ptr) } }
pub unsafe fn cudaDeviceCanAccessPeer (canAccessPeer : * mut :: core :: ffi :: c_int , device : :: core :: ffi :: c_int , peerDevice : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaDeviceCanAccessPeer (canAccessPeer , device , peerDevice) } }
pub unsafe fn cudaDeviceEnablePeerAccess (peerDevice : :: core :: ffi :: c_int , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaDeviceEnablePeerAccess (peerDevice , flags) } }
pub unsafe fn cudaDeviceDisablePeerAccess (peerDevice : :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaDeviceDisablePeerAccess (peerDevice) } }
pub unsafe fn cudaGraphicsUnregisterResource (resource : cudaGraphicsResource_t) -> cudaError_t { unsafe { culib () . cudaGraphicsUnregisterResource (resource) } }
pub unsafe fn cudaGraphicsResourceSetMapFlags (resource : cudaGraphicsResource_t , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphicsResourceSetMapFlags (resource , flags) } }
pub unsafe fn cudaGraphicsMapResources (count : :: core :: ffi :: c_int , resources : * mut cudaGraphicsResource_t , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaGraphicsMapResources (count , resources , stream) } }
pub unsafe fn cudaGraphicsUnmapResources (count : :: core :: ffi :: c_int , resources : * mut cudaGraphicsResource_t , stream : cudaStream_t ,) -> cudaError_t { unsafe { culib () . cudaGraphicsUnmapResources (count , resources , stream) } }
pub unsafe fn cudaGraphicsResourceGetMappedPointer (devPtr : * mut * mut :: core :: ffi :: c_void , size : * mut usize , resource : cudaGraphicsResource_t ,) -> cudaError_t { unsafe { culib () . cudaGraphicsResourceGetMappedPointer (devPtr , size , resource) } }
pub unsafe fn cudaGraphicsSubResourceGetMappedArray (array : * mut cudaArray_t , resource : cudaGraphicsResource_t , arrayIndex : :: core :: ffi :: c_uint , mipLevel : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphicsSubResourceGetMappedArray (array , resource , arrayIndex , mipLevel) } }
pub unsafe fn cudaGraphicsResourceGetMappedMipmappedArray (mipmappedArray : * mut cudaMipmappedArray_t , resource : cudaGraphicsResource_t ,) -> cudaError_t { unsafe { culib () . cudaGraphicsResourceGetMappedMipmappedArray (mipmappedArray , resource) } }
pub unsafe fn cudaGetChannelDesc (desc : * mut cudaChannelFormatDesc , array : cudaArray_const_t ,) -> cudaError_t { unsafe { culib () . cudaGetChannelDesc (desc , array) } }
pub unsafe fn cudaCreateChannelDesc (x : :: core :: ffi :: c_int , y : :: core :: ffi :: c_int , z : :: core :: ffi :: c_int , w : :: core :: ffi :: c_int , f : cudaChannelFormatKind ,) -> cudaChannelFormatDesc { unsafe { culib () . cudaCreateChannelDesc (x , y , z , w , f) } }
pub unsafe fn cudaCreateTextureObject (pTexObject : * mut cudaTextureObject_t , pResDesc : * const cudaResourceDesc , pTexDesc : * const cudaTextureDesc , pResViewDesc : * const cudaResourceViewDesc ,) -> cudaError_t { unsafe { culib () . cudaCreateTextureObject (pTexObject , pResDesc , pTexDesc , pResViewDesc) } }
pub unsafe fn cudaDestroyTextureObject (texObject : cudaTextureObject_t) -> cudaError_t { unsafe { culib () . cudaDestroyTextureObject (texObject) } }
pub unsafe fn cudaGetTextureObjectResourceDesc (pResDesc : * mut cudaResourceDesc , texObject : cudaTextureObject_t ,) -> cudaError_t { unsafe { culib () . cudaGetTextureObjectResourceDesc (pResDesc , texObject) } }
pub unsafe fn cudaGetTextureObjectTextureDesc (pTexDesc : * mut cudaTextureDesc , texObject : cudaTextureObject_t ,) -> cudaError_t { unsafe { culib () . cudaGetTextureObjectTextureDesc (pTexDesc , texObject) } }
pub unsafe fn cudaGetTextureObjectResourceViewDesc (pResViewDesc : * mut cudaResourceViewDesc , texObject : cudaTextureObject_t ,) -> cudaError_t { unsafe { culib () . cudaGetTextureObjectResourceViewDesc (pResViewDesc , texObject) } }
pub unsafe fn cudaCreateSurfaceObject (pSurfObject : * mut cudaSurfaceObject_t , pResDesc : * const cudaResourceDesc ,) -> cudaError_t { unsafe { culib () . cudaCreateSurfaceObject (pSurfObject , pResDesc) } }
pub unsafe fn cudaDestroySurfaceObject (surfObject : cudaSurfaceObject_t) -> cudaError_t { unsafe { culib () . cudaDestroySurfaceObject (surfObject) } }
pub unsafe fn cudaGetSurfaceObjectResourceDesc (pResDesc : * mut cudaResourceDesc , surfObject : cudaSurfaceObject_t ,) -> cudaError_t { unsafe { culib () . cudaGetSurfaceObjectResourceDesc (pResDesc , surfObject) } }
pub unsafe fn cudaDriverGetVersion (driverVersion : * mut :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaDriverGetVersion (driverVersion) } }
pub unsafe fn cudaRuntimeGetVersion (runtimeVersion : * mut :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaRuntimeGetVersion (runtimeVersion) } }
pub unsafe fn cudaGraphCreate (pGraph : * mut cudaGraph_t , flags : :: core :: ffi :: c_uint) -> cudaError_t { unsafe { culib () . cudaGraphCreate (pGraph , flags) } }
pub unsafe fn cudaGraphAddKernelNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , pNodeParams : * const cudaKernelNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddKernelNode (pGraphNode , graph , pDependencies , numDependencies , pNodeParams) } }
pub unsafe fn cudaGraphKernelNodeGetParams (node : cudaGraphNode_t , pNodeParams : * mut cudaKernelNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphKernelNodeGetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphKernelNodeSetParams (node : cudaGraphNode_t , pNodeParams : * const cudaKernelNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphKernelNodeSetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphKernelNodeCopyAttributes (hSrc : cudaGraphNode_t , hDst : cudaGraphNode_t ,) -> cudaError_t { unsafe { culib () . cudaGraphKernelNodeCopyAttributes (hSrc , hDst) } }
pub unsafe fn cudaGraphKernelNodeGetAttribute (hNode : cudaGraphNode_t , attr : cudaLaunchAttributeID , value_out : * mut cudaLaunchAttributeValue ,) -> cudaError_t { unsafe { culib () . cudaGraphKernelNodeGetAttribute (hNode , attr , value_out) } }
pub unsafe fn cudaGraphKernelNodeSetAttribute (hNode : cudaGraphNode_t , attr : cudaLaunchAttributeID , value : * const cudaLaunchAttributeValue ,) -> cudaError_t { unsafe { culib () . cudaGraphKernelNodeSetAttribute (hNode , attr , value) } }
pub unsafe fn cudaGraphAddMemcpyNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , pCopyParams : * const cudaMemcpy3DParms ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemcpyNode (pGraphNode , graph , pDependencies , numDependencies , pCopyParams) } }
pub unsafe fn cudaGraphAddMemcpyNodeToSymbol (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , symbol : * const :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemcpyNodeToSymbol (pGraphNode , graph , pDependencies , numDependencies , symbol , src , count , offset , kind) } }
pub unsafe fn cudaGraphAddMemcpyNodeFromSymbol (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , dst : * mut :: core :: ffi :: c_void , symbol : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemcpyNodeFromSymbol (pGraphNode , graph , pDependencies , numDependencies , dst , symbol , count , offset , kind) } }
pub unsafe fn cudaGraphAddMemcpyNode1D (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , dst : * mut :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemcpyNode1D (pGraphNode , graph , pDependencies , numDependencies , dst , src , count , kind) } }
pub unsafe fn cudaGraphMemcpyNodeGetParams (node : cudaGraphNode_t , pNodeParams : * mut cudaMemcpy3DParms ,) -> cudaError_t { unsafe { culib () . cudaGraphMemcpyNodeGetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphMemcpyNodeSetParams (node : cudaGraphNode_t , pNodeParams : * const cudaMemcpy3DParms ,) -> cudaError_t { unsafe { culib () . cudaGraphMemcpyNodeSetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphMemcpyNodeSetParamsToSymbol (node : cudaGraphNode_t , symbol : * const :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphMemcpyNodeSetParamsToSymbol (node , symbol , src , count , offset , kind) } }
pub unsafe fn cudaGraphMemcpyNodeSetParamsFromSymbol (node : cudaGraphNode_t , dst : * mut :: core :: ffi :: c_void , symbol : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphMemcpyNodeSetParamsFromSymbol (node , dst , symbol , count , offset , kind) } }
pub unsafe fn cudaGraphMemcpyNodeSetParams1D (node : cudaGraphNode_t , dst : * mut :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphMemcpyNodeSetParams1D (node , dst , src , count , kind) } }
pub unsafe fn cudaGraphAddMemsetNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , pMemsetParams : * const cudaMemsetParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemsetNode (pGraphNode , graph , pDependencies , numDependencies , pMemsetParams) } }
pub unsafe fn cudaGraphMemsetNodeGetParams (node : cudaGraphNode_t , pNodeParams : * mut cudaMemsetParams ,) -> cudaError_t { unsafe { culib () . cudaGraphMemsetNodeGetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphMemsetNodeSetParams (node : cudaGraphNode_t , pNodeParams : * const cudaMemsetParams ,) -> cudaError_t { unsafe { culib () . cudaGraphMemsetNodeSetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphAddHostNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , pNodeParams : * const cudaHostNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddHostNode (pGraphNode , graph , pDependencies , numDependencies , pNodeParams) } }
pub unsafe fn cudaGraphHostNodeGetParams (node : cudaGraphNode_t , pNodeParams : * mut cudaHostNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphHostNodeGetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphHostNodeSetParams (node : cudaGraphNode_t , pNodeParams : * const cudaHostNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphHostNodeSetParams (node , pNodeParams) } }
pub unsafe fn cudaGraphAddChildGraphNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , childGraph : cudaGraph_t ,) -> cudaError_t { unsafe { culib () . cudaGraphAddChildGraphNode (pGraphNode , graph , pDependencies , numDependencies , childGraph) } }
pub unsafe fn cudaGraphChildGraphNodeGetGraph (node : cudaGraphNode_t , pGraph : * mut cudaGraph_t ,) -> cudaError_t { unsafe { culib () . cudaGraphChildGraphNodeGetGraph (node , pGraph) } }
pub unsafe fn cudaGraphAddEmptyNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize ,) -> cudaError_t { unsafe { culib () . cudaGraphAddEmptyNode (pGraphNode , graph , pDependencies , numDependencies) } }
pub unsafe fn cudaGraphAddEventRecordNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , event : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphAddEventRecordNode (pGraphNode , graph , pDependencies , numDependencies , event) } }
pub unsafe fn cudaGraphEventRecordNodeGetEvent (node : cudaGraphNode_t , event_out : * mut cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphEventRecordNodeGetEvent (node , event_out) } }
pub unsafe fn cudaGraphEventRecordNodeSetEvent (node : cudaGraphNode_t , event : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphEventRecordNodeSetEvent (node , event) } }
pub unsafe fn cudaGraphAddEventWaitNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , event : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphAddEventWaitNode (pGraphNode , graph , pDependencies , numDependencies , event) } }
pub unsafe fn cudaGraphEventWaitNodeGetEvent (node : cudaGraphNode_t , event_out : * mut cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphEventWaitNodeGetEvent (node , event_out) } }
pub unsafe fn cudaGraphEventWaitNodeSetEvent (node : cudaGraphNode_t , event : cudaEvent_t) -> cudaError_t { unsafe { culib () . cudaGraphEventWaitNodeSetEvent (node , event) } }
pub unsafe fn cudaGraphAddExternalSemaphoresSignalNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , nodeParams : * const cudaExternalSemaphoreSignalNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddExternalSemaphoresSignalNode (pGraphNode , graph , pDependencies , numDependencies , nodeParams) } }
pub unsafe fn cudaGraphExternalSemaphoresSignalNodeGetParams (hNode : cudaGraphNode_t , params_out : * mut cudaExternalSemaphoreSignalNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExternalSemaphoresSignalNodeGetParams (hNode , params_out) } }
pub unsafe fn cudaGraphExternalSemaphoresSignalNodeSetParams (hNode : cudaGraphNode_t , nodeParams : * const cudaExternalSemaphoreSignalNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExternalSemaphoresSignalNodeSetParams (hNode , nodeParams) } }
pub unsafe fn cudaGraphAddExternalSemaphoresWaitNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , nodeParams : * const cudaExternalSemaphoreWaitNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddExternalSemaphoresWaitNode (pGraphNode , graph , pDependencies , numDependencies , nodeParams) } }
pub unsafe fn cudaGraphExternalSemaphoresWaitNodeGetParams (hNode : cudaGraphNode_t , params_out : * mut cudaExternalSemaphoreWaitNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExternalSemaphoresWaitNodeGetParams (hNode , params_out) } }
pub unsafe fn cudaGraphExternalSemaphoresWaitNodeSetParams (hNode : cudaGraphNode_t , nodeParams : * const cudaExternalSemaphoreWaitNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExternalSemaphoresWaitNodeSetParams (hNode , nodeParams) } }
pub unsafe fn cudaGraphAddMemAllocNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , nodeParams : * mut cudaMemAllocNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemAllocNode (pGraphNode , graph , pDependencies , numDependencies , nodeParams) } }
pub unsafe fn cudaGraphMemAllocNodeGetParams (node : cudaGraphNode_t , params_out : * mut cudaMemAllocNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphMemAllocNodeGetParams (node , params_out) } }
pub unsafe fn cudaGraphAddMemFreeNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , dptr : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaGraphAddMemFreeNode (pGraphNode , graph , pDependencies , numDependencies , dptr) } }
pub unsafe fn cudaGraphMemFreeNodeGetParams (node : cudaGraphNode_t , dptr_out : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaGraphMemFreeNodeGetParams (node , dptr_out) } }
pub unsafe fn cudaDeviceGraphMemTrim (device : :: core :: ffi :: c_int) -> cudaError_t { unsafe { culib () . cudaDeviceGraphMemTrim (device) } }
pub unsafe fn cudaDeviceGetGraphMemAttribute (device : :: core :: ffi :: c_int , attr : cudaGraphMemAttributeType , value : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaDeviceGetGraphMemAttribute (device , attr , value) } }
pub unsafe fn cudaDeviceSetGraphMemAttribute (device : :: core :: ffi :: c_int , attr : cudaGraphMemAttributeType , value : * mut :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaDeviceSetGraphMemAttribute (device , attr , value) } }
pub unsafe fn cudaGraphClone (pGraphClone : * mut cudaGraph_t , originalGraph : cudaGraph_t) -> cudaError_t { unsafe { culib () . cudaGraphClone (pGraphClone , originalGraph) } }
pub unsafe fn cudaGraphNodeFindInClone (pNode : * mut cudaGraphNode_t , originalNode : cudaGraphNode_t , clonedGraph : cudaGraph_t ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeFindInClone (pNode , originalNode , clonedGraph) } }
pub unsafe fn cudaGraphNodeGetType (node : cudaGraphNode_t , pType : * mut cudaGraphNodeType ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeGetType (node , pType) } }
pub unsafe fn cudaGraphGetNodes (graph : cudaGraph_t , nodes : * mut cudaGraphNode_t , numNodes : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphGetNodes (graph , nodes , numNodes) } }
pub unsafe fn cudaGraphGetRootNodes (graph : cudaGraph_t , pRootNodes : * mut cudaGraphNode_t , pNumRootNodes : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphGetRootNodes (graph , pRootNodes , pNumRootNodes) } }
pub unsafe fn cudaGraphGetEdges (graph : cudaGraph_t , from : * mut cudaGraphNode_t , to : * mut cudaGraphNode_t , numEdges : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphGetEdges (graph , from , to , numEdges) } }
pub unsafe fn cudaGraphGetEdges_v2 (graph : cudaGraph_t , from : * mut cudaGraphNode_t , to : * mut cudaGraphNode_t , edgeData : * mut cudaGraphEdgeData , numEdges : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphGetEdges_v2 (graph , from , to , edgeData , numEdges) } }
pub unsafe fn cudaGraphNodeGetDependencies (node : cudaGraphNode_t , pDependencies : * mut cudaGraphNode_t , pNumDependencies : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeGetDependencies (node , pDependencies , pNumDependencies) } }
pub unsafe fn cudaGraphNodeGetDependencies_v2 (node : cudaGraphNode_t , pDependencies : * mut cudaGraphNode_t , edgeData : * mut cudaGraphEdgeData , pNumDependencies : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeGetDependencies_v2 (node , pDependencies , edgeData , pNumDependencies) } }
pub unsafe fn cudaGraphNodeGetDependentNodes (node : cudaGraphNode_t , pDependentNodes : * mut cudaGraphNode_t , pNumDependentNodes : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeGetDependentNodes (node , pDependentNodes , pNumDependentNodes) } }
pub unsafe fn cudaGraphNodeGetDependentNodes_v2 (node : cudaGraphNode_t , pDependentNodes : * mut cudaGraphNode_t , edgeData : * mut cudaGraphEdgeData , pNumDependentNodes : * mut usize ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeGetDependentNodes_v2 (node , pDependentNodes , edgeData , pNumDependentNodes) } }
pub unsafe fn cudaGraphAddDependencies (graph : cudaGraph_t , from : * const cudaGraphNode_t , to : * const cudaGraphNode_t , numDependencies : usize ,) -> cudaError_t { unsafe { culib () . cudaGraphAddDependencies (graph , from , to , numDependencies) } }
pub unsafe fn cudaGraphAddDependencies_v2 (graph : cudaGraph_t , from : * const cudaGraphNode_t , to : * const cudaGraphNode_t , edgeData : * const cudaGraphEdgeData , numDependencies : usize ,) -> cudaError_t { unsafe { culib () . cudaGraphAddDependencies_v2 (graph , from , to , edgeData , numDependencies) } }
pub unsafe fn cudaGraphRemoveDependencies (graph : cudaGraph_t , from : * const cudaGraphNode_t , to : * const cudaGraphNode_t , numDependencies : usize ,) -> cudaError_t { unsafe { culib () . cudaGraphRemoveDependencies (graph , from , to , numDependencies) } }
pub unsafe fn cudaGraphRemoveDependencies_v2 (graph : cudaGraph_t , from : * const cudaGraphNode_t , to : * const cudaGraphNode_t , edgeData : * const cudaGraphEdgeData , numDependencies : usize ,) -> cudaError_t { unsafe { culib () . cudaGraphRemoveDependencies_v2 (graph , from , to , edgeData , numDependencies) } }
pub unsafe fn cudaGraphDestroyNode (node : cudaGraphNode_t) -> cudaError_t { unsafe { culib () . cudaGraphDestroyNode (node) } }
pub unsafe fn cudaGraphInstantiate (pGraphExec : * mut cudaGraphExec_t , graph : cudaGraph_t , flags : :: core :: ffi :: c_ulonglong ,) -> cudaError_t { unsafe { culib () . cudaGraphInstantiate (pGraphExec , graph , flags) } }
pub unsafe fn cudaGraphInstantiateWithFlags (pGraphExec : * mut cudaGraphExec_t , graph : cudaGraph_t , flags : :: core :: ffi :: c_ulonglong ,) -> cudaError_t { unsafe { culib () . cudaGraphInstantiateWithFlags (pGraphExec , graph , flags) } }
pub unsafe fn cudaGraphInstantiateWithParams (pGraphExec : * mut cudaGraphExec_t , graph : cudaGraph_t , instantiateParams : * mut cudaGraphInstantiateParams ,) -> cudaError_t { unsafe { culib () . cudaGraphInstantiateWithParams (pGraphExec , graph , instantiateParams) } }
pub unsafe fn cudaGraphExecGetFlags (graphExec : cudaGraphExec_t , flags : * mut :: core :: ffi :: c_ulonglong ,) -> cudaError_t { unsafe { culib () . cudaGraphExecGetFlags (graphExec , flags) } }
pub unsafe fn cudaGraphExecKernelNodeSetParams (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , pNodeParams : * const cudaKernelNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExecKernelNodeSetParams (hGraphExec , node , pNodeParams) } }
pub unsafe fn cudaGraphExecMemcpyNodeSetParams (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , pNodeParams : * const cudaMemcpy3DParms ,) -> cudaError_t { unsafe { culib () . cudaGraphExecMemcpyNodeSetParams (hGraphExec , node , pNodeParams) } }
pub unsafe fn cudaGraphExecMemcpyNodeSetParamsToSymbol (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , symbol : * const :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphExecMemcpyNodeSetParamsToSymbol (hGraphExec , node , symbol , src , count , offset , kind) } }
pub unsafe fn cudaGraphExecMemcpyNodeSetParamsFromSymbol (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , dst : * mut :: core :: ffi :: c_void , symbol : * const :: core :: ffi :: c_void , count : usize , offset : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphExecMemcpyNodeSetParamsFromSymbol (hGraphExec , node , dst , symbol , count , offset , kind) } }
pub unsafe fn cudaGraphExecMemcpyNodeSetParams1D (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , dst : * mut :: core :: ffi :: c_void , src : * const :: core :: ffi :: c_void , count : usize , kind : cudaMemcpyKind ,) -> cudaError_t { unsafe { culib () . cudaGraphExecMemcpyNodeSetParams1D (hGraphExec , node , dst , src , count , kind) } }
pub unsafe fn cudaGraphExecMemsetNodeSetParams (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , pNodeParams : * const cudaMemsetParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExecMemsetNodeSetParams (hGraphExec , node , pNodeParams) } }
pub unsafe fn cudaGraphExecHostNodeSetParams (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , pNodeParams : * const cudaHostNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExecHostNodeSetParams (hGraphExec , node , pNodeParams) } }
pub unsafe fn cudaGraphExecChildGraphNodeSetParams (hGraphExec : cudaGraphExec_t , node : cudaGraphNode_t , childGraph : cudaGraph_t ,) -> cudaError_t { unsafe { culib () . cudaGraphExecChildGraphNodeSetParams (hGraphExec , node , childGraph) } }
pub unsafe fn cudaGraphExecEventRecordNodeSetEvent (hGraphExec : cudaGraphExec_t , hNode : cudaGraphNode_t , event : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphExecEventRecordNodeSetEvent (hGraphExec , hNode , event) } }
pub unsafe fn cudaGraphExecEventWaitNodeSetEvent (hGraphExec : cudaGraphExec_t , hNode : cudaGraphNode_t , event : cudaEvent_t ,) -> cudaError_t { unsafe { culib () . cudaGraphExecEventWaitNodeSetEvent (hGraphExec , hNode , event) } }
pub unsafe fn cudaGraphExecExternalSemaphoresSignalNodeSetParams (hGraphExec : cudaGraphExec_t , hNode : cudaGraphNode_t , nodeParams : * const cudaExternalSemaphoreSignalNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExecExternalSemaphoresSignalNodeSetParams (hGraphExec , hNode , nodeParams) } }
pub unsafe fn cudaGraphExecExternalSemaphoresWaitNodeSetParams (hGraphExec : cudaGraphExec_t , hNode : cudaGraphNode_t , nodeParams : * const cudaExternalSemaphoreWaitNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExecExternalSemaphoresWaitNodeSetParams (hGraphExec , hNode , nodeParams) } }
pub unsafe fn cudaGraphNodeSetEnabled (hGraphExec : cudaGraphExec_t , hNode : cudaGraphNode_t , isEnabled : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeSetEnabled (hGraphExec , hNode , isEnabled) } }
pub unsafe fn cudaGraphNodeGetEnabled (hGraphExec : cudaGraphExec_t , hNode : cudaGraphNode_t , isEnabled : * mut :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeGetEnabled (hGraphExec , hNode , isEnabled) } }
pub unsafe fn cudaGraphExecUpdate (hGraphExec : cudaGraphExec_t , hGraph : cudaGraph_t , resultInfo : * mut cudaGraphExecUpdateResultInfo ,) -> cudaError_t { unsafe { culib () . cudaGraphExecUpdate (hGraphExec , hGraph , resultInfo) } }
pub unsafe fn cudaGraphUpload (graphExec : cudaGraphExec_t , stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaGraphUpload (graphExec , stream) } }
pub unsafe fn cudaGraphLaunch (graphExec : cudaGraphExec_t , stream : cudaStream_t) -> cudaError_t { unsafe { culib () . cudaGraphLaunch (graphExec , stream) } }
pub unsafe fn cudaGraphExecDestroy (graphExec : cudaGraphExec_t) -> cudaError_t { unsafe { culib () . cudaGraphExecDestroy (graphExec) } }
pub unsafe fn cudaGraphDestroy (graph : cudaGraph_t) -> cudaError_t { unsafe { culib () . cudaGraphDestroy (graph) } }
pub unsafe fn cudaGraphDebugDotPrint (graph : cudaGraph_t , path : * const :: core :: ffi :: c_char , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphDebugDotPrint (graph , path , flags) } }
pub unsafe fn cudaUserObjectCreate (object_out : * mut cudaUserObject_t , ptr : * mut :: core :: ffi :: c_void , destroy : cudaHostFn_t , initialRefcount : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaUserObjectCreate (object_out , ptr , destroy , initialRefcount , flags) } }
pub unsafe fn cudaUserObjectRetain (object : cudaUserObject_t , count : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaUserObjectRetain (object , count) } }
pub unsafe fn cudaUserObjectRelease (object : cudaUserObject_t , count : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaUserObjectRelease (object , count) } }
pub unsafe fn cudaGraphRetainUserObject (graph : cudaGraph_t , object : cudaUserObject_t , count : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphRetainUserObject (graph , object , count , flags) } }
pub unsafe fn cudaGraphReleaseUserObject (graph : cudaGraph_t , object : cudaUserObject_t , count : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphReleaseUserObject (graph , object , count) } }
pub unsafe fn cudaGraphAddNode (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , numDependencies : usize , nodeParams : * mut cudaGraphNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddNode (pGraphNode , graph , pDependencies , numDependencies , nodeParams) } }
pub unsafe fn cudaGraphAddNode_v2 (pGraphNode : * mut cudaGraphNode_t , graph : cudaGraph_t , pDependencies : * const cudaGraphNode_t , dependencyData : * const cudaGraphEdgeData , numDependencies : usize , nodeParams : * mut cudaGraphNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphAddNode_v2 (pGraphNode , graph , pDependencies , dependencyData , numDependencies , nodeParams) } }
pub unsafe fn cudaGraphNodeSetParams (node : cudaGraphNode_t , nodeParams : * mut cudaGraphNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphNodeSetParams (node , nodeParams) } }
pub unsafe fn cudaGraphExecNodeSetParams (graphExec : cudaGraphExec_t , node : cudaGraphNode_t , nodeParams : * mut cudaGraphNodeParams ,) -> cudaError_t { unsafe { culib () . cudaGraphExecNodeSetParams (graphExec , node , nodeParams) } }
pub unsafe fn cudaGraphConditionalHandleCreate (pHandle_out : * mut cudaGraphConditionalHandle , graph : cudaGraph_t , defaultLaunchValue : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaGraphConditionalHandleCreate (pHandle_out , graph , defaultLaunchValue , flags) } }
pub unsafe fn cudaGetDriverEntryPoint (symbol : * const :: core :: ffi :: c_char , funcPtr : * mut * mut :: core :: ffi :: c_void , flags : :: core :: ffi :: c_ulonglong , driverStatus : * mut cudaDriverEntryPointQueryResult ,) -> cudaError_t { unsafe { culib () . cudaGetDriverEntryPoint (symbol , funcPtr , flags , driverStatus) } }
pub unsafe fn cudaGetDriverEntryPointByVersion (symbol : * const :: core :: ffi :: c_char , funcPtr : * mut * mut :: core :: ffi :: c_void , cudaVersion : :: core :: ffi :: c_uint , flags : :: core :: ffi :: c_ulonglong , driverStatus : * mut cudaDriverEntryPointQueryResult ,) -> cudaError_t { unsafe { culib () . cudaGetDriverEntryPointByVersion (symbol , funcPtr , cudaVersion , flags , driverStatus) } }
pub unsafe fn cudaLibraryLoadData (library : * mut cudaLibrary_t , code : * const :: core :: ffi :: c_void , jitOptions : * mut cudaJitOption , jitOptionsValues : * mut * mut :: core :: ffi :: c_void , numJitOptions : :: core :: ffi :: c_uint , libraryOptions : * mut cudaLibraryOption , libraryOptionValues : * mut * mut :: core :: ffi :: c_void , numLibraryOptions : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaLibraryLoadData (library , code , jitOptions , jitOptionsValues , numJitOptions , libraryOptions , libraryOptionValues , numLibraryOptions) } }
pub unsafe fn cudaLibraryLoadFromFile (library : * mut cudaLibrary_t , fileName : * const :: core :: ffi :: c_char , jitOptions : * mut cudaJitOption , jitOptionsValues : * mut * mut :: core :: ffi :: c_void , numJitOptions : :: core :: ffi :: c_uint , libraryOptions : * mut cudaLibraryOption , libraryOptionValues : * mut * mut :: core :: ffi :: c_void , numLibraryOptions : :: core :: ffi :: c_uint ,) -> cudaError_t { unsafe { culib () . cudaLibraryLoadFromFile (library , fileName , jitOptions , jitOptionsValues , numJitOptions , libraryOptions , libraryOptionValues , numLibraryOptions) } }
pub unsafe fn cudaLibraryUnload (library : cudaLibrary_t) -> cudaError_t { unsafe { culib () . cudaLibraryUnload (library) } }
pub unsafe fn cudaLibraryGetKernel (pKernel : * mut cudaKernel_t , library : cudaLibrary_t , name : * const :: core :: ffi :: c_char ,) -> cudaError_t { unsafe { culib () . cudaLibraryGetKernel (pKernel , library , name) } }
pub unsafe fn cudaLibraryGetGlobal (dptr : * mut * mut :: core :: ffi :: c_void , bytes : * mut usize , library : cudaLibrary_t , name : * const :: core :: ffi :: c_char ,) -> cudaError_t { unsafe { culib () . cudaLibraryGetGlobal (dptr , bytes , library , name) } }
pub unsafe fn cudaLibraryGetManaged (dptr : * mut * mut :: core :: ffi :: c_void , bytes : * mut usize , library : cudaLibrary_t , name : * const :: core :: ffi :: c_char ,) -> cudaError_t { unsafe { culib () . cudaLibraryGetManaged (dptr , bytes , library , name) } }
pub unsafe fn cudaLibraryGetUnifiedFunction (fptr : * mut * mut :: core :: ffi :: c_void , library : cudaLibrary_t , symbol : * const :: core :: ffi :: c_char ,) -> cudaError_t { unsafe { culib () . cudaLibraryGetUnifiedFunction (fptr , library , symbol) } }
pub unsafe fn cudaLibraryGetKernelCount (count : * mut :: core :: ffi :: c_uint , lib : cudaLibrary_t ,) -> cudaError_t { unsafe { culib () . cudaLibraryGetKernelCount (count , lib) } }
pub unsafe fn cudaLibraryEnumerateKernels (kernels : * mut cudaKernel_t , numKernels : :: core :: ffi :: c_uint , lib : cudaLibrary_t ,) -> cudaError_t { unsafe { culib () . cudaLibraryEnumerateKernels (kernels , numKernels , lib) } }
pub unsafe fn cudaKernelSetAttributeForDevice (kernel : cudaKernel_t , attr : cudaFuncAttribute , value : :: core :: ffi :: c_int , device : :: core :: ffi :: c_int ,) -> cudaError_t { unsafe { culib () . cudaKernelSetAttributeForDevice (kernel , attr , value , device) } }
pub unsafe fn cudaGetExportTable (ppExportTable : * mut * const :: core :: ffi :: c_void , pExportTableId : * const cudaUUID_t ,) -> cudaError_t { unsafe { culib () . cudaGetExportTable (ppExportTable , pExportTableId) } }
pub unsafe fn cudaGetFuncBySymbol (functionPtr : * mut cudaFunction_t , symbolPtr : * const :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaGetFuncBySymbol (functionPtr , symbolPtr) } }
pub unsafe fn cudaGetKernel (kernelPtr : * mut cudaKernel_t , entryFuncAddr : * const :: core :: ffi :: c_void ,) -> cudaError_t { unsafe { culib () . cudaGetKernel (kernelPtr , entryFuncAddr) } }
pub unsafe fn cudaProfilerStart () -> cudaError_t { unsafe { culib () . cudaProfilerStart () } }
pub unsafe fn cudaProfilerStop () -> cudaError_t { unsafe { culib () . cudaProfilerStop () } }
