use super :: * ;pub unsafe fn cublasLtCreate (lightHandle : * mut cublasLtHandle_t) -> cublasStatus_t { unsafe { culib () . cublasLtCreate (lightHandle) } }
pub unsafe fn cublasLtDestroy (lightHandle : cublasLtHandle_t) -> cublasStatus_t { unsafe { culib () . cublasLtDestroy (lightHandle) } }
pub unsafe fn cublasLtGetStatusName (status : cublasStatus_t) -> * const :: core :: ffi :: c_char { unsafe { culib () . cublasLtGetStatusName (status) } }
pub unsafe fn cublasLtGetStatusString (status : cublasStatus_t) -> * const :: core :: ffi :: c_char { unsafe { culib () . cublasLtGetStatusString (status) } }
pub unsafe fn cublasLtGetVersion () -> usize { unsafe { culib () . cublasLtGetVersion () } }
pub unsafe fn cublasLtGetCudartVersion () -> usize { unsafe { culib () . cublasLtGetCudartVersion () } }
pub unsafe fn cublasLtGetProperty (type_ : libraryPropertyType , value : * mut :: core :: ffi :: c_int ,) -> cublasStatus_t { unsafe { culib () . cublasLtGetProperty (type_ , value) } }
pub unsafe fn cublasLtHeuristicsCacheGetCapacity (capacity : * mut usize) -> cublasStatus_t { unsafe { culib () . cublasLtHeuristicsCacheGetCapacity (capacity) } }
pub unsafe fn cublasLtHeuristicsCacheSetCapacity (capacity : usize) -> cublasStatus_t { unsafe { culib () . cublasLtHeuristicsCacheSetCapacity (capacity) } }
pub unsafe fn cublasLtDisableCpuInstructionsSetMask (mask : :: core :: ffi :: c_uint) -> :: core :: ffi :: c_uint { unsafe { culib () . cublasLtDisableCpuInstructionsSetMask (mask) } }
pub unsafe fn cublasLtMatmul (lightHandle : cublasLtHandle_t , computeDesc : cublasLtMatmulDesc_t , alpha : * const :: core :: ffi :: c_void , A : * const :: core :: ffi :: c_void , Adesc : cublasLtMatrixLayout_t , B : * const :: core :: ffi :: c_void , Bdesc : cublasLtMatrixLayout_t , beta : * const :: core :: ffi :: c_void , C : * const :: core :: ffi :: c_void , Cdesc : cublasLtMatrixLayout_t , D : * mut :: core :: ffi :: c_void , Ddesc : cublasLtMatrixLayout_t , algo : * const cublasLtMatmulAlgo_t , workspace : * mut :: core :: ffi :: c_void , workspaceSizeInBytes : usize , stream : cudaStream_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmul (lightHandle , computeDesc , alpha , A , Adesc , B , Bdesc , beta , C , Cdesc , D , Ddesc , algo , workspace , workspaceSizeInBytes , stream) } }
pub unsafe fn cublasLtMatrixTransform (lightHandle : cublasLtHandle_t , transformDesc : cublasLtMatrixTransformDesc_t , alpha : * const :: core :: ffi :: c_void , A : * const :: core :: ffi :: c_void , Adesc : cublasLtMatrixLayout_t , beta : * const :: core :: ffi :: c_void , B : * const :: core :: ffi :: c_void , Bdesc : cublasLtMatrixLayout_t , C : * mut :: core :: ffi :: c_void , Cdesc : cublasLtMatrixLayout_t , stream : cudaStream_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixTransform (lightHandle , transformDesc , alpha , A , Adesc , beta , B , Bdesc , C , Cdesc , stream) } }
pub unsafe fn cublasLtMatrixLayoutInit_internal (matLayout : cublasLtMatrixLayout_t , size : usize , type_ : cudaDataType , rows : u64 , cols : u64 , ld : i64 ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixLayoutInit_internal (matLayout , size , type_ , rows , cols , ld) } }
pub unsafe fn cublasLtMatrixLayoutCreate (matLayout : * mut cublasLtMatrixLayout_t , type_ : cudaDataType , rows : u64 , cols : u64 , ld : i64 ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixLayoutCreate (matLayout , type_ , rows , cols , ld) } }
pub unsafe fn cublasLtMatrixLayoutDestroy (matLayout : cublasLtMatrixLayout_t) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixLayoutDestroy (matLayout) } }
pub unsafe fn cublasLtMatrixLayoutSetAttribute (matLayout : cublasLtMatrixLayout_t , attr : cublasLtMatrixLayoutAttribute_t , buf : * const :: core :: ffi :: c_void , sizeInBytes : usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixLayoutSetAttribute (matLayout , attr , buf , sizeInBytes) } }
pub unsafe fn cublasLtMatrixLayoutGetAttribute (matLayout : cublasLtMatrixLayout_t , attr : cublasLtMatrixLayoutAttribute_t , buf : * mut :: core :: ffi :: c_void , sizeInBytes : usize , sizeWritten : * mut usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixLayoutGetAttribute (matLayout , attr , buf , sizeInBytes , sizeWritten) } }
pub unsafe fn cublasLtMatmulDescInit_internal (matmulDesc : cublasLtMatmulDesc_t , size : usize , computeType : cublasComputeType_t , scaleType : cudaDataType_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulDescInit_internal (matmulDesc , size , computeType , scaleType) } }
pub unsafe fn cublasLtMatmulDescCreate (matmulDesc : * mut cublasLtMatmulDesc_t , computeType : cublasComputeType_t , scaleType : cudaDataType_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulDescCreate (matmulDesc , computeType , scaleType) } }
pub unsafe fn cublasLtMatmulDescDestroy (matmulDesc : cublasLtMatmulDesc_t) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulDescDestroy (matmulDesc) } }
pub unsafe fn cublasLtMatmulDescSetAttribute (matmulDesc : cublasLtMatmulDesc_t , attr : cublasLtMatmulDescAttributes_t , buf : * const :: core :: ffi :: c_void , sizeInBytes : usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulDescSetAttribute (matmulDesc , attr , buf , sizeInBytes) } }
pub unsafe fn cublasLtMatmulDescGetAttribute (matmulDesc : cublasLtMatmulDesc_t , attr : cublasLtMatmulDescAttributes_t , buf : * mut :: core :: ffi :: c_void , sizeInBytes : usize , sizeWritten : * mut usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulDescGetAttribute (matmulDesc , attr , buf , sizeInBytes , sizeWritten) } }
pub unsafe fn cublasLtMatrixTransformDescInit_internal (transformDesc : cublasLtMatrixTransformDesc_t , size : usize , scaleType : cudaDataType ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixTransformDescInit_internal (transformDesc , size , scaleType) } }
pub unsafe fn cublasLtMatrixTransformDescCreate (transformDesc : * mut cublasLtMatrixTransformDesc_t , scaleType : cudaDataType ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixTransformDescCreate (transformDesc , scaleType) } }
pub unsafe fn cublasLtMatrixTransformDescDestroy (transformDesc : cublasLtMatrixTransformDesc_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixTransformDescDestroy (transformDesc) } }
pub unsafe fn cublasLtMatrixTransformDescSetAttribute (transformDesc : cublasLtMatrixTransformDesc_t , attr : cublasLtMatrixTransformDescAttributes_t , buf : * const :: core :: ffi :: c_void , sizeInBytes : usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixTransformDescSetAttribute (transformDesc , attr , buf , sizeInBytes) } }
pub unsafe fn cublasLtMatrixTransformDescGetAttribute (transformDesc : cublasLtMatrixTransformDesc_t , attr : cublasLtMatrixTransformDescAttributes_t , buf : * mut :: core :: ffi :: c_void , sizeInBytes : usize , sizeWritten : * mut usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatrixTransformDescGetAttribute (transformDesc , attr , buf , sizeInBytes , sizeWritten) } }
pub unsafe fn cublasLtMatmulPreferenceInit_internal (pref : cublasLtMatmulPreference_t , size : usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulPreferenceInit_internal (pref , size) } }
pub unsafe fn cublasLtMatmulPreferenceCreate (pref : * mut cublasLtMatmulPreference_t) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulPreferenceCreate (pref) } }
pub unsafe fn cublasLtMatmulPreferenceDestroy (pref : cublasLtMatmulPreference_t) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulPreferenceDestroy (pref) } }
pub unsafe fn cublasLtMatmulPreferenceSetAttribute (pref : cublasLtMatmulPreference_t , attr : cublasLtMatmulPreferenceAttributes_t , buf : * const :: core :: ffi :: c_void , sizeInBytes : usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulPreferenceSetAttribute (pref , attr , buf , sizeInBytes) } }
pub unsafe fn cublasLtMatmulPreferenceGetAttribute (pref : cublasLtMatmulPreference_t , attr : cublasLtMatmulPreferenceAttributes_t , buf : * mut :: core :: ffi :: c_void , sizeInBytes : usize , sizeWritten : * mut usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulPreferenceGetAttribute (pref , attr , buf , sizeInBytes , sizeWritten) } }
pub unsafe fn cublasLtMatmulAlgoGetHeuristic (lightHandle : cublasLtHandle_t , operationDesc : cublasLtMatmulDesc_t , Adesc : cublasLtMatrixLayout_t , Bdesc : cublasLtMatrixLayout_t , Cdesc : cublasLtMatrixLayout_t , Ddesc : cublasLtMatrixLayout_t , preference : cublasLtMatmulPreference_t , requestedAlgoCount : :: core :: ffi :: c_int , heuristicResultsArray : * mut cublasLtMatmulHeuristicResult_t , returnAlgoCount : * mut :: core :: ffi :: c_int ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoGetHeuristic (lightHandle , operationDesc , Adesc , Bdesc , Cdesc , Ddesc , preference , requestedAlgoCount , heuristicResultsArray , returnAlgoCount) } }
pub unsafe fn cublasLtMatmulAlgoGetIds (lightHandle : cublasLtHandle_t , computeType : cublasComputeType_t , scaleType : cudaDataType_t , Atype : cudaDataType_t , Btype : cudaDataType_t , Ctype : cudaDataType_t , Dtype : cudaDataType_t , requestedAlgoCount : :: core :: ffi :: c_int , algoIdsArray : * mut :: core :: ffi :: c_int , returnAlgoCount : * mut :: core :: ffi :: c_int ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoGetIds (lightHandle , computeType , scaleType , Atype , Btype , Ctype , Dtype , requestedAlgoCount , algoIdsArray , returnAlgoCount) } }
pub unsafe fn cublasLtMatmulAlgoInit (lightHandle : cublasLtHandle_t , computeType : cublasComputeType_t , scaleType : cudaDataType_t , Atype : cudaDataType_t , Btype : cudaDataType_t , Ctype : cudaDataType_t , Dtype : cudaDataType_t , algoId : :: core :: ffi :: c_int , algo : * mut cublasLtMatmulAlgo_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoInit (lightHandle , computeType , scaleType , Atype , Btype , Ctype , Dtype , algoId , algo) } }
pub unsafe fn cublasLtMatmulAlgoCheck (lightHandle : cublasLtHandle_t , operationDesc : cublasLtMatmulDesc_t , Adesc : cublasLtMatrixLayout_t , Bdesc : cublasLtMatrixLayout_t , Cdesc : cublasLtMatrixLayout_t , Ddesc : cublasLtMatrixLayout_t , algo : * const cublasLtMatmulAlgo_t , result : * mut cublasLtMatmulHeuristicResult_t ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoCheck (lightHandle , operationDesc , Adesc , Bdesc , Cdesc , Ddesc , algo , result) } }
pub unsafe fn cublasLtMatmulAlgoCapGetAttribute (algo : * const cublasLtMatmulAlgo_t , attr : cublasLtMatmulAlgoCapAttributes_t , buf : * mut :: core :: ffi :: c_void , sizeInBytes : usize , sizeWritten : * mut usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoCapGetAttribute (algo , attr , buf , sizeInBytes , sizeWritten) } }
pub unsafe fn cublasLtMatmulAlgoConfigSetAttribute (algo : * mut cublasLtMatmulAlgo_t , attr : cublasLtMatmulAlgoConfigAttributes_t , buf : * const :: core :: ffi :: c_void , sizeInBytes : usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoConfigSetAttribute (algo , attr , buf , sizeInBytes) } }
pub unsafe fn cublasLtMatmulAlgoConfigGetAttribute (algo : * const cublasLtMatmulAlgo_t , attr : cublasLtMatmulAlgoConfigAttributes_t , buf : * mut :: core :: ffi :: c_void , sizeInBytes : usize , sizeWritten : * mut usize ,) -> cublasStatus_t { unsafe { culib () . cublasLtMatmulAlgoConfigGetAttribute (algo , attr , buf , sizeInBytes , sizeWritten) } }
pub unsafe fn cublasLtLoggerSetCallback (callback : cublasLtLoggerCallback_t) -> cublasStatus_t { unsafe { culib () . cublasLtLoggerSetCallback (callback) } }
pub unsafe fn cublasLtLoggerSetFile (file : * mut FILE) -> cublasStatus_t { unsafe { culib () . cublasLtLoggerSetFile (file) } }
pub unsafe fn cublasLtLoggerOpenFile (logFile : * const :: core :: ffi :: c_char) -> cublasStatus_t { unsafe { culib () . cublasLtLoggerOpenFile (logFile) } }
pub unsafe fn cublasLtLoggerSetLevel (level : :: core :: ffi :: c_int) -> cublasStatus_t { unsafe { culib () . cublasLtLoggerSetLevel (level) } }
pub unsafe fn cublasLtLoggerSetMask (mask : :: core :: ffi :: c_int) -> cublasStatus_t { unsafe { culib () . cublasLtLoggerSetMask (mask) } }
pub unsafe fn cublasLtLoggerForceDisable () -> cublasStatus_t { unsafe { culib () . cublasLtLoggerForceDisable () } }
