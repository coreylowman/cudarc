/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub struct __BindgenBitfieldUnit<Storage> {
    storage: Storage,
}
impl<Storage> __BindgenBitfieldUnit<Storage> {
    #[inline]
    pub const fn new(storage: Storage) -> Self {
        Self { storage }
    }
}
impl<Storage> __BindgenBitfieldUnit<Storage>
where
    Storage: AsRef<[u8]> + AsMut<[u8]>,
{
    #[inline]
    fn extract_bit(byte: u8, index: usize) -> bool {
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        byte & mask == mask
    }
    #[inline]
    pub fn get_bit(&self, index: usize) -> bool {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = self.storage.as_ref()[byte_index];
        Self::extract_bit(byte, index)
    }
    #[inline]
    pub unsafe fn raw_get_bit(this: *const Self, index: usize) -> bool {
        debug_assert!(index / 8 < core::mem::size_of::<Storage>());
        let byte_index = index / 8;
        let byte = *(core::ptr::addr_of!((*this).storage) as *const u8).offset(byte_index as isize);
        Self::extract_bit(byte, index)
    }
    #[inline]
    fn change_bit(byte: u8, index: usize, val: bool) -> u8 {
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        if val {
            byte | mask
        } else {
            byte & !mask
        }
    }
    #[inline]
    pub fn set_bit(&mut self, index: usize, val: bool) {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = &mut self.storage.as_mut()[byte_index];
        *byte = Self::change_bit(*byte, index, val);
    }
    #[inline]
    pub unsafe fn raw_set_bit(this: *mut Self, index: usize, val: bool) {
        debug_assert!(index / 8 < core::mem::size_of::<Storage>());
        let byte_index = index / 8;
        let byte =
            (core::ptr::addr_of_mut!((*this).storage) as *mut u8).offset(byte_index as isize);
        *byte = Self::change_bit(*byte, index, val);
    }
    #[inline]
    pub fn get(&self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if self.get_bit(i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub unsafe fn raw_get(this: *const Self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < core::mem::size_of::<Storage>());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= core::mem::size_of::<Storage>());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if Self::raw_get_bit(this, i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub fn set(&mut self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            self.set_bit(index + bit_offset, val_bit_is_set);
        }
    }
    #[inline]
    pub unsafe fn raw_set(this: *mut Self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < core::mem::size_of::<Storage>());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= core::mem::size_of::<Storage>());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            Self::raw_set_bit(this, index + bit_offset, val_bit_is_set);
        }
    }
}
pub const CUDA_VERSION: u32 = 12080;
pub type __off_t = ::core::ffi::c_long;
pub type __off64_t = ::core::ffi::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CUstream_st {
    _unused: [u8; 0],
}
pub type cudaStream_t = *mut CUstream_st;
impl cudaDataType_t {
    pub const CUDA_R_8F_UE4M3: cudaDataType_t = cudaDataType_t::CUDA_R_8F_E4M3;
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cudaDataType_t {
    CUDA_R_16F = 2,
    CUDA_C_16F = 6,
    CUDA_R_16BF = 14,
    CUDA_C_16BF = 15,
    CUDA_R_32F = 0,
    CUDA_C_32F = 4,
    CUDA_R_64F = 1,
    CUDA_C_64F = 5,
    CUDA_R_4I = 16,
    CUDA_C_4I = 17,
    CUDA_R_4U = 18,
    CUDA_C_4U = 19,
    CUDA_R_8I = 3,
    CUDA_C_8I = 7,
    CUDA_R_8U = 8,
    CUDA_C_8U = 9,
    CUDA_R_16I = 20,
    CUDA_C_16I = 21,
    CUDA_R_16U = 22,
    CUDA_C_16U = 23,
    CUDA_R_32I = 10,
    CUDA_C_32I = 11,
    CUDA_R_32U = 12,
    CUDA_C_32U = 13,
    CUDA_R_64I = 24,
    CUDA_C_64I = 25,
    CUDA_R_64U = 26,
    CUDA_C_64U = 27,
    CUDA_R_8F_E4M3 = 28,
    CUDA_R_8F_E5M2 = 29,
    CUDA_R_8F_UE8M0 = 30,
    CUDA_R_6F_E2M3 = 31,
    CUDA_R_6F_E3M2 = 32,
    CUDA_R_4F_E2M1 = 33,
}
pub use self::cudaDataType_t as cudaDataType;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum libraryPropertyType_t {
    MAJOR_VERSION = 0,
    MINOR_VERSION = 1,
    PATCH_LEVEL = 2,
}
pub use self::libraryPropertyType_t as libraryPropertyType;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasStatus_t {
    CUBLAS_STATUS_SUCCESS = 0,
    CUBLAS_STATUS_NOT_INITIALIZED = 1,
    CUBLAS_STATUS_ALLOC_FAILED = 3,
    CUBLAS_STATUS_INVALID_VALUE = 7,
    CUBLAS_STATUS_ARCH_MISMATCH = 8,
    CUBLAS_STATUS_MAPPING_ERROR = 11,
    CUBLAS_STATUS_EXECUTION_FAILED = 13,
    CUBLAS_STATUS_INTERNAL_ERROR = 14,
    CUBLAS_STATUS_NOT_SUPPORTED = 15,
    CUBLAS_STATUS_LICENSE_ERROR = 16,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasComputeType_t {
    CUBLAS_COMPUTE_16F = 64,
    CUBLAS_COMPUTE_16F_PEDANTIC = 65,
    CUBLAS_COMPUTE_32F = 68,
    CUBLAS_COMPUTE_32F_PEDANTIC = 69,
    CUBLAS_COMPUTE_32F_FAST_16F = 74,
    CUBLAS_COMPUTE_32F_FAST_16BF = 75,
    CUBLAS_COMPUTE_32F_FAST_TF32 = 77,
    CUBLAS_COMPUTE_64F = 70,
    CUBLAS_COMPUTE_64F_PEDANTIC = 71,
    CUBLAS_COMPUTE_32I = 72,
    CUBLAS_COMPUTE_32I_PEDANTIC = 73,
}
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = ::core::ffi::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct _IO_FILE {
    pub _flags: ::core::ffi::c_int,
    pub _IO_read_ptr: *mut ::core::ffi::c_char,
    pub _IO_read_end: *mut ::core::ffi::c_char,
    pub _IO_read_base: *mut ::core::ffi::c_char,
    pub _IO_write_base: *mut ::core::ffi::c_char,
    pub _IO_write_ptr: *mut ::core::ffi::c_char,
    pub _IO_write_end: *mut ::core::ffi::c_char,
    pub _IO_buf_base: *mut ::core::ffi::c_char,
    pub _IO_buf_end: *mut ::core::ffi::c_char,
    pub _IO_save_base: *mut ::core::ffi::c_char,
    pub _IO_backup_base: *mut ::core::ffi::c_char,
    pub _IO_save_end: *mut ::core::ffi::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::core::ffi::c_int,
    pub _bitfield_align_1: [u32; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 3usize]>,
    pub _short_backupbuf: [::core::ffi::c_char; 1usize],
    pub _old_offset: __off_t,
    pub _cur_column: ::core::ffi::c_ushort,
    pub _vtable_offset: ::core::ffi::c_schar,
    pub _shortbuf: [::core::ffi::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut ::core::ffi::c_void,
    pub _prevchain: *mut *mut _IO_FILE,
    pub _mode: ::core::ffi::c_int,
    pub _unused2: [::core::ffi::c_char; 20usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _IO_FILE"][::core::mem::size_of::<_IO_FILE>() - 216usize];
    ["Alignment of _IO_FILE"][::core::mem::align_of::<_IO_FILE>() - 8usize];
    ["Offset of field: _IO_FILE::_flags"][::core::mem::offset_of!(_IO_FILE, _flags) - 0usize];
    ["Offset of field: _IO_FILE::_IO_read_ptr"]
        [::core::mem::offset_of!(_IO_FILE, _IO_read_ptr) - 8usize];
    ["Offset of field: _IO_FILE::_IO_read_end"]
        [::core::mem::offset_of!(_IO_FILE, _IO_read_end) - 16usize];
    ["Offset of field: _IO_FILE::_IO_read_base"]
        [::core::mem::offset_of!(_IO_FILE, _IO_read_base) - 24usize];
    ["Offset of field: _IO_FILE::_IO_write_base"]
        [::core::mem::offset_of!(_IO_FILE, _IO_write_base) - 32usize];
    ["Offset of field: _IO_FILE::_IO_write_ptr"]
        [::core::mem::offset_of!(_IO_FILE, _IO_write_ptr) - 40usize];
    ["Offset of field: _IO_FILE::_IO_write_end"]
        [::core::mem::offset_of!(_IO_FILE, _IO_write_end) - 48usize];
    ["Offset of field: _IO_FILE::_IO_buf_base"]
        [::core::mem::offset_of!(_IO_FILE, _IO_buf_base) - 56usize];
    ["Offset of field: _IO_FILE::_IO_buf_end"]
        [::core::mem::offset_of!(_IO_FILE, _IO_buf_end) - 64usize];
    ["Offset of field: _IO_FILE::_IO_save_base"]
        [::core::mem::offset_of!(_IO_FILE, _IO_save_base) - 72usize];
    ["Offset of field: _IO_FILE::_IO_backup_base"]
        [::core::mem::offset_of!(_IO_FILE, _IO_backup_base) - 80usize];
    ["Offset of field: _IO_FILE::_IO_save_end"]
        [::core::mem::offset_of!(_IO_FILE, _IO_save_end) - 88usize];
    ["Offset of field: _IO_FILE::_markers"][::core::mem::offset_of!(_IO_FILE, _markers) - 96usize];
    ["Offset of field: _IO_FILE::_chain"][::core::mem::offset_of!(_IO_FILE, _chain) - 104usize];
    ["Offset of field: _IO_FILE::_fileno"][::core::mem::offset_of!(_IO_FILE, _fileno) - 112usize];
    ["Offset of field: _IO_FILE::_short_backupbuf"]
        [::core::mem::offset_of!(_IO_FILE, _short_backupbuf) - 119usize];
    ["Offset of field: _IO_FILE::_old_offset"]
        [::core::mem::offset_of!(_IO_FILE, _old_offset) - 120usize];
    ["Offset of field: _IO_FILE::_cur_column"]
        [::core::mem::offset_of!(_IO_FILE, _cur_column) - 128usize];
    ["Offset of field: _IO_FILE::_vtable_offset"]
        [::core::mem::offset_of!(_IO_FILE, _vtable_offset) - 130usize];
    ["Offset of field: _IO_FILE::_shortbuf"]
        [::core::mem::offset_of!(_IO_FILE, _shortbuf) - 131usize];
    ["Offset of field: _IO_FILE::_lock"][::core::mem::offset_of!(_IO_FILE, _lock) - 136usize];
    ["Offset of field: _IO_FILE::_offset"][::core::mem::offset_of!(_IO_FILE, _offset) - 144usize];
    ["Offset of field: _IO_FILE::_codecvt"][::core::mem::offset_of!(_IO_FILE, _codecvt) - 152usize];
    ["Offset of field: _IO_FILE::_wide_data"]
        [::core::mem::offset_of!(_IO_FILE, _wide_data) - 160usize];
    ["Offset of field: _IO_FILE::_freeres_list"]
        [::core::mem::offset_of!(_IO_FILE, _freeres_list) - 168usize];
    ["Offset of field: _IO_FILE::_freeres_buf"]
        [::core::mem::offset_of!(_IO_FILE, _freeres_buf) - 176usize];
    ["Offset of field: _IO_FILE::_prevchain"]
        [::core::mem::offset_of!(_IO_FILE, _prevchain) - 184usize];
    ["Offset of field: _IO_FILE::_mode"][::core::mem::offset_of!(_IO_FILE, _mode) - 192usize];
    ["Offset of field: _IO_FILE::_unused2"][::core::mem::offset_of!(_IO_FILE, _unused2) - 196usize];
};
impl Default for _IO_FILE {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
impl _IO_FILE {
    #[inline]
    pub fn _flags2(&self) -> ::core::ffi::c_int {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 24u8) as u32) }
    }
    #[inline]
    pub fn set__flags2(&mut self, val: ::core::ffi::c_int) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 24u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn _flags2_raw(this: *const Self) -> ::core::ffi::c_int {
        unsafe {
            ::core::mem::transmute(<__BindgenBitfieldUnit<[u8; 3usize]>>::raw_get(
                ::core::ptr::addr_of!((*this)._bitfield_1),
                0usize,
                24u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set__flags2_raw(this: *mut Self, val: ::core::ffi::c_int) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 3usize]>>::raw_set(
                ::core::ptr::addr_of_mut!((*this)._bitfield_1),
                0usize,
                24u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn new_bitfield_1(_flags2: ::core::ffi::c_int) -> __BindgenBitfieldUnit<[u8; 3usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 3usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 24u8, {
            let _flags2: u32 = unsafe { ::core::mem::transmute(_flags2) };
            _flags2 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cublasLtContext {
    _unused: [u8; 0],
}
pub type cublasLtHandle_t = *mut cublasLtContext;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct cublasLtMatrixLayoutOpaque_t {
    pub data: [u64; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cublasLtMatrixLayoutOpaque_t"]
        [::core::mem::size_of::<cublasLtMatrixLayoutOpaque_t>() - 64usize];
    ["Alignment of cublasLtMatrixLayoutOpaque_t"]
        [::core::mem::align_of::<cublasLtMatrixLayoutOpaque_t>() - 8usize];
    ["Offset of field: cublasLtMatrixLayoutOpaque_t::data"]
        [::core::mem::offset_of!(cublasLtMatrixLayoutOpaque_t, data) - 0usize];
};
pub type cublasLtMatrixLayout_t = *mut cublasLtMatrixLayoutOpaque_t;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct cublasLtMatmulAlgo_t {
    pub data: [u64; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cublasLtMatmulAlgo_t"][::core::mem::size_of::<cublasLtMatmulAlgo_t>() - 64usize];
    ["Alignment of cublasLtMatmulAlgo_t"][::core::mem::align_of::<cublasLtMatmulAlgo_t>() - 8usize];
    ["Offset of field: cublasLtMatmulAlgo_t::data"]
        [::core::mem::offset_of!(cublasLtMatmulAlgo_t, data) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct cublasLtMatmulDescOpaque_t {
    pub data: [u64; 32usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cublasLtMatmulDescOpaque_t"]
        [::core::mem::size_of::<cublasLtMatmulDescOpaque_t>() - 256usize];
    ["Alignment of cublasLtMatmulDescOpaque_t"]
        [::core::mem::align_of::<cublasLtMatmulDescOpaque_t>() - 8usize];
    ["Offset of field: cublasLtMatmulDescOpaque_t::data"]
        [::core::mem::offset_of!(cublasLtMatmulDescOpaque_t, data) - 0usize];
};
pub type cublasLtMatmulDesc_t = *mut cublasLtMatmulDescOpaque_t;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct cublasLtMatrixTransformDescOpaque_t {
    pub data: [u64; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cublasLtMatrixTransformDescOpaque_t"]
        [::core::mem::size_of::<cublasLtMatrixTransformDescOpaque_t>() - 64usize];
    ["Alignment of cublasLtMatrixTransformDescOpaque_t"]
        [::core::mem::align_of::<cublasLtMatrixTransformDescOpaque_t>() - 8usize];
    ["Offset of field: cublasLtMatrixTransformDescOpaque_t::data"]
        [::core::mem::offset_of!(cublasLtMatrixTransformDescOpaque_t, data) - 0usize];
};
pub type cublasLtMatrixTransformDesc_t = *mut cublasLtMatrixTransformDescOpaque_t;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct cublasLtMatmulPreferenceOpaque_t {
    pub data: [u64; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cublasLtMatmulPreferenceOpaque_t"]
        [::core::mem::size_of::<cublasLtMatmulPreferenceOpaque_t>() - 64usize];
    ["Alignment of cublasLtMatmulPreferenceOpaque_t"]
        [::core::mem::align_of::<cublasLtMatmulPreferenceOpaque_t>() - 8usize];
    ["Offset of field: cublasLtMatmulPreferenceOpaque_t::data"]
        [::core::mem::offset_of!(cublasLtMatmulPreferenceOpaque_t, data) - 0usize];
};
pub type cublasLtMatmulPreference_t = *mut cublasLtMatmulPreferenceOpaque_t;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulTile_t {
    CUBLASLT_MATMUL_TILE_UNDEFINED = 0,
    CUBLASLT_MATMUL_TILE_8x8 = 1,
    CUBLASLT_MATMUL_TILE_8x16 = 2,
    CUBLASLT_MATMUL_TILE_16x8 = 3,
    CUBLASLT_MATMUL_TILE_8x32 = 4,
    CUBLASLT_MATMUL_TILE_16x16 = 5,
    CUBLASLT_MATMUL_TILE_32x8 = 6,
    CUBLASLT_MATMUL_TILE_8x64 = 7,
    CUBLASLT_MATMUL_TILE_16x32 = 8,
    CUBLASLT_MATMUL_TILE_32x16 = 9,
    CUBLASLT_MATMUL_TILE_64x8 = 10,
    CUBLASLT_MATMUL_TILE_32x32 = 11,
    CUBLASLT_MATMUL_TILE_32x64 = 12,
    CUBLASLT_MATMUL_TILE_64x32 = 13,
    CUBLASLT_MATMUL_TILE_32x128 = 14,
    CUBLASLT_MATMUL_TILE_64x64 = 15,
    CUBLASLT_MATMUL_TILE_128x32 = 16,
    CUBLASLT_MATMUL_TILE_64x128 = 17,
    CUBLASLT_MATMUL_TILE_128x64 = 18,
    CUBLASLT_MATMUL_TILE_64x256 = 19,
    CUBLASLT_MATMUL_TILE_128x128 = 20,
    CUBLASLT_MATMUL_TILE_256x64 = 21,
    CUBLASLT_MATMUL_TILE_64x512 = 22,
    CUBLASLT_MATMUL_TILE_128x256 = 23,
    CUBLASLT_MATMUL_TILE_256x128 = 24,
    CUBLASLT_MATMUL_TILE_512x64 = 25,
    CUBLASLT_MATMUL_TILE_64x96 = 26,
    CUBLASLT_MATMUL_TILE_96x64 = 27,
    CUBLASLT_MATMUL_TILE_96x128 = 28,
    CUBLASLT_MATMUL_TILE_128x160 = 29,
    CUBLASLT_MATMUL_TILE_160x128 = 30,
    CUBLASLT_MATMUL_TILE_192x128 = 31,
    CUBLASLT_MATMUL_TILE_128x192 = 32,
    CUBLASLT_MATMUL_TILE_128x96 = 33,
    CUBLASLT_MATMUL_TILE_32x256 = 34,
    CUBLASLT_MATMUL_TILE_256x32 = 35,
    CUBLASLT_MATMUL_TILE_8x128 = 36,
    CUBLASLT_MATMUL_TILE_8x192 = 37,
    CUBLASLT_MATMUL_TILE_8x256 = 38,
    CUBLASLT_MATMUL_TILE_8x320 = 39,
    CUBLASLT_MATMUL_TILE_8x384 = 40,
    CUBLASLT_MATMUL_TILE_8x448 = 41,
    CUBLASLT_MATMUL_TILE_8x512 = 42,
    CUBLASLT_MATMUL_TILE_8x576 = 43,
    CUBLASLT_MATMUL_TILE_8x640 = 44,
    CUBLASLT_MATMUL_TILE_8x704 = 45,
    CUBLASLT_MATMUL_TILE_8x768 = 46,
    CUBLASLT_MATMUL_TILE_16x64 = 47,
    CUBLASLT_MATMUL_TILE_16x128 = 48,
    CUBLASLT_MATMUL_TILE_16x192 = 49,
    CUBLASLT_MATMUL_TILE_16x256 = 50,
    CUBLASLT_MATMUL_TILE_16x320 = 51,
    CUBLASLT_MATMUL_TILE_16x384 = 52,
    CUBLASLT_MATMUL_TILE_16x448 = 53,
    CUBLASLT_MATMUL_TILE_16x512 = 54,
    CUBLASLT_MATMUL_TILE_16x576 = 55,
    CUBLASLT_MATMUL_TILE_16x640 = 56,
    CUBLASLT_MATMUL_TILE_16x704 = 57,
    CUBLASLT_MATMUL_TILE_16x768 = 58,
    CUBLASLT_MATMUL_TILE_24x64 = 59,
    CUBLASLT_MATMUL_TILE_24x128 = 60,
    CUBLASLT_MATMUL_TILE_24x192 = 61,
    CUBLASLT_MATMUL_TILE_24x256 = 62,
    CUBLASLT_MATMUL_TILE_24x320 = 63,
    CUBLASLT_MATMUL_TILE_24x384 = 64,
    CUBLASLT_MATMUL_TILE_24x448 = 65,
    CUBLASLT_MATMUL_TILE_24x512 = 66,
    CUBLASLT_MATMUL_TILE_24x576 = 67,
    CUBLASLT_MATMUL_TILE_24x640 = 68,
    CUBLASLT_MATMUL_TILE_24x704 = 69,
    CUBLASLT_MATMUL_TILE_24x768 = 70,
    CUBLASLT_MATMUL_TILE_32x192 = 71,
    CUBLASLT_MATMUL_TILE_32x320 = 72,
    CUBLASLT_MATMUL_TILE_32x384 = 73,
    CUBLASLT_MATMUL_TILE_32x448 = 74,
    CUBLASLT_MATMUL_TILE_32x512 = 75,
    CUBLASLT_MATMUL_TILE_32x576 = 76,
    CUBLASLT_MATMUL_TILE_32x640 = 77,
    CUBLASLT_MATMUL_TILE_32x704 = 78,
    CUBLASLT_MATMUL_TILE_32x768 = 79,
    CUBLASLT_MATMUL_TILE_40x64 = 80,
    CUBLASLT_MATMUL_TILE_40x128 = 81,
    CUBLASLT_MATMUL_TILE_40x192 = 82,
    CUBLASLT_MATMUL_TILE_40x256 = 83,
    CUBLASLT_MATMUL_TILE_40x320 = 84,
    CUBLASLT_MATMUL_TILE_40x384 = 85,
    CUBLASLT_MATMUL_TILE_40x448 = 86,
    CUBLASLT_MATMUL_TILE_40x512 = 87,
    CUBLASLT_MATMUL_TILE_40x576 = 88,
    CUBLASLT_MATMUL_TILE_40x640 = 89,
    CUBLASLT_MATMUL_TILE_40x704 = 90,
    CUBLASLT_MATMUL_TILE_40x768 = 91,
    CUBLASLT_MATMUL_TILE_48x64 = 92,
    CUBLASLT_MATMUL_TILE_48x128 = 93,
    CUBLASLT_MATMUL_TILE_48x192 = 94,
    CUBLASLT_MATMUL_TILE_48x256 = 95,
    CUBLASLT_MATMUL_TILE_48x320 = 96,
    CUBLASLT_MATMUL_TILE_48x384 = 97,
    CUBLASLT_MATMUL_TILE_48x448 = 98,
    CUBLASLT_MATMUL_TILE_48x512 = 99,
    CUBLASLT_MATMUL_TILE_48x576 = 100,
    CUBLASLT_MATMUL_TILE_48x640 = 101,
    CUBLASLT_MATMUL_TILE_48x704 = 102,
    CUBLASLT_MATMUL_TILE_48x768 = 103,
    CUBLASLT_MATMUL_TILE_56x64 = 104,
    CUBLASLT_MATMUL_TILE_56x128 = 105,
    CUBLASLT_MATMUL_TILE_56x192 = 106,
    CUBLASLT_MATMUL_TILE_56x256 = 107,
    CUBLASLT_MATMUL_TILE_56x320 = 108,
    CUBLASLT_MATMUL_TILE_56x384 = 109,
    CUBLASLT_MATMUL_TILE_56x448 = 110,
    CUBLASLT_MATMUL_TILE_56x512 = 111,
    CUBLASLT_MATMUL_TILE_56x576 = 112,
    CUBLASLT_MATMUL_TILE_56x640 = 113,
    CUBLASLT_MATMUL_TILE_56x704 = 114,
    CUBLASLT_MATMUL_TILE_56x768 = 115,
    CUBLASLT_MATMUL_TILE_64x192 = 116,
    CUBLASLT_MATMUL_TILE_64x320 = 117,
    CUBLASLT_MATMUL_TILE_64x384 = 118,
    CUBLASLT_MATMUL_TILE_64x448 = 119,
    CUBLASLT_MATMUL_TILE_64x576 = 120,
    CUBLASLT_MATMUL_TILE_64x640 = 121,
    CUBLASLT_MATMUL_TILE_64x704 = 122,
    CUBLASLT_MATMUL_TILE_64x768 = 123,
    CUBLASLT_MATMUL_TILE_72x64 = 124,
    CUBLASLT_MATMUL_TILE_72x128 = 125,
    CUBLASLT_MATMUL_TILE_72x192 = 126,
    CUBLASLT_MATMUL_TILE_72x256 = 127,
    CUBLASLT_MATMUL_TILE_72x320 = 128,
    CUBLASLT_MATMUL_TILE_72x384 = 129,
    CUBLASLT_MATMUL_TILE_72x448 = 130,
    CUBLASLT_MATMUL_TILE_72x512 = 131,
    CUBLASLT_MATMUL_TILE_72x576 = 132,
    CUBLASLT_MATMUL_TILE_72x640 = 133,
    CUBLASLT_MATMUL_TILE_80x64 = 134,
    CUBLASLT_MATMUL_TILE_80x128 = 135,
    CUBLASLT_MATMUL_TILE_80x192 = 136,
    CUBLASLT_MATMUL_TILE_80x256 = 137,
    CUBLASLT_MATMUL_TILE_80x320 = 138,
    CUBLASLT_MATMUL_TILE_80x384 = 139,
    CUBLASLT_MATMUL_TILE_80x448 = 140,
    CUBLASLT_MATMUL_TILE_80x512 = 141,
    CUBLASLT_MATMUL_TILE_80x576 = 142,
    CUBLASLT_MATMUL_TILE_88x64 = 143,
    CUBLASLT_MATMUL_TILE_88x128 = 144,
    CUBLASLT_MATMUL_TILE_88x192 = 145,
    CUBLASLT_MATMUL_TILE_88x256 = 146,
    CUBLASLT_MATMUL_TILE_88x320 = 147,
    CUBLASLT_MATMUL_TILE_88x384 = 148,
    CUBLASLT_MATMUL_TILE_88x448 = 149,
    CUBLASLT_MATMUL_TILE_88x512 = 150,
    CUBLASLT_MATMUL_TILE_96x192 = 151,
    CUBLASLT_MATMUL_TILE_96x256 = 152,
    CUBLASLT_MATMUL_TILE_96x320 = 153,
    CUBLASLT_MATMUL_TILE_96x384 = 154,
    CUBLASLT_MATMUL_TILE_96x448 = 155,
    CUBLASLT_MATMUL_TILE_96x512 = 156,
    CUBLASLT_MATMUL_TILE_104x64 = 157,
    CUBLASLT_MATMUL_TILE_104x128 = 158,
    CUBLASLT_MATMUL_TILE_104x192 = 159,
    CUBLASLT_MATMUL_TILE_104x256 = 160,
    CUBLASLT_MATMUL_TILE_104x320 = 161,
    CUBLASLT_MATMUL_TILE_104x384 = 162,
    CUBLASLT_MATMUL_TILE_104x448 = 163,
    CUBLASLT_MATMUL_TILE_112x64 = 164,
    CUBLASLT_MATMUL_TILE_112x128 = 165,
    CUBLASLT_MATMUL_TILE_112x192 = 166,
    CUBLASLT_MATMUL_TILE_112x256 = 167,
    CUBLASLT_MATMUL_TILE_112x320 = 168,
    CUBLASLT_MATMUL_TILE_112x384 = 169,
    CUBLASLT_MATMUL_TILE_120x64 = 170,
    CUBLASLT_MATMUL_TILE_120x128 = 171,
    CUBLASLT_MATMUL_TILE_120x192 = 172,
    CUBLASLT_MATMUL_TILE_120x256 = 173,
    CUBLASLT_MATMUL_TILE_120x320 = 174,
    CUBLASLT_MATMUL_TILE_120x384 = 175,
    CUBLASLT_MATMUL_TILE_128x320 = 176,
    CUBLASLT_MATMUL_TILE_128x384 = 177,
    CUBLASLT_MATMUL_TILE_136x64 = 178,
    CUBLASLT_MATMUL_TILE_136x128 = 179,
    CUBLASLT_MATMUL_TILE_136x192 = 180,
    CUBLASLT_MATMUL_TILE_136x256 = 181,
    CUBLASLT_MATMUL_TILE_136x320 = 182,
    CUBLASLT_MATMUL_TILE_144x64 = 183,
    CUBLASLT_MATMUL_TILE_144x128 = 184,
    CUBLASLT_MATMUL_TILE_144x192 = 185,
    CUBLASLT_MATMUL_TILE_144x256 = 186,
    CUBLASLT_MATMUL_TILE_144x320 = 187,
    CUBLASLT_MATMUL_TILE_152x64 = 188,
    CUBLASLT_MATMUL_TILE_152x128 = 189,
    CUBLASLT_MATMUL_TILE_152x192 = 190,
    CUBLASLT_MATMUL_TILE_152x256 = 191,
    CUBLASLT_MATMUL_TILE_152x320 = 192,
    CUBLASLT_MATMUL_TILE_160x64 = 193,
    CUBLASLT_MATMUL_TILE_160x192 = 194,
    CUBLASLT_MATMUL_TILE_160x256 = 195,
    CUBLASLT_MATMUL_TILE_168x64 = 196,
    CUBLASLT_MATMUL_TILE_168x128 = 197,
    CUBLASLT_MATMUL_TILE_168x192 = 198,
    CUBLASLT_MATMUL_TILE_168x256 = 199,
    CUBLASLT_MATMUL_TILE_176x64 = 200,
    CUBLASLT_MATMUL_TILE_176x128 = 201,
    CUBLASLT_MATMUL_TILE_176x192 = 202,
    CUBLASLT_MATMUL_TILE_176x256 = 203,
    CUBLASLT_MATMUL_TILE_184x64 = 204,
    CUBLASLT_MATMUL_TILE_184x128 = 205,
    CUBLASLT_MATMUL_TILE_184x192 = 206,
    CUBLASLT_MATMUL_TILE_184x256 = 207,
    CUBLASLT_MATMUL_TILE_192x64 = 208,
    CUBLASLT_MATMUL_TILE_192x192 = 209,
    CUBLASLT_MATMUL_TILE_192x256 = 210,
    CUBLASLT_MATMUL_TILE_200x64 = 211,
    CUBLASLT_MATMUL_TILE_200x128 = 212,
    CUBLASLT_MATMUL_TILE_200x192 = 213,
    CUBLASLT_MATMUL_TILE_208x64 = 214,
    CUBLASLT_MATMUL_TILE_208x128 = 215,
    CUBLASLT_MATMUL_TILE_208x192 = 216,
    CUBLASLT_MATMUL_TILE_216x64 = 217,
    CUBLASLT_MATMUL_TILE_216x128 = 218,
    CUBLASLT_MATMUL_TILE_216x192 = 219,
    CUBLASLT_MATMUL_TILE_224x64 = 220,
    CUBLASLT_MATMUL_TILE_224x128 = 221,
    CUBLASLT_MATMUL_TILE_224x192 = 222,
    CUBLASLT_MATMUL_TILE_232x64 = 223,
    CUBLASLT_MATMUL_TILE_232x128 = 224,
    CUBLASLT_MATMUL_TILE_232x192 = 225,
    CUBLASLT_MATMUL_TILE_240x64 = 226,
    CUBLASLT_MATMUL_TILE_240x128 = 227,
    CUBLASLT_MATMUL_TILE_240x192 = 228,
    CUBLASLT_MATMUL_TILE_248x64 = 229,
    CUBLASLT_MATMUL_TILE_248x128 = 230,
    CUBLASLT_MATMUL_TILE_248x192 = 231,
    CUBLASLT_MATMUL_TILE_256x192 = 232,
    CUBLASLT_MATMUL_TILE_264x64 = 233,
    CUBLASLT_MATMUL_TILE_264x128 = 234,
    CUBLASLT_MATMUL_TILE_272x64 = 235,
    CUBLASLT_MATMUL_TILE_272x128 = 236,
    CUBLASLT_MATMUL_TILE_280x64 = 237,
    CUBLASLT_MATMUL_TILE_280x128 = 238,
    CUBLASLT_MATMUL_TILE_288x64 = 239,
    CUBLASLT_MATMUL_TILE_288x128 = 240,
    CUBLASLT_MATMUL_TILE_296x64 = 241,
    CUBLASLT_MATMUL_TILE_296x128 = 242,
    CUBLASLT_MATMUL_TILE_304x64 = 243,
    CUBLASLT_MATMUL_TILE_304x128 = 244,
    CUBLASLT_MATMUL_TILE_312x64 = 245,
    CUBLASLT_MATMUL_TILE_312x128 = 246,
    CUBLASLT_MATMUL_TILE_320x64 = 247,
    CUBLASLT_MATMUL_TILE_320x128 = 248,
    CUBLASLT_MATMUL_TILE_328x64 = 249,
    CUBLASLT_MATMUL_TILE_328x128 = 250,
    CUBLASLT_MATMUL_TILE_336x64 = 251,
    CUBLASLT_MATMUL_TILE_336x128 = 252,
    CUBLASLT_MATMUL_TILE_344x64 = 253,
    CUBLASLT_MATMUL_TILE_344x128 = 254,
    CUBLASLT_MATMUL_TILE_352x64 = 255,
    CUBLASLT_MATMUL_TILE_352x128 = 256,
    CUBLASLT_MATMUL_TILE_360x64 = 257,
    CUBLASLT_MATMUL_TILE_360x128 = 258,
    CUBLASLT_MATMUL_TILE_368x64 = 259,
    CUBLASLT_MATMUL_TILE_368x128 = 260,
    CUBLASLT_MATMUL_TILE_376x64 = 261,
    CUBLASLT_MATMUL_TILE_376x128 = 262,
    CUBLASLT_MATMUL_TILE_384x64 = 263,
    CUBLASLT_MATMUL_TILE_384x128 = 264,
    CUBLASLT_MATMUL_TILE_392x64 = 265,
    CUBLASLT_MATMUL_TILE_400x64 = 266,
    CUBLASLT_MATMUL_TILE_408x64 = 267,
    CUBLASLT_MATMUL_TILE_416x64 = 268,
    CUBLASLT_MATMUL_TILE_424x64 = 269,
    CUBLASLT_MATMUL_TILE_432x64 = 270,
    CUBLASLT_MATMUL_TILE_440x64 = 271,
    CUBLASLT_MATMUL_TILE_448x64 = 272,
    CUBLASLT_MATMUL_TILE_456x64 = 273,
    CUBLASLT_MATMUL_TILE_464x64 = 274,
    CUBLASLT_MATMUL_TILE_472x64 = 275,
    CUBLASLT_MATMUL_TILE_480x64 = 276,
    CUBLASLT_MATMUL_TILE_488x64 = 277,
    CUBLASLT_MATMUL_TILE_496x64 = 278,
    CUBLASLT_MATMUL_TILE_504x64 = 279,
    CUBLASLT_MATMUL_TILE_520x64 = 280,
    CUBLASLT_MATMUL_TILE_528x64 = 281,
    CUBLASLT_MATMUL_TILE_536x64 = 282,
    CUBLASLT_MATMUL_TILE_544x64 = 283,
    CUBLASLT_MATMUL_TILE_552x64 = 284,
    CUBLASLT_MATMUL_TILE_560x64 = 285,
    CUBLASLT_MATMUL_TILE_568x64 = 286,
    CUBLASLT_MATMUL_TILE_576x64 = 287,
    CUBLASLT_MATMUL_TILE_584x64 = 288,
    CUBLASLT_MATMUL_TILE_592x64 = 289,
    CUBLASLT_MATMUL_TILE_600x64 = 290,
    CUBLASLT_MATMUL_TILE_608x64 = 291,
    CUBLASLT_MATMUL_TILE_616x64 = 292,
    CUBLASLT_MATMUL_TILE_624x64 = 293,
    CUBLASLT_MATMUL_TILE_632x64 = 294,
    CUBLASLT_MATMUL_TILE_640x64 = 295,
    CUBLASLT_MATMUL_TILE_648x64 = 296,
    CUBLASLT_MATMUL_TILE_656x64 = 297,
    CUBLASLT_MATMUL_TILE_664x64 = 298,
    CUBLASLT_MATMUL_TILE_672x64 = 299,
    CUBLASLT_MATMUL_TILE_680x64 = 300,
    CUBLASLT_MATMUL_TILE_688x64 = 301,
    CUBLASLT_MATMUL_TILE_696x64 = 302,
    CUBLASLT_MATMUL_TILE_704x64 = 303,
    CUBLASLT_MATMUL_TILE_712x64 = 304,
    CUBLASLT_MATMUL_TILE_720x64 = 305,
    CUBLASLT_MATMUL_TILE_728x64 = 306,
    CUBLASLT_MATMUL_TILE_736x64 = 307,
    CUBLASLT_MATMUL_TILE_744x64 = 308,
    CUBLASLT_MATMUL_TILE_752x64 = 309,
    CUBLASLT_MATMUL_TILE_760x64 = 310,
    CUBLASLT_MATMUL_TILE_768x64 = 311,
    CUBLASLT_MATMUL_TILE_64x16 = 312,
    CUBLASLT_MATMUL_TILE_64x24 = 313,
    CUBLASLT_MATMUL_TILE_64x40 = 314,
    CUBLASLT_MATMUL_TILE_64x48 = 315,
    CUBLASLT_MATMUL_TILE_64x56 = 316,
    CUBLASLT_MATMUL_TILE_64x72 = 317,
    CUBLASLT_MATMUL_TILE_64x80 = 318,
    CUBLASLT_MATMUL_TILE_64x88 = 319,
    CUBLASLT_MATMUL_TILE_64x104 = 320,
    CUBLASLT_MATMUL_TILE_64x112 = 321,
    CUBLASLT_MATMUL_TILE_64x120 = 322,
    CUBLASLT_MATMUL_TILE_64x136 = 323,
    CUBLASLT_MATMUL_TILE_64x144 = 324,
    CUBLASLT_MATMUL_TILE_64x152 = 325,
    CUBLASLT_MATMUL_TILE_64x160 = 326,
    CUBLASLT_MATMUL_TILE_64x168 = 327,
    CUBLASLT_MATMUL_TILE_64x176 = 328,
    CUBLASLT_MATMUL_TILE_64x184 = 329,
    CUBLASLT_MATMUL_TILE_64x200 = 330,
    CUBLASLT_MATMUL_TILE_64x208 = 331,
    CUBLASLT_MATMUL_TILE_64x216 = 332,
    CUBLASLT_MATMUL_TILE_64x224 = 333,
    CUBLASLT_MATMUL_TILE_64x232 = 334,
    CUBLASLT_MATMUL_TILE_64x240 = 335,
    CUBLASLT_MATMUL_TILE_64x248 = 336,
    CUBLASLT_MATMUL_TILE_64x264 = 337,
    CUBLASLT_MATMUL_TILE_64x272 = 338,
    CUBLASLT_MATMUL_TILE_64x280 = 339,
    CUBLASLT_MATMUL_TILE_64x288 = 340,
    CUBLASLT_MATMUL_TILE_64x296 = 341,
    CUBLASLT_MATMUL_TILE_64x304 = 342,
    CUBLASLT_MATMUL_TILE_64x312 = 343,
    CUBLASLT_MATMUL_TILE_64x328 = 344,
    CUBLASLT_MATMUL_TILE_64x336 = 345,
    CUBLASLT_MATMUL_TILE_64x344 = 346,
    CUBLASLT_MATMUL_TILE_64x352 = 347,
    CUBLASLT_MATMUL_TILE_64x360 = 348,
    CUBLASLT_MATMUL_TILE_64x368 = 349,
    CUBLASLT_MATMUL_TILE_64x376 = 350,
    CUBLASLT_MATMUL_TILE_64x392 = 351,
    CUBLASLT_MATMUL_TILE_64x400 = 352,
    CUBLASLT_MATMUL_TILE_64x408 = 353,
    CUBLASLT_MATMUL_TILE_64x416 = 354,
    CUBLASLT_MATMUL_TILE_64x424 = 355,
    CUBLASLT_MATMUL_TILE_64x432 = 356,
    CUBLASLT_MATMUL_TILE_64x440 = 357,
    CUBLASLT_MATMUL_TILE_64x456 = 358,
    CUBLASLT_MATMUL_TILE_64x464 = 359,
    CUBLASLT_MATMUL_TILE_64x472 = 360,
    CUBLASLT_MATMUL_TILE_64x480 = 361,
    CUBLASLT_MATMUL_TILE_64x488 = 362,
    CUBLASLT_MATMUL_TILE_64x496 = 363,
    CUBLASLT_MATMUL_TILE_64x504 = 364,
    CUBLASLT_MATMUL_TILE_64x520 = 365,
    CUBLASLT_MATMUL_TILE_64x528 = 366,
    CUBLASLT_MATMUL_TILE_64x536 = 367,
    CUBLASLT_MATMUL_TILE_64x544 = 368,
    CUBLASLT_MATMUL_TILE_64x552 = 369,
    CUBLASLT_MATMUL_TILE_64x560 = 370,
    CUBLASLT_MATMUL_TILE_64x568 = 371,
    CUBLASLT_MATMUL_TILE_64x584 = 372,
    CUBLASLT_MATMUL_TILE_64x592 = 373,
    CUBLASLT_MATMUL_TILE_64x600 = 374,
    CUBLASLT_MATMUL_TILE_64x608 = 375,
    CUBLASLT_MATMUL_TILE_64x616 = 376,
    CUBLASLT_MATMUL_TILE_64x624 = 377,
    CUBLASLT_MATMUL_TILE_64x632 = 378,
    CUBLASLT_MATMUL_TILE_64x648 = 379,
    CUBLASLT_MATMUL_TILE_64x656 = 380,
    CUBLASLT_MATMUL_TILE_64x664 = 381,
    CUBLASLT_MATMUL_TILE_64x672 = 382,
    CUBLASLT_MATMUL_TILE_64x680 = 383,
    CUBLASLT_MATMUL_TILE_64x688 = 384,
    CUBLASLT_MATMUL_TILE_64x696 = 385,
    CUBLASLT_MATMUL_TILE_64x712 = 386,
    CUBLASLT_MATMUL_TILE_64x720 = 387,
    CUBLASLT_MATMUL_TILE_64x728 = 388,
    CUBLASLT_MATMUL_TILE_64x736 = 389,
    CUBLASLT_MATMUL_TILE_64x744 = 390,
    CUBLASLT_MATMUL_TILE_64x752 = 391,
    CUBLASLT_MATMUL_TILE_64x760 = 392,
    CUBLASLT_MATMUL_TILE_128x8 = 393,
    CUBLASLT_MATMUL_TILE_128x16 = 394,
    CUBLASLT_MATMUL_TILE_128x24 = 395,
    CUBLASLT_MATMUL_TILE_128x40 = 396,
    CUBLASLT_MATMUL_TILE_128x48 = 397,
    CUBLASLT_MATMUL_TILE_128x56 = 398,
    CUBLASLT_MATMUL_TILE_128x72 = 399,
    CUBLASLT_MATMUL_TILE_128x80 = 400,
    CUBLASLT_MATMUL_TILE_128x88 = 401,
    CUBLASLT_MATMUL_TILE_128x104 = 402,
    CUBLASLT_MATMUL_TILE_128x112 = 403,
    CUBLASLT_MATMUL_TILE_128x120 = 404,
    CUBLASLT_MATMUL_TILE_128x136 = 405,
    CUBLASLT_MATMUL_TILE_128x144 = 406,
    CUBLASLT_MATMUL_TILE_128x152 = 407,
    CUBLASLT_MATMUL_TILE_128x168 = 408,
    CUBLASLT_MATMUL_TILE_128x176 = 409,
    CUBLASLT_MATMUL_TILE_128x184 = 410,
    CUBLASLT_MATMUL_TILE_128x200 = 411,
    CUBLASLT_MATMUL_TILE_128x208 = 412,
    CUBLASLT_MATMUL_TILE_128x216 = 413,
    CUBLASLT_MATMUL_TILE_128x224 = 414,
    CUBLASLT_MATMUL_TILE_128x232 = 415,
    CUBLASLT_MATMUL_TILE_128x240 = 416,
    CUBLASLT_MATMUL_TILE_128x248 = 417,
    CUBLASLT_MATMUL_TILE_128x264 = 418,
    CUBLASLT_MATMUL_TILE_128x272 = 419,
    CUBLASLT_MATMUL_TILE_128x280 = 420,
    CUBLASLT_MATMUL_TILE_128x288 = 421,
    CUBLASLT_MATMUL_TILE_128x296 = 422,
    CUBLASLT_MATMUL_TILE_128x304 = 423,
    CUBLASLT_MATMUL_TILE_128x312 = 424,
    CUBLASLT_MATMUL_TILE_128x328 = 425,
    CUBLASLT_MATMUL_TILE_128x336 = 426,
    CUBLASLT_MATMUL_TILE_128x344 = 427,
    CUBLASLT_MATMUL_TILE_128x352 = 428,
    CUBLASLT_MATMUL_TILE_128x360 = 429,
    CUBLASLT_MATMUL_TILE_128x368 = 430,
    CUBLASLT_MATMUL_TILE_128x376 = 431,
    CUBLASLT_MATMUL_TILE_128x392 = 432,
    CUBLASLT_MATMUL_TILE_128x400 = 433,
    CUBLASLT_MATMUL_TILE_128x408 = 434,
    CUBLASLT_MATMUL_TILE_128x416 = 435,
    CUBLASLT_MATMUL_TILE_128x424 = 436,
    CUBLASLT_MATMUL_TILE_128x432 = 437,
    CUBLASLT_MATMUL_TILE_128x440 = 438,
    CUBLASLT_MATMUL_TILE_128x448 = 439,
    CUBLASLT_MATMUL_TILE_128x456 = 440,
    CUBLASLT_MATMUL_TILE_128x464 = 441,
    CUBLASLT_MATMUL_TILE_128x472 = 442,
    CUBLASLT_MATMUL_TILE_128x480 = 443,
    CUBLASLT_MATMUL_TILE_128x488 = 444,
    CUBLASLT_MATMUL_TILE_128x496 = 445,
    CUBLASLT_MATMUL_TILE_128x504 = 446,
    CUBLASLT_MATMUL_TILE_128x512 = 447,
    CUBLASLT_MATMUL_TILE_192x8 = 448,
    CUBLASLT_MATMUL_TILE_192x16 = 449,
    CUBLASLT_MATMUL_TILE_192x24 = 450,
    CUBLASLT_MATMUL_TILE_192x32 = 451,
    CUBLASLT_MATMUL_TILE_192x40 = 452,
    CUBLASLT_MATMUL_TILE_192x48 = 453,
    CUBLASLT_MATMUL_TILE_192x56 = 454,
    CUBLASLT_MATMUL_TILE_192x72 = 455,
    CUBLASLT_MATMUL_TILE_192x80 = 456,
    CUBLASLT_MATMUL_TILE_192x88 = 457,
    CUBLASLT_MATMUL_TILE_192x96 = 458,
    CUBLASLT_MATMUL_TILE_192x104 = 459,
    CUBLASLT_MATMUL_TILE_192x112 = 460,
    CUBLASLT_MATMUL_TILE_192x120 = 461,
    CUBLASLT_MATMUL_TILE_192x136 = 462,
    CUBLASLT_MATMUL_TILE_192x144 = 463,
    CUBLASLT_MATMUL_TILE_192x152 = 464,
    CUBLASLT_MATMUL_TILE_192x160 = 465,
    CUBLASLT_MATMUL_TILE_192x168 = 466,
    CUBLASLT_MATMUL_TILE_192x176 = 467,
    CUBLASLT_MATMUL_TILE_192x184 = 468,
    CUBLASLT_MATMUL_TILE_192x200 = 469,
    CUBLASLT_MATMUL_TILE_192x208 = 470,
    CUBLASLT_MATMUL_TILE_192x216 = 471,
    CUBLASLT_MATMUL_TILE_192x224 = 472,
    CUBLASLT_MATMUL_TILE_192x232 = 473,
    CUBLASLT_MATMUL_TILE_192x240 = 474,
    CUBLASLT_MATMUL_TILE_192x248 = 475,
    CUBLASLT_MATMUL_TILE_192x264 = 476,
    CUBLASLT_MATMUL_TILE_192x272 = 477,
    CUBLASLT_MATMUL_TILE_192x280 = 478,
    CUBLASLT_MATMUL_TILE_192x288 = 479,
    CUBLASLT_MATMUL_TILE_192x296 = 480,
    CUBLASLT_MATMUL_TILE_192x304 = 481,
    CUBLASLT_MATMUL_TILE_192x312 = 482,
    CUBLASLT_MATMUL_TILE_192x320 = 483,
    CUBLASLT_MATMUL_TILE_192x328 = 484,
    CUBLASLT_MATMUL_TILE_192x336 = 485,
    CUBLASLT_MATMUL_TILE_256x8 = 486,
    CUBLASLT_MATMUL_TILE_256x16 = 487,
    CUBLASLT_MATMUL_TILE_256x24 = 488,
    CUBLASLT_MATMUL_TILE_256x40 = 489,
    CUBLASLT_MATMUL_TILE_256x48 = 490,
    CUBLASLT_MATMUL_TILE_256x56 = 491,
    CUBLASLT_MATMUL_TILE_256x72 = 492,
    CUBLASLT_MATMUL_TILE_256x80 = 493,
    CUBLASLT_MATMUL_TILE_256x88 = 494,
    CUBLASLT_MATMUL_TILE_256x96 = 495,
    CUBLASLT_MATMUL_TILE_256x104 = 496,
    CUBLASLT_MATMUL_TILE_256x112 = 497,
    CUBLASLT_MATMUL_TILE_256x120 = 498,
    CUBLASLT_MATMUL_TILE_256x136 = 499,
    CUBLASLT_MATMUL_TILE_256x144 = 500,
    CUBLASLT_MATMUL_TILE_256x152 = 501,
    CUBLASLT_MATMUL_TILE_256x160 = 502,
    CUBLASLT_MATMUL_TILE_256x168 = 503,
    CUBLASLT_MATMUL_TILE_256x176 = 504,
    CUBLASLT_MATMUL_TILE_256x184 = 505,
    CUBLASLT_MATMUL_TILE_256x200 = 506,
    CUBLASLT_MATMUL_TILE_256x208 = 507,
    CUBLASLT_MATMUL_TILE_256x216 = 508,
    CUBLASLT_MATMUL_TILE_256x224 = 509,
    CUBLASLT_MATMUL_TILE_256x232 = 510,
    CUBLASLT_MATMUL_TILE_256x240 = 511,
    CUBLASLT_MATMUL_TILE_256x248 = 512,
    CUBLASLT_MATMUL_TILE_256x256 = 513,
    CUBLASLT_MATMUL_TILE_320x8 = 514,
    CUBLASLT_MATMUL_TILE_320x16 = 515,
    CUBLASLT_MATMUL_TILE_320x24 = 516,
    CUBLASLT_MATMUL_TILE_320x32 = 517,
    CUBLASLT_MATMUL_TILE_320x40 = 518,
    CUBLASLT_MATMUL_TILE_320x48 = 519,
    CUBLASLT_MATMUL_TILE_320x56 = 520,
    CUBLASLT_MATMUL_TILE_320x72 = 521,
    CUBLASLT_MATMUL_TILE_320x80 = 522,
    CUBLASLT_MATMUL_TILE_320x88 = 523,
    CUBLASLT_MATMUL_TILE_320x96 = 524,
    CUBLASLT_MATMUL_TILE_320x104 = 525,
    CUBLASLT_MATMUL_TILE_320x112 = 526,
    CUBLASLT_MATMUL_TILE_320x120 = 527,
    CUBLASLT_MATMUL_TILE_320x136 = 528,
    CUBLASLT_MATMUL_TILE_320x144 = 529,
    CUBLASLT_MATMUL_TILE_320x152 = 530,
    CUBLASLT_MATMUL_TILE_320x160 = 531,
    CUBLASLT_MATMUL_TILE_320x168 = 532,
    CUBLASLT_MATMUL_TILE_320x176 = 533,
    CUBLASLT_MATMUL_TILE_320x184 = 534,
    CUBLASLT_MATMUL_TILE_320x192 = 535,
    CUBLASLT_MATMUL_TILE_320x200 = 536,
    CUBLASLT_MATMUL_TILE_384x8 = 537,
    CUBLASLT_MATMUL_TILE_384x16 = 538,
    CUBLASLT_MATMUL_TILE_384x24 = 539,
    CUBLASLT_MATMUL_TILE_384x32 = 540,
    CUBLASLT_MATMUL_TILE_384x40 = 541,
    CUBLASLT_MATMUL_TILE_384x48 = 542,
    CUBLASLT_MATMUL_TILE_384x56 = 543,
    CUBLASLT_MATMUL_TILE_384x72 = 544,
    CUBLASLT_MATMUL_TILE_384x80 = 545,
    CUBLASLT_MATMUL_TILE_384x88 = 546,
    CUBLASLT_MATMUL_TILE_384x96 = 547,
    CUBLASLT_MATMUL_TILE_384x104 = 548,
    CUBLASLT_MATMUL_TILE_384x112 = 549,
    CUBLASLT_MATMUL_TILE_384x120 = 550,
    CUBLASLT_MATMUL_TILE_384x136 = 551,
    CUBLASLT_MATMUL_TILE_384x144 = 552,
    CUBLASLT_MATMUL_TILE_384x152 = 553,
    CUBLASLT_MATMUL_TILE_384x160 = 554,
    CUBLASLT_MATMUL_TILE_384x168 = 555,
    CUBLASLT_MATMUL_TILE_448x8 = 556,
    CUBLASLT_MATMUL_TILE_448x16 = 557,
    CUBLASLT_MATMUL_TILE_448x24 = 558,
    CUBLASLT_MATMUL_TILE_448x32 = 559,
    CUBLASLT_MATMUL_TILE_448x40 = 560,
    CUBLASLT_MATMUL_TILE_448x48 = 561,
    CUBLASLT_MATMUL_TILE_448x56 = 562,
    CUBLASLT_MATMUL_TILE_448x72 = 563,
    CUBLASLT_MATMUL_TILE_448x80 = 564,
    CUBLASLT_MATMUL_TILE_448x88 = 565,
    CUBLASLT_MATMUL_TILE_448x96 = 566,
    CUBLASLT_MATMUL_TILE_448x104 = 567,
    CUBLASLT_MATMUL_TILE_448x112 = 568,
    CUBLASLT_MATMUL_TILE_448x120 = 569,
    CUBLASLT_MATMUL_TILE_448x128 = 570,
    CUBLASLT_MATMUL_TILE_448x136 = 571,
    CUBLASLT_MATMUL_TILE_448x144 = 572,
    CUBLASLT_MATMUL_TILE_512x8 = 573,
    CUBLASLT_MATMUL_TILE_512x16 = 574,
    CUBLASLT_MATMUL_TILE_512x24 = 575,
    CUBLASLT_MATMUL_TILE_512x32 = 576,
    CUBLASLT_MATMUL_TILE_512x40 = 577,
    CUBLASLT_MATMUL_TILE_512x48 = 578,
    CUBLASLT_MATMUL_TILE_512x56 = 579,
    CUBLASLT_MATMUL_TILE_512x72 = 580,
    CUBLASLT_MATMUL_TILE_512x80 = 581,
    CUBLASLT_MATMUL_TILE_512x88 = 582,
    CUBLASLT_MATMUL_TILE_512x96 = 583,
    CUBLASLT_MATMUL_TILE_512x104 = 584,
    CUBLASLT_MATMUL_TILE_512x112 = 585,
    CUBLASLT_MATMUL_TILE_512x120 = 586,
    CUBLASLT_MATMUL_TILE_512x128 = 587,
    CUBLASLT_MATMUL_TILE_576x8 = 588,
    CUBLASLT_MATMUL_TILE_576x16 = 589,
    CUBLASLT_MATMUL_TILE_576x24 = 590,
    CUBLASLT_MATMUL_TILE_576x32 = 591,
    CUBLASLT_MATMUL_TILE_576x40 = 592,
    CUBLASLT_MATMUL_TILE_576x48 = 593,
    CUBLASLT_MATMUL_TILE_576x56 = 594,
    CUBLASLT_MATMUL_TILE_576x72 = 595,
    CUBLASLT_MATMUL_TILE_576x80 = 596,
    CUBLASLT_MATMUL_TILE_576x88 = 597,
    CUBLASLT_MATMUL_TILE_576x96 = 598,
    CUBLASLT_MATMUL_TILE_576x104 = 599,
    CUBLASLT_MATMUL_TILE_576x112 = 600,
    CUBLASLT_MATMUL_TILE_640x8 = 601,
    CUBLASLT_MATMUL_TILE_640x16 = 602,
    CUBLASLT_MATMUL_TILE_640x24 = 603,
    CUBLASLT_MATMUL_TILE_640x32 = 604,
    CUBLASLT_MATMUL_TILE_640x40 = 605,
    CUBLASLT_MATMUL_TILE_640x48 = 606,
    CUBLASLT_MATMUL_TILE_640x56 = 607,
    CUBLASLT_MATMUL_TILE_640x72 = 608,
    CUBLASLT_MATMUL_TILE_640x80 = 609,
    CUBLASLT_MATMUL_TILE_640x88 = 610,
    CUBLASLT_MATMUL_TILE_640x96 = 611,
    CUBLASLT_MATMUL_TILE_704x8 = 612,
    CUBLASLT_MATMUL_TILE_704x16 = 613,
    CUBLASLT_MATMUL_TILE_704x24 = 614,
    CUBLASLT_MATMUL_TILE_704x32 = 615,
    CUBLASLT_MATMUL_TILE_704x40 = 616,
    CUBLASLT_MATMUL_TILE_704x48 = 617,
    CUBLASLT_MATMUL_TILE_704x56 = 618,
    CUBLASLT_MATMUL_TILE_704x72 = 619,
    CUBLASLT_MATMUL_TILE_704x80 = 620,
    CUBLASLT_MATMUL_TILE_704x88 = 621,
    CUBLASLT_MATMUL_TILE_768x8 = 622,
    CUBLASLT_MATMUL_TILE_768x16 = 623,
    CUBLASLT_MATMUL_TILE_768x24 = 624,
    CUBLASLT_MATMUL_TILE_768x32 = 625,
    CUBLASLT_MATMUL_TILE_768x40 = 626,
    CUBLASLT_MATMUL_TILE_768x48 = 627,
    CUBLASLT_MATMUL_TILE_768x56 = 628,
    CUBLASLT_MATMUL_TILE_768x72 = 629,
    CUBLASLT_MATMUL_TILE_768x80 = 630,
    CUBLASLT_MATMUL_TILE_256x512 = 631,
    CUBLASLT_MATMUL_TILE_256x1024 = 632,
    CUBLASLT_MATMUL_TILE_512x512 = 633,
    CUBLASLT_MATMUL_TILE_512x1024 = 634,
    CUBLASLT_MATMUL_TILE_END = 635,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulStages_t {
    CUBLASLT_MATMUL_STAGES_UNDEFINED = 0,
    CUBLASLT_MATMUL_STAGES_16x1 = 1,
    CUBLASLT_MATMUL_STAGES_16x2 = 2,
    CUBLASLT_MATMUL_STAGES_16x3 = 3,
    CUBLASLT_MATMUL_STAGES_16x4 = 4,
    CUBLASLT_MATMUL_STAGES_16x5 = 5,
    CUBLASLT_MATMUL_STAGES_16x6 = 6,
    CUBLASLT_MATMUL_STAGES_32x1 = 7,
    CUBLASLT_MATMUL_STAGES_32x2 = 8,
    CUBLASLT_MATMUL_STAGES_32x3 = 9,
    CUBLASLT_MATMUL_STAGES_32x4 = 10,
    CUBLASLT_MATMUL_STAGES_32x5 = 11,
    CUBLASLT_MATMUL_STAGES_32x6 = 12,
    CUBLASLT_MATMUL_STAGES_64x1 = 13,
    CUBLASLT_MATMUL_STAGES_64x2 = 14,
    CUBLASLT_MATMUL_STAGES_64x3 = 15,
    CUBLASLT_MATMUL_STAGES_64x4 = 16,
    CUBLASLT_MATMUL_STAGES_64x5 = 17,
    CUBLASLT_MATMUL_STAGES_64x6 = 18,
    CUBLASLT_MATMUL_STAGES_128x1 = 19,
    CUBLASLT_MATMUL_STAGES_128x2 = 20,
    CUBLASLT_MATMUL_STAGES_128x3 = 21,
    CUBLASLT_MATMUL_STAGES_128x4 = 22,
    CUBLASLT_MATMUL_STAGES_128x5 = 23,
    CUBLASLT_MATMUL_STAGES_128x6 = 24,
    CUBLASLT_MATMUL_STAGES_32x10 = 25,
    CUBLASLT_MATMUL_STAGES_8x4 = 26,
    CUBLASLT_MATMUL_STAGES_16x10 = 27,
    CUBLASLT_MATMUL_STAGES_8x5 = 28,
    CUBLASLT_MATMUL_STAGES_8x3 = 31,
    CUBLASLT_MATMUL_STAGES_8xAUTO = 32,
    CUBLASLT_MATMUL_STAGES_16xAUTO = 33,
    CUBLASLT_MATMUL_STAGES_32xAUTO = 34,
    CUBLASLT_MATMUL_STAGES_64xAUTO = 35,
    CUBLASLT_MATMUL_STAGES_128xAUTO = 36,
    CUBLASLT_MATMUL_STAGES_256xAUTO = 37,
    CUBLASLT_MATMUL_STAGES_END = 38,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtClusterShape_t {
    CUBLASLT_CLUSTER_SHAPE_AUTO = 0,
    CUBLASLT_CLUSTER_SHAPE_1x1x1 = 2,
    CUBLASLT_CLUSTER_SHAPE_2x1x1 = 3,
    CUBLASLT_CLUSTER_SHAPE_4x1x1 = 4,
    CUBLASLT_CLUSTER_SHAPE_1x2x1 = 5,
    CUBLASLT_CLUSTER_SHAPE_2x2x1 = 6,
    CUBLASLT_CLUSTER_SHAPE_4x2x1 = 7,
    CUBLASLT_CLUSTER_SHAPE_1x4x1 = 8,
    CUBLASLT_CLUSTER_SHAPE_2x4x1 = 9,
    CUBLASLT_CLUSTER_SHAPE_4x4x1 = 10,
    CUBLASLT_CLUSTER_SHAPE_8x1x1 = 11,
    CUBLASLT_CLUSTER_SHAPE_1x8x1 = 12,
    CUBLASLT_CLUSTER_SHAPE_8x2x1 = 13,
    CUBLASLT_CLUSTER_SHAPE_2x8x1 = 14,
    CUBLASLT_CLUSTER_SHAPE_16x1x1 = 15,
    CUBLASLT_CLUSTER_SHAPE_1x16x1 = 16,
    CUBLASLT_CLUSTER_SHAPE_3x1x1 = 17,
    CUBLASLT_CLUSTER_SHAPE_5x1x1 = 18,
    CUBLASLT_CLUSTER_SHAPE_6x1x1 = 19,
    CUBLASLT_CLUSTER_SHAPE_7x1x1 = 20,
    CUBLASLT_CLUSTER_SHAPE_9x1x1 = 21,
    CUBLASLT_CLUSTER_SHAPE_10x1x1 = 22,
    CUBLASLT_CLUSTER_SHAPE_11x1x1 = 23,
    CUBLASLT_CLUSTER_SHAPE_12x1x1 = 24,
    CUBLASLT_CLUSTER_SHAPE_13x1x1 = 25,
    CUBLASLT_CLUSTER_SHAPE_14x1x1 = 26,
    CUBLASLT_CLUSTER_SHAPE_15x1x1 = 27,
    CUBLASLT_CLUSTER_SHAPE_3x2x1 = 28,
    CUBLASLT_CLUSTER_SHAPE_5x2x1 = 29,
    CUBLASLT_CLUSTER_SHAPE_6x2x1 = 30,
    CUBLASLT_CLUSTER_SHAPE_7x2x1 = 31,
    CUBLASLT_CLUSTER_SHAPE_1x3x1 = 32,
    CUBLASLT_CLUSTER_SHAPE_2x3x1 = 33,
    CUBLASLT_CLUSTER_SHAPE_3x3x1 = 34,
    CUBLASLT_CLUSTER_SHAPE_4x3x1 = 35,
    CUBLASLT_CLUSTER_SHAPE_5x3x1 = 36,
    CUBLASLT_CLUSTER_SHAPE_3x4x1 = 37,
    CUBLASLT_CLUSTER_SHAPE_1x5x1 = 38,
    CUBLASLT_CLUSTER_SHAPE_2x5x1 = 39,
    CUBLASLT_CLUSTER_SHAPE_3x5x1 = 40,
    CUBLASLT_CLUSTER_SHAPE_1x6x1 = 41,
    CUBLASLT_CLUSTER_SHAPE_2x6x1 = 42,
    CUBLASLT_CLUSTER_SHAPE_1x7x1 = 43,
    CUBLASLT_CLUSTER_SHAPE_2x7x1 = 44,
    CUBLASLT_CLUSTER_SHAPE_1x9x1 = 45,
    CUBLASLT_CLUSTER_SHAPE_1x10x1 = 46,
    CUBLASLT_CLUSTER_SHAPE_1x11x1 = 47,
    CUBLASLT_CLUSTER_SHAPE_1x12x1 = 48,
    CUBLASLT_CLUSTER_SHAPE_1x13x1 = 49,
    CUBLASLT_CLUSTER_SHAPE_1x14x1 = 50,
    CUBLASLT_CLUSTER_SHAPE_1x15x1 = 51,
    CUBLASLT_CLUSTER_SHAPE_END = 52,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulInnerShape_t {
    CUBLASLT_MATMUL_INNER_SHAPE_UNDEFINED = 0,
    CUBLASLT_MATMUL_INNER_SHAPE_MMA884 = 1,
    CUBLASLT_MATMUL_INNER_SHAPE_MMA1684 = 2,
    CUBLASLT_MATMUL_INNER_SHAPE_MMA1688 = 3,
    CUBLASLT_MATMUL_INNER_SHAPE_MMA16816 = 4,
    CUBLASLT_MATMUL_INNER_SHAPE_END = 5,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulMatrixScale_t {
    CUBLASLT_MATMUL_MATRIX_SCALE_SCALAR_32F = 0,
    CUBLASLT_MATMUL_MATRIX_SCALE_VEC16_UE4M3 = 1,
    CUBLASLT_MATMUL_MATRIX_SCALE_VEC32_UE8M0 = 2,
    CUBLASLT_MATMUL_MATRIX_SCALE_END = 3,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtPointerMode_t {
    CUBLASLT_POINTER_MODE_HOST = 0,
    CUBLASLT_POINTER_MODE_DEVICE = 1,
    CUBLASLT_POINTER_MODE_DEVICE_VECTOR = 2,
    CUBLASLT_POINTER_MODE_ALPHA_DEVICE_VECTOR_BETA_ZERO = 3,
    CUBLASLT_POINTER_MODE_ALPHA_DEVICE_VECTOR_BETA_HOST = 4,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtPointerModeMask_t {
    CUBLASLT_POINTER_MODE_MASK_HOST = 1,
    CUBLASLT_POINTER_MODE_MASK_DEVICE = 2,
    CUBLASLT_POINTER_MODE_MASK_DEVICE_VECTOR = 4,
    CUBLASLT_POINTER_MODE_MASK_ALPHA_DEVICE_VECTOR_BETA_ZERO = 8,
    CUBLASLT_POINTER_MODE_MASK_ALPHA_DEVICE_VECTOR_BETA_HOST = 16,
}
pub type cublasLtNumericalImplFlags_t = u64;
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtOrder_t {
    CUBLASLT_ORDER_COL = 0,
    CUBLASLT_ORDER_ROW = 1,
    CUBLASLT_ORDER_COL32 = 2,
    CUBLASLT_ORDER_COL4_4R2_8C = 3,
    CUBLASLT_ORDER_COL32_2R_4R4 = 4,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatrixLayoutAttribute_t {
    CUBLASLT_MATRIX_LAYOUT_TYPE = 0,
    CUBLASLT_MATRIX_LAYOUT_ORDER = 1,
    CUBLASLT_MATRIX_LAYOUT_ROWS = 2,
    CUBLASLT_MATRIX_LAYOUT_COLS = 3,
    CUBLASLT_MATRIX_LAYOUT_LD = 4,
    CUBLASLT_MATRIX_LAYOUT_BATCH_COUNT = 5,
    CUBLASLT_MATRIX_LAYOUT_STRIDED_BATCH_OFFSET = 6,
    CUBLASLT_MATRIX_LAYOUT_PLANE_OFFSET = 7,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulDescAttributes_t {
    CUBLASLT_MATMUL_DESC_COMPUTE_TYPE = 0,
    CUBLASLT_MATMUL_DESC_SCALE_TYPE = 1,
    CUBLASLT_MATMUL_DESC_POINTER_MODE = 2,
    CUBLASLT_MATMUL_DESC_TRANSA = 3,
    CUBLASLT_MATMUL_DESC_TRANSB = 4,
    CUBLASLT_MATMUL_DESC_TRANSC = 5,
    CUBLASLT_MATMUL_DESC_FILL_MODE = 6,
    CUBLASLT_MATMUL_DESC_EPILOGUE = 7,
    CUBLASLT_MATMUL_DESC_BIAS_POINTER = 8,
    CUBLASLT_MATMUL_DESC_BIAS_BATCH_STRIDE = 10,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_POINTER = 11,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_LD = 12,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_BATCH_STRIDE = 13,
    CUBLASLT_MATMUL_DESC_ALPHA_VECTOR_BATCH_STRIDE = 14,
    CUBLASLT_MATMUL_DESC_SM_COUNT_TARGET = 15,
    CUBLASLT_MATMUL_DESC_A_SCALE_POINTER = 17,
    CUBLASLT_MATMUL_DESC_B_SCALE_POINTER = 18,
    CUBLASLT_MATMUL_DESC_C_SCALE_POINTER = 19,
    CUBLASLT_MATMUL_DESC_D_SCALE_POINTER = 20,
    CUBLASLT_MATMUL_DESC_AMAX_D_POINTER = 21,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_DATA_TYPE = 22,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_SCALE_POINTER = 23,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_AMAX_POINTER = 24,
    CUBLASLT_MATMUL_DESC_FAST_ACCUM = 25,
    CUBLASLT_MATMUL_DESC_BIAS_DATA_TYPE = 26,
    CUBLASLT_MATMUL_DESC_ATOMIC_SYNC_NUM_CHUNKS_D_ROWS = 27,
    CUBLASLT_MATMUL_DESC_ATOMIC_SYNC_NUM_CHUNKS_D_COLS = 28,
    CUBLASLT_MATMUL_DESC_ATOMIC_SYNC_IN_COUNTERS_POINTER = 29,
    CUBLASLT_MATMUL_DESC_ATOMIC_SYNC_OUT_COUNTERS_POINTER = 30,
    CUBLASLT_MATMUL_DESC_A_SCALE_MODE = 31,
    CUBLASLT_MATMUL_DESC_B_SCALE_MODE = 32,
    CUBLASLT_MATMUL_DESC_C_SCALE_MODE = 33,
    CUBLASLT_MATMUL_DESC_D_SCALE_MODE = 34,
    CUBLASLT_MATMUL_DESC_EPILOGUE_AUX_SCALE_MODE = 35,
    CUBLASLT_MATMUL_DESC_D_OUT_SCALE_POINTER = 36,
    CUBLASLT_MATMUL_DESC_D_OUT_SCALE_MODE = 37,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatrixTransformDescAttributes_t {
    CUBLASLT_MATRIX_TRANSFORM_DESC_SCALE_TYPE = 0,
    CUBLASLT_MATRIX_TRANSFORM_DESC_POINTER_MODE = 1,
    CUBLASLT_MATRIX_TRANSFORM_DESC_TRANSA = 2,
    CUBLASLT_MATRIX_TRANSFORM_DESC_TRANSB = 3,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtReductionScheme_t {
    CUBLASLT_REDUCTION_SCHEME_NONE = 0,
    CUBLASLT_REDUCTION_SCHEME_INPLACE = 1,
    CUBLASLT_REDUCTION_SCHEME_COMPUTE_TYPE = 2,
    CUBLASLT_REDUCTION_SCHEME_OUTPUT_TYPE = 4,
    CUBLASLT_REDUCTION_SCHEME_MASK = 7,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtEpilogue_t {
    CUBLASLT_EPILOGUE_DEFAULT = 1,
    CUBLASLT_EPILOGUE_RELU = 2,
    CUBLASLT_EPILOGUE_RELU_AUX = 130,
    CUBLASLT_EPILOGUE_BIAS = 4,
    CUBLASLT_EPILOGUE_RELU_BIAS = 6,
    CUBLASLT_EPILOGUE_RELU_AUX_BIAS = 134,
    CUBLASLT_EPILOGUE_DRELU = 136,
    CUBLASLT_EPILOGUE_DRELU_BGRAD = 152,
    CUBLASLT_EPILOGUE_GELU = 32,
    CUBLASLT_EPILOGUE_GELU_AUX = 160,
    CUBLASLT_EPILOGUE_GELU_BIAS = 36,
    CUBLASLT_EPILOGUE_GELU_AUX_BIAS = 164,
    CUBLASLT_EPILOGUE_DGELU = 192,
    CUBLASLT_EPILOGUE_DGELU_BGRAD = 208,
    CUBLASLT_EPILOGUE_BGRADA = 256,
    CUBLASLT_EPILOGUE_BGRADB = 512,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulSearch_t {
    CUBLASLT_SEARCH_BEST_FIT = 0,
    CUBLASLT_SEARCH_LIMITED_BY_ALGO_ID = 1,
    CUBLASLT_SEARCH_RESERVED_02 = 2,
    CUBLASLT_SEARCH_RESERVED_03 = 3,
    CUBLASLT_SEARCH_RESERVED_04 = 4,
    CUBLASLT_SEARCH_RESERVED_05 = 5,
    CUBLASLT_SEARCH_RESERVED_06 = 6,
    CUBLASLT_SEARCH_RESERVED_07 = 7,
    CUBLASLT_SEARCH_RESERVED_08 = 8,
    CUBLASLT_SEARCH_RESERVED_09 = 9,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulPreferenceAttributes_t {
    CUBLASLT_MATMUL_PREF_SEARCH_MODE = 0,
    CUBLASLT_MATMUL_PREF_MAX_WORKSPACE_BYTES = 1,
    CUBLASLT_MATMUL_PREF_REDUCTION_SCHEME_MASK = 3,
    CUBLASLT_MATMUL_PREF_MIN_ALIGNMENT_A_BYTES = 5,
    CUBLASLT_MATMUL_PREF_MIN_ALIGNMENT_B_BYTES = 6,
    CUBLASLT_MATMUL_PREF_MIN_ALIGNMENT_C_BYTES = 7,
    CUBLASLT_MATMUL_PREF_MIN_ALIGNMENT_D_BYTES = 8,
    CUBLASLT_MATMUL_PREF_MAX_WAVES_COUNT = 9,
    CUBLASLT_MATMUL_PREF_IMPL_MASK = 12,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialOrd, PartialEq)]
pub struct cublasLtMatmulHeuristicResult_t {
    pub algo: cublasLtMatmulAlgo_t,
    pub workspaceSize: usize,
    pub state: cublasStatus_t,
    pub wavesCount: f32,
    pub reserved: [::core::ffi::c_int; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of cublasLtMatmulHeuristicResult_t"]
        [::core::mem::size_of::<cublasLtMatmulHeuristicResult_t>() - 96usize];
    ["Alignment of cublasLtMatmulHeuristicResult_t"]
        [::core::mem::align_of::<cublasLtMatmulHeuristicResult_t>() - 8usize];
    ["Offset of field: cublasLtMatmulHeuristicResult_t::algo"]
        [::core::mem::offset_of!(cublasLtMatmulHeuristicResult_t, algo) - 0usize];
    ["Offset of field: cublasLtMatmulHeuristicResult_t::workspaceSize"]
        [::core::mem::offset_of!(cublasLtMatmulHeuristicResult_t, workspaceSize) - 64usize];
    ["Offset of field: cublasLtMatmulHeuristicResult_t::state"]
        [::core::mem::offset_of!(cublasLtMatmulHeuristicResult_t, state) - 72usize];
    ["Offset of field: cublasLtMatmulHeuristicResult_t::wavesCount"]
        [::core::mem::offset_of!(cublasLtMatmulHeuristicResult_t, wavesCount) - 76usize];
    ["Offset of field: cublasLtMatmulHeuristicResult_t::reserved"]
        [::core::mem::offset_of!(cublasLtMatmulHeuristicResult_t, reserved) - 80usize];
};
impl Default for cublasLtMatmulHeuristicResult_t {
    fn default() -> Self {
        let mut s = ::core::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::core::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulAlgoCapAttributes_t {
    CUBLASLT_ALGO_CAP_SPLITK_SUPPORT = 0,
    CUBLASLT_ALGO_CAP_REDUCTION_SCHEME_MASK = 1,
    CUBLASLT_ALGO_CAP_CTA_SWIZZLING_SUPPORT = 2,
    CUBLASLT_ALGO_CAP_STRIDED_BATCH_SUPPORT = 3,
    CUBLASLT_ALGO_CAP_OUT_OF_PLACE_RESULT_SUPPORT = 4,
    CUBLASLT_ALGO_CAP_UPLO_SUPPORT = 5,
    CUBLASLT_ALGO_CAP_TILE_IDS = 6,
    CUBLASLT_ALGO_CAP_CUSTOM_OPTION_MAX = 7,
    CUBLASLT_ALGO_CAP_CUSTOM_MEMORY_ORDER = 10,
    CUBLASLT_ALGO_CAP_POINTER_MODE_MASK = 11,
    CUBLASLT_ALGO_CAP_EPILOGUE_MASK = 12,
    CUBLASLT_ALGO_CAP_STAGES_IDS = 13,
    CUBLASLT_ALGO_CAP_LD_NEGATIVE = 14,
    CUBLASLT_ALGO_CAP_NUMERICAL_IMPL_FLAGS = 15,
    CUBLASLT_ALGO_CAP_MIN_ALIGNMENT_A_BYTES = 16,
    CUBLASLT_ALGO_CAP_MIN_ALIGNMENT_B_BYTES = 17,
    CUBLASLT_ALGO_CAP_MIN_ALIGNMENT_C_BYTES = 18,
    CUBLASLT_ALGO_CAP_MIN_ALIGNMENT_D_BYTES = 19,
    CUBLASLT_ALGO_CAP_ATOMIC_SYNC = 20,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum cublasLtMatmulAlgoConfigAttributes_t {
    CUBLASLT_ALGO_CONFIG_ID = 0,
    CUBLASLT_ALGO_CONFIG_TILE_ID = 1,
    CUBLASLT_ALGO_CONFIG_SPLITK_NUM = 2,
    CUBLASLT_ALGO_CONFIG_REDUCTION_SCHEME = 3,
    CUBLASLT_ALGO_CONFIG_CTA_SWIZZLING = 4,
    CUBLASLT_ALGO_CONFIG_CUSTOM_OPTION = 5,
    CUBLASLT_ALGO_CONFIG_STAGES_ID = 6,
    CUBLASLT_ALGO_CONFIG_INNER_SHAPE_ID = 7,
    CUBLASLT_ALGO_CONFIG_CLUSTER_SHAPE_ID = 8,
}
pub type cublasLtLoggerCallback_t = ::core::option::Option<
    unsafe extern "C" fn(
        logLevel: ::core::ffi::c_int,
        functionName: *const ::core::ffi::c_char,
        message: *const ::core::ffi::c_char,
    ),
>;
pub struct Lib {
    __library: ::libloading::Library,
    pub cublasLtCreate: Result<
        unsafe extern "C" fn(lightHandle: *mut cublasLtHandle_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtDestroy: Result<
        unsafe extern "C" fn(lightHandle: cublasLtHandle_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtGetStatusName: Result<
        unsafe extern "C" fn(status: cublasStatus_t) -> *const ::core::ffi::c_char,
        ::libloading::Error,
    >,
    pub cublasLtGetStatusString: Result<
        unsafe extern "C" fn(status: cublasStatus_t) -> *const ::core::ffi::c_char,
        ::libloading::Error,
    >,
    pub cublasLtGetVersion: Result<unsafe extern "C" fn() -> usize, ::libloading::Error>,
    pub cublasLtGetCudartVersion: Result<unsafe extern "C" fn() -> usize, ::libloading::Error>,
    pub cublasLtGetProperty: Result<
        unsafe extern "C" fn(
            type_: libraryPropertyType,
            value: *mut ::core::ffi::c_int,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtHeuristicsCacheGetCapacity:
        Result<unsafe extern "C" fn(capacity: *mut usize) -> cublasStatus_t, ::libloading::Error>,
    pub cublasLtHeuristicsCacheSetCapacity:
        Result<unsafe extern "C" fn(capacity: usize) -> cublasStatus_t, ::libloading::Error>,
    pub cublasLtDisableCpuInstructionsSetMask: Result<
        unsafe extern "C" fn(mask: ::core::ffi::c_uint) -> ::core::ffi::c_uint,
        ::libloading::Error,
    >,
    pub cublasLtMatmul: Result<
        unsafe extern "C" fn(
            lightHandle: cublasLtHandle_t,
            computeDesc: cublasLtMatmulDesc_t,
            alpha: *const ::core::ffi::c_void,
            A: *const ::core::ffi::c_void,
            Adesc: cublasLtMatrixLayout_t,
            B: *const ::core::ffi::c_void,
            Bdesc: cublasLtMatrixLayout_t,
            beta: *const ::core::ffi::c_void,
            C: *const ::core::ffi::c_void,
            Cdesc: cublasLtMatrixLayout_t,
            D: *mut ::core::ffi::c_void,
            Ddesc: cublasLtMatrixLayout_t,
            algo: *const cublasLtMatmulAlgo_t,
            workspace: *mut ::core::ffi::c_void,
            workspaceSizeInBytes: usize,
            stream: cudaStream_t,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixTransform: Result<
        unsafe extern "C" fn(
            lightHandle: cublasLtHandle_t,
            transformDesc: cublasLtMatrixTransformDesc_t,
            alpha: *const ::core::ffi::c_void,
            A: *const ::core::ffi::c_void,
            Adesc: cublasLtMatrixLayout_t,
            beta: *const ::core::ffi::c_void,
            B: *const ::core::ffi::c_void,
            Bdesc: cublasLtMatrixLayout_t,
            C: *mut ::core::ffi::c_void,
            Cdesc: cublasLtMatrixLayout_t,
            stream: cudaStream_t,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixLayoutInit_internal: Result<
        unsafe extern "C" fn(
            matLayout: cublasLtMatrixLayout_t,
            size: usize,
            type_: cudaDataType,
            rows: u64,
            cols: u64,
            ld: i64,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixLayoutCreate: Result<
        unsafe extern "C" fn(
            matLayout: *mut cublasLtMatrixLayout_t,
            type_: cudaDataType,
            rows: u64,
            cols: u64,
            ld: i64,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixLayoutDestroy: Result<
        unsafe extern "C" fn(matLayout: cublasLtMatrixLayout_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixLayoutSetAttribute: Result<
        unsafe extern "C" fn(
            matLayout: cublasLtMatrixLayout_t,
            attr: cublasLtMatrixLayoutAttribute_t,
            buf: *const ::core::ffi::c_void,
            sizeInBytes: usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixLayoutGetAttribute: Result<
        unsafe extern "C" fn(
            matLayout: cublasLtMatrixLayout_t,
            attr: cublasLtMatrixLayoutAttribute_t,
            buf: *mut ::core::ffi::c_void,
            sizeInBytes: usize,
            sizeWritten: *mut usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulDescInit_internal: Result<
        unsafe extern "C" fn(
            matmulDesc: cublasLtMatmulDesc_t,
            size: usize,
            computeType: cublasComputeType_t,
            scaleType: cudaDataType_t,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulDescCreate: Result<
        unsafe extern "C" fn(
            matmulDesc: *mut cublasLtMatmulDesc_t,
            computeType: cublasComputeType_t,
            scaleType: cudaDataType_t,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulDescDestroy: Result<
        unsafe extern "C" fn(matmulDesc: cublasLtMatmulDesc_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulDescSetAttribute: Result<
        unsafe extern "C" fn(
            matmulDesc: cublasLtMatmulDesc_t,
            attr: cublasLtMatmulDescAttributes_t,
            buf: *const ::core::ffi::c_void,
            sizeInBytes: usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulDescGetAttribute: Result<
        unsafe extern "C" fn(
            matmulDesc: cublasLtMatmulDesc_t,
            attr: cublasLtMatmulDescAttributes_t,
            buf: *mut ::core::ffi::c_void,
            sizeInBytes: usize,
            sizeWritten: *mut usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixTransformDescInit_internal: Result<
        unsafe extern "C" fn(
            transformDesc: cublasLtMatrixTransformDesc_t,
            size: usize,
            scaleType: cudaDataType,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixTransformDescCreate: Result<
        unsafe extern "C" fn(
            transformDesc: *mut cublasLtMatrixTransformDesc_t,
            scaleType: cudaDataType,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixTransformDescDestroy: Result<
        unsafe extern "C" fn(transformDesc: cublasLtMatrixTransformDesc_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixTransformDescSetAttribute: Result<
        unsafe extern "C" fn(
            transformDesc: cublasLtMatrixTransformDesc_t,
            attr: cublasLtMatrixTransformDescAttributes_t,
            buf: *const ::core::ffi::c_void,
            sizeInBytes: usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatrixTransformDescGetAttribute: Result<
        unsafe extern "C" fn(
            transformDesc: cublasLtMatrixTransformDesc_t,
            attr: cublasLtMatrixTransformDescAttributes_t,
            buf: *mut ::core::ffi::c_void,
            sizeInBytes: usize,
            sizeWritten: *mut usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulPreferenceInit_internal: Result<
        unsafe extern "C" fn(pref: cublasLtMatmulPreference_t, size: usize) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulPreferenceCreate: Result<
        unsafe extern "C" fn(pref: *mut cublasLtMatmulPreference_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulPreferenceDestroy: Result<
        unsafe extern "C" fn(pref: cublasLtMatmulPreference_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulPreferenceSetAttribute: Result<
        unsafe extern "C" fn(
            pref: cublasLtMatmulPreference_t,
            attr: cublasLtMatmulPreferenceAttributes_t,
            buf: *const ::core::ffi::c_void,
            sizeInBytes: usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulPreferenceGetAttribute: Result<
        unsafe extern "C" fn(
            pref: cublasLtMatmulPreference_t,
            attr: cublasLtMatmulPreferenceAttributes_t,
            buf: *mut ::core::ffi::c_void,
            sizeInBytes: usize,
            sizeWritten: *mut usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoGetHeuristic: Result<
        unsafe extern "C" fn(
            lightHandle: cublasLtHandle_t,
            operationDesc: cublasLtMatmulDesc_t,
            Adesc: cublasLtMatrixLayout_t,
            Bdesc: cublasLtMatrixLayout_t,
            Cdesc: cublasLtMatrixLayout_t,
            Ddesc: cublasLtMatrixLayout_t,
            preference: cublasLtMatmulPreference_t,
            requestedAlgoCount: ::core::ffi::c_int,
            heuristicResultsArray: *mut cublasLtMatmulHeuristicResult_t,
            returnAlgoCount: *mut ::core::ffi::c_int,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoGetIds: Result<
        unsafe extern "C" fn(
            lightHandle: cublasLtHandle_t,
            computeType: cublasComputeType_t,
            scaleType: cudaDataType_t,
            Atype: cudaDataType_t,
            Btype: cudaDataType_t,
            Ctype: cudaDataType_t,
            Dtype: cudaDataType_t,
            requestedAlgoCount: ::core::ffi::c_int,
            algoIdsArray: *mut ::core::ffi::c_int,
            returnAlgoCount: *mut ::core::ffi::c_int,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoInit: Result<
        unsafe extern "C" fn(
            lightHandle: cublasLtHandle_t,
            computeType: cublasComputeType_t,
            scaleType: cudaDataType_t,
            Atype: cudaDataType_t,
            Btype: cudaDataType_t,
            Ctype: cudaDataType_t,
            Dtype: cudaDataType_t,
            algoId: ::core::ffi::c_int,
            algo: *mut cublasLtMatmulAlgo_t,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoCheck: Result<
        unsafe extern "C" fn(
            lightHandle: cublasLtHandle_t,
            operationDesc: cublasLtMatmulDesc_t,
            Adesc: cublasLtMatrixLayout_t,
            Bdesc: cublasLtMatrixLayout_t,
            Cdesc: cublasLtMatrixLayout_t,
            Ddesc: cublasLtMatrixLayout_t,
            algo: *const cublasLtMatmulAlgo_t,
            result: *mut cublasLtMatmulHeuristicResult_t,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoCapGetAttribute: Result<
        unsafe extern "C" fn(
            algo: *const cublasLtMatmulAlgo_t,
            attr: cublasLtMatmulAlgoCapAttributes_t,
            buf: *mut ::core::ffi::c_void,
            sizeInBytes: usize,
            sizeWritten: *mut usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoConfigSetAttribute: Result<
        unsafe extern "C" fn(
            algo: *mut cublasLtMatmulAlgo_t,
            attr: cublasLtMatmulAlgoConfigAttributes_t,
            buf: *const ::core::ffi::c_void,
            sizeInBytes: usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtMatmulAlgoConfigGetAttribute: Result<
        unsafe extern "C" fn(
            algo: *const cublasLtMatmulAlgo_t,
            attr: cublasLtMatmulAlgoConfigAttributes_t,
            buf: *mut ::core::ffi::c_void,
            sizeInBytes: usize,
            sizeWritten: *mut usize,
        ) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtLoggerSetCallback: Result<
        unsafe extern "C" fn(callback: cublasLtLoggerCallback_t) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtLoggerSetFile:
        Result<unsafe extern "C" fn(file: *mut FILE) -> cublasStatus_t, ::libloading::Error>,
    pub cublasLtLoggerOpenFile: Result<
        unsafe extern "C" fn(logFile: *const ::core::ffi::c_char) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtLoggerSetLevel: Result<
        unsafe extern "C" fn(level: ::core::ffi::c_int) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtLoggerSetMask: Result<
        unsafe extern "C" fn(mask: ::core::ffi::c_int) -> cublasStatus_t,
        ::libloading::Error,
    >,
    pub cublasLtLoggerForceDisable:
        Result<unsafe extern "C" fn() -> cublasStatus_t, ::libloading::Error>,
}
impl Lib {
    pub unsafe fn new<P>(path: P) -> Result<Self, ::libloading::Error>
    where
        P: AsRef<::std::ffi::OsStr>,
    {
        let library = ::libloading::Library::new(path)?;
        Self::from_library(library)
    }
    pub unsafe fn from_library<L>(library: L) -> Result<Self, ::libloading::Error>
    where
        L: Into<::libloading::Library>,
    {
        let __library = library.into();
        let cublasLtCreate = __library.get(b"cublasLtCreate\0").map(|sym| *sym);
        let cublasLtDestroy = __library.get(b"cublasLtDestroy\0").map(|sym| *sym);
        let cublasLtGetStatusName = __library.get(b"cublasLtGetStatusName\0").map(|sym| *sym);
        let cublasLtGetStatusString = __library.get(b"cublasLtGetStatusString\0").map(|sym| *sym);
        let cublasLtGetVersion = __library.get(b"cublasLtGetVersion\0").map(|sym| *sym);
        let cublasLtGetCudartVersion = __library.get(b"cublasLtGetCudartVersion\0").map(|sym| *sym);
        let cublasLtGetProperty = __library.get(b"cublasLtGetProperty\0").map(|sym| *sym);
        let cublasLtHeuristicsCacheGetCapacity = __library
            .get(b"cublasLtHeuristicsCacheGetCapacity\0")
            .map(|sym| *sym);
        let cublasLtHeuristicsCacheSetCapacity = __library
            .get(b"cublasLtHeuristicsCacheSetCapacity\0")
            .map(|sym| *sym);
        let cublasLtDisableCpuInstructionsSetMask = __library
            .get(b"cublasLtDisableCpuInstructionsSetMask\0")
            .map(|sym| *sym);
        let cublasLtMatmul = __library.get(b"cublasLtMatmul\0").map(|sym| *sym);
        let cublasLtMatrixTransform = __library.get(b"cublasLtMatrixTransform\0").map(|sym| *sym);
        let cublasLtMatrixLayoutInit_internal = __library
            .get(b"cublasLtMatrixLayoutInit_internal\0")
            .map(|sym| *sym);
        let cublasLtMatrixLayoutCreate = __library
            .get(b"cublasLtMatrixLayoutCreate\0")
            .map(|sym| *sym);
        let cublasLtMatrixLayoutDestroy = __library
            .get(b"cublasLtMatrixLayoutDestroy\0")
            .map(|sym| *sym);
        let cublasLtMatrixLayoutSetAttribute = __library
            .get(b"cublasLtMatrixLayoutSetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatrixLayoutGetAttribute = __library
            .get(b"cublasLtMatrixLayoutGetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulDescInit_internal = __library
            .get(b"cublasLtMatmulDescInit_internal\0")
            .map(|sym| *sym);
        let cublasLtMatmulDescCreate = __library.get(b"cublasLtMatmulDescCreate\0").map(|sym| *sym);
        let cublasLtMatmulDescDestroy = __library
            .get(b"cublasLtMatmulDescDestroy\0")
            .map(|sym| *sym);
        let cublasLtMatmulDescSetAttribute = __library
            .get(b"cublasLtMatmulDescSetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulDescGetAttribute = __library
            .get(b"cublasLtMatmulDescGetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatrixTransformDescInit_internal = __library
            .get(b"cublasLtMatrixTransformDescInit_internal\0")
            .map(|sym| *sym);
        let cublasLtMatrixTransformDescCreate = __library
            .get(b"cublasLtMatrixTransformDescCreate\0")
            .map(|sym| *sym);
        let cublasLtMatrixTransformDescDestroy = __library
            .get(b"cublasLtMatrixTransformDescDestroy\0")
            .map(|sym| *sym);
        let cublasLtMatrixTransformDescSetAttribute = __library
            .get(b"cublasLtMatrixTransformDescSetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatrixTransformDescGetAttribute = __library
            .get(b"cublasLtMatrixTransformDescGetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulPreferenceInit_internal = __library
            .get(b"cublasLtMatmulPreferenceInit_internal\0")
            .map(|sym| *sym);
        let cublasLtMatmulPreferenceCreate = __library
            .get(b"cublasLtMatmulPreferenceCreate\0")
            .map(|sym| *sym);
        let cublasLtMatmulPreferenceDestroy = __library
            .get(b"cublasLtMatmulPreferenceDestroy\0")
            .map(|sym| *sym);
        let cublasLtMatmulPreferenceSetAttribute = __library
            .get(b"cublasLtMatmulPreferenceSetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulPreferenceGetAttribute = __library
            .get(b"cublasLtMatmulPreferenceGetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulAlgoGetHeuristic = __library
            .get(b"cublasLtMatmulAlgoGetHeuristic\0")
            .map(|sym| *sym);
        let cublasLtMatmulAlgoGetIds = __library.get(b"cublasLtMatmulAlgoGetIds\0").map(|sym| *sym);
        let cublasLtMatmulAlgoInit = __library.get(b"cublasLtMatmulAlgoInit\0").map(|sym| *sym);
        let cublasLtMatmulAlgoCheck = __library.get(b"cublasLtMatmulAlgoCheck\0").map(|sym| *sym);
        let cublasLtMatmulAlgoCapGetAttribute = __library
            .get(b"cublasLtMatmulAlgoCapGetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulAlgoConfigSetAttribute = __library
            .get(b"cublasLtMatmulAlgoConfigSetAttribute\0")
            .map(|sym| *sym);
        let cublasLtMatmulAlgoConfigGetAttribute = __library
            .get(b"cublasLtMatmulAlgoConfigGetAttribute\0")
            .map(|sym| *sym);
        let cublasLtLoggerSetCallback = __library
            .get(b"cublasLtLoggerSetCallback\0")
            .map(|sym| *sym);
        let cublasLtLoggerSetFile = __library.get(b"cublasLtLoggerSetFile\0").map(|sym| *sym);
        let cublasLtLoggerOpenFile = __library.get(b"cublasLtLoggerOpenFile\0").map(|sym| *sym);
        let cublasLtLoggerSetLevel = __library.get(b"cublasLtLoggerSetLevel\0").map(|sym| *sym);
        let cublasLtLoggerSetMask = __library.get(b"cublasLtLoggerSetMask\0").map(|sym| *sym);
        let cublasLtLoggerForceDisable = __library
            .get(b"cublasLtLoggerForceDisable\0")
            .map(|sym| *sym);
        Ok(Lib {
            __library,
            cublasLtCreate,
            cublasLtDestroy,
            cublasLtGetStatusName,
            cublasLtGetStatusString,
            cublasLtGetVersion,
            cublasLtGetCudartVersion,
            cublasLtGetProperty,
            cublasLtHeuristicsCacheGetCapacity,
            cublasLtHeuristicsCacheSetCapacity,
            cublasLtDisableCpuInstructionsSetMask,
            cublasLtMatmul,
            cublasLtMatrixTransform,
            cublasLtMatrixLayoutInit_internal,
            cublasLtMatrixLayoutCreate,
            cublasLtMatrixLayoutDestroy,
            cublasLtMatrixLayoutSetAttribute,
            cublasLtMatrixLayoutGetAttribute,
            cublasLtMatmulDescInit_internal,
            cublasLtMatmulDescCreate,
            cublasLtMatmulDescDestroy,
            cublasLtMatmulDescSetAttribute,
            cublasLtMatmulDescGetAttribute,
            cublasLtMatrixTransformDescInit_internal,
            cublasLtMatrixTransformDescCreate,
            cublasLtMatrixTransformDescDestroy,
            cublasLtMatrixTransformDescSetAttribute,
            cublasLtMatrixTransformDescGetAttribute,
            cublasLtMatmulPreferenceInit_internal,
            cublasLtMatmulPreferenceCreate,
            cublasLtMatmulPreferenceDestroy,
            cublasLtMatmulPreferenceSetAttribute,
            cublasLtMatmulPreferenceGetAttribute,
            cublasLtMatmulAlgoGetHeuristic,
            cublasLtMatmulAlgoGetIds,
            cublasLtMatmulAlgoInit,
            cublasLtMatmulAlgoCheck,
            cublasLtMatmulAlgoCapGetAttribute,
            cublasLtMatmulAlgoConfigSetAttribute,
            cublasLtMatmulAlgoConfigGetAttribute,
            cublasLtLoggerSetCallback,
            cublasLtLoggerSetFile,
            cublasLtLoggerOpenFile,
            cublasLtLoggerSetLevel,
            cublasLtLoggerSetMask,
            cublasLtLoggerForceDisable,
        })
    }
    pub unsafe fn cublasLtCreate(&self, lightHandle: *mut cublasLtHandle_t) -> cublasStatus_t {
        (self
            .cublasLtCreate
            .as_ref()
            .expect("Expected function, got error."))(lightHandle)
    }
    pub unsafe fn cublasLtDestroy(&self, lightHandle: cublasLtHandle_t) -> cublasStatus_t {
        (self
            .cublasLtDestroy
            .as_ref()
            .expect("Expected function, got error."))(lightHandle)
    }
    pub unsafe fn cublasLtGetStatusName(
        &self,
        status: cublasStatus_t,
    ) -> *const ::core::ffi::c_char {
        (self
            .cublasLtGetStatusName
            .as_ref()
            .expect("Expected function, got error."))(status)
    }
    pub unsafe fn cublasLtGetStatusString(
        &self,
        status: cublasStatus_t,
    ) -> *const ::core::ffi::c_char {
        (self
            .cublasLtGetStatusString
            .as_ref()
            .expect("Expected function, got error."))(status)
    }
    pub unsafe fn cublasLtGetVersion(&self) -> usize {
        (self
            .cublasLtGetVersion
            .as_ref()
            .expect("Expected function, got error."))()
    }
    pub unsafe fn cublasLtGetCudartVersion(&self) -> usize {
        (self
            .cublasLtGetCudartVersion
            .as_ref()
            .expect("Expected function, got error."))()
    }
    pub unsafe fn cublasLtGetProperty(
        &self,
        type_: libraryPropertyType,
        value: *mut ::core::ffi::c_int,
    ) -> cublasStatus_t {
        (self
            .cublasLtGetProperty
            .as_ref()
            .expect("Expected function, got error."))(type_, value)
    }
    pub unsafe fn cublasLtHeuristicsCacheGetCapacity(
        &self,
        capacity: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtHeuristicsCacheGetCapacity
            .as_ref()
            .expect("Expected function, got error."))(capacity)
    }
    pub unsafe fn cublasLtHeuristicsCacheSetCapacity(&self, capacity: usize) -> cublasStatus_t {
        (self
            .cublasLtHeuristicsCacheSetCapacity
            .as_ref()
            .expect("Expected function, got error."))(capacity)
    }
    pub unsafe fn cublasLtDisableCpuInstructionsSetMask(
        &self,
        mask: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint {
        (self
            .cublasLtDisableCpuInstructionsSetMask
            .as_ref()
            .expect("Expected function, got error."))(mask)
    }
    pub unsafe fn cublasLtMatmul(
        &self,
        lightHandle: cublasLtHandle_t,
        computeDesc: cublasLtMatmulDesc_t,
        alpha: *const ::core::ffi::c_void,
        A: *const ::core::ffi::c_void,
        Adesc: cublasLtMatrixLayout_t,
        B: *const ::core::ffi::c_void,
        Bdesc: cublasLtMatrixLayout_t,
        beta: *const ::core::ffi::c_void,
        C: *const ::core::ffi::c_void,
        Cdesc: cublasLtMatrixLayout_t,
        D: *mut ::core::ffi::c_void,
        Ddesc: cublasLtMatrixLayout_t,
        algo: *const cublasLtMatmulAlgo_t,
        workspace: *mut ::core::ffi::c_void,
        workspaceSizeInBytes: usize,
        stream: cudaStream_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmul
            .as_ref()
            .expect("Expected function, got error."))(
            lightHandle,
            computeDesc,
            alpha,
            A,
            Adesc,
            B,
            Bdesc,
            beta,
            C,
            Cdesc,
            D,
            Ddesc,
            algo,
            workspace,
            workspaceSizeInBytes,
            stream,
        )
    }
    pub unsafe fn cublasLtMatrixTransform(
        &self,
        lightHandle: cublasLtHandle_t,
        transformDesc: cublasLtMatrixTransformDesc_t,
        alpha: *const ::core::ffi::c_void,
        A: *const ::core::ffi::c_void,
        Adesc: cublasLtMatrixLayout_t,
        beta: *const ::core::ffi::c_void,
        B: *const ::core::ffi::c_void,
        Bdesc: cublasLtMatrixLayout_t,
        C: *mut ::core::ffi::c_void,
        Cdesc: cublasLtMatrixLayout_t,
        stream: cudaStream_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixTransform
            .as_ref()
            .expect("Expected function, got error."))(
            lightHandle,
            transformDesc,
            alpha,
            A,
            Adesc,
            beta,
            B,
            Bdesc,
            C,
            Cdesc,
            stream,
        )
    }
    pub unsafe fn cublasLtMatrixLayoutInit_internal(
        &self,
        matLayout: cublasLtMatrixLayout_t,
        size: usize,
        type_: cudaDataType,
        rows: u64,
        cols: u64,
        ld: i64,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixLayoutInit_internal
            .as_ref()
            .expect("Expected function, got error."))(matLayout, size, type_, rows, cols, ld)
    }
    pub unsafe fn cublasLtMatrixLayoutCreate(
        &self,
        matLayout: *mut cublasLtMatrixLayout_t,
        type_: cudaDataType,
        rows: u64,
        cols: u64,
        ld: i64,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixLayoutCreate
            .as_ref()
            .expect("Expected function, got error."))(matLayout, type_, rows, cols, ld)
    }
    pub unsafe fn cublasLtMatrixLayoutDestroy(
        &self,
        matLayout: cublasLtMatrixLayout_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixLayoutDestroy
            .as_ref()
            .expect("Expected function, got error."))(matLayout)
    }
    pub unsafe fn cublasLtMatrixLayoutSetAttribute(
        &self,
        matLayout: cublasLtMatrixLayout_t,
        attr: cublasLtMatrixLayoutAttribute_t,
        buf: *const ::core::ffi::c_void,
        sizeInBytes: usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixLayoutSetAttribute
            .as_ref()
            .expect("Expected function, got error."))(matLayout, attr, buf, sizeInBytes)
    }
    pub unsafe fn cublasLtMatrixLayoutGetAttribute(
        &self,
        matLayout: cublasLtMatrixLayout_t,
        attr: cublasLtMatrixLayoutAttribute_t,
        buf: *mut ::core::ffi::c_void,
        sizeInBytes: usize,
        sizeWritten: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixLayoutGetAttribute
            .as_ref()
            .expect("Expected function, got error."))(
            matLayout,
            attr,
            buf,
            sizeInBytes,
            sizeWritten,
        )
    }
    pub unsafe fn cublasLtMatmulDescInit_internal(
        &self,
        matmulDesc: cublasLtMatmulDesc_t,
        size: usize,
        computeType: cublasComputeType_t,
        scaleType: cudaDataType_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulDescInit_internal
            .as_ref()
            .expect("Expected function, got error."))(
            matmulDesc, size, computeType, scaleType
        )
    }
    pub unsafe fn cublasLtMatmulDescCreate(
        &self,
        matmulDesc: *mut cublasLtMatmulDesc_t,
        computeType: cublasComputeType_t,
        scaleType: cudaDataType_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulDescCreate
            .as_ref()
            .expect("Expected function, got error."))(matmulDesc, computeType, scaleType)
    }
    pub unsafe fn cublasLtMatmulDescDestroy(
        &self,
        matmulDesc: cublasLtMatmulDesc_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulDescDestroy
            .as_ref()
            .expect("Expected function, got error."))(matmulDesc)
    }
    pub unsafe fn cublasLtMatmulDescSetAttribute(
        &self,
        matmulDesc: cublasLtMatmulDesc_t,
        attr: cublasLtMatmulDescAttributes_t,
        buf: *const ::core::ffi::c_void,
        sizeInBytes: usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulDescSetAttribute
            .as_ref()
            .expect("Expected function, got error."))(matmulDesc, attr, buf, sizeInBytes)
    }
    pub unsafe fn cublasLtMatmulDescGetAttribute(
        &self,
        matmulDesc: cublasLtMatmulDesc_t,
        attr: cublasLtMatmulDescAttributes_t,
        buf: *mut ::core::ffi::c_void,
        sizeInBytes: usize,
        sizeWritten: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulDescGetAttribute
            .as_ref()
            .expect("Expected function, got error."))(
            matmulDesc,
            attr,
            buf,
            sizeInBytes,
            sizeWritten,
        )
    }
    pub unsafe fn cublasLtMatrixTransformDescInit_internal(
        &self,
        transformDesc: cublasLtMatrixTransformDesc_t,
        size: usize,
        scaleType: cudaDataType,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixTransformDescInit_internal
            .as_ref()
            .expect("Expected function, got error."))(transformDesc, size, scaleType)
    }
    pub unsafe fn cublasLtMatrixTransformDescCreate(
        &self,
        transformDesc: *mut cublasLtMatrixTransformDesc_t,
        scaleType: cudaDataType,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixTransformDescCreate
            .as_ref()
            .expect("Expected function, got error."))(transformDesc, scaleType)
    }
    pub unsafe fn cublasLtMatrixTransformDescDestroy(
        &self,
        transformDesc: cublasLtMatrixTransformDesc_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixTransformDescDestroy
            .as_ref()
            .expect("Expected function, got error."))(transformDesc)
    }
    pub unsafe fn cublasLtMatrixTransformDescSetAttribute(
        &self,
        transformDesc: cublasLtMatrixTransformDesc_t,
        attr: cublasLtMatrixTransformDescAttributes_t,
        buf: *const ::core::ffi::c_void,
        sizeInBytes: usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixTransformDescSetAttribute
            .as_ref()
            .expect("Expected function, got error."))(transformDesc, attr, buf, sizeInBytes)
    }
    pub unsafe fn cublasLtMatrixTransformDescGetAttribute(
        &self,
        transformDesc: cublasLtMatrixTransformDesc_t,
        attr: cublasLtMatrixTransformDescAttributes_t,
        buf: *mut ::core::ffi::c_void,
        sizeInBytes: usize,
        sizeWritten: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatrixTransformDescGetAttribute
            .as_ref()
            .expect("Expected function, got error."))(
            transformDesc,
            attr,
            buf,
            sizeInBytes,
            sizeWritten,
        )
    }
    pub unsafe fn cublasLtMatmulPreferenceInit_internal(
        &self,
        pref: cublasLtMatmulPreference_t,
        size: usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulPreferenceInit_internal
            .as_ref()
            .expect("Expected function, got error."))(pref, size)
    }
    pub unsafe fn cublasLtMatmulPreferenceCreate(
        &self,
        pref: *mut cublasLtMatmulPreference_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulPreferenceCreate
            .as_ref()
            .expect("Expected function, got error."))(pref)
    }
    pub unsafe fn cublasLtMatmulPreferenceDestroy(
        &self,
        pref: cublasLtMatmulPreference_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulPreferenceDestroy
            .as_ref()
            .expect("Expected function, got error."))(pref)
    }
    pub unsafe fn cublasLtMatmulPreferenceSetAttribute(
        &self,
        pref: cublasLtMatmulPreference_t,
        attr: cublasLtMatmulPreferenceAttributes_t,
        buf: *const ::core::ffi::c_void,
        sizeInBytes: usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulPreferenceSetAttribute
            .as_ref()
            .expect("Expected function, got error."))(pref, attr, buf, sizeInBytes)
    }
    pub unsafe fn cublasLtMatmulPreferenceGetAttribute(
        &self,
        pref: cublasLtMatmulPreference_t,
        attr: cublasLtMatmulPreferenceAttributes_t,
        buf: *mut ::core::ffi::c_void,
        sizeInBytes: usize,
        sizeWritten: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulPreferenceGetAttribute
            .as_ref()
            .expect("Expected function, got error."))(
            pref, attr, buf, sizeInBytes, sizeWritten
        )
    }
    pub unsafe fn cublasLtMatmulAlgoGetHeuristic(
        &self,
        lightHandle: cublasLtHandle_t,
        operationDesc: cublasLtMatmulDesc_t,
        Adesc: cublasLtMatrixLayout_t,
        Bdesc: cublasLtMatrixLayout_t,
        Cdesc: cublasLtMatrixLayout_t,
        Ddesc: cublasLtMatrixLayout_t,
        preference: cublasLtMatmulPreference_t,
        requestedAlgoCount: ::core::ffi::c_int,
        heuristicResultsArray: *mut cublasLtMatmulHeuristicResult_t,
        returnAlgoCount: *mut ::core::ffi::c_int,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoGetHeuristic
            .as_ref()
            .expect("Expected function, got error."))(
            lightHandle,
            operationDesc,
            Adesc,
            Bdesc,
            Cdesc,
            Ddesc,
            preference,
            requestedAlgoCount,
            heuristicResultsArray,
            returnAlgoCount,
        )
    }
    pub unsafe fn cublasLtMatmulAlgoGetIds(
        &self,
        lightHandle: cublasLtHandle_t,
        computeType: cublasComputeType_t,
        scaleType: cudaDataType_t,
        Atype: cudaDataType_t,
        Btype: cudaDataType_t,
        Ctype: cudaDataType_t,
        Dtype: cudaDataType_t,
        requestedAlgoCount: ::core::ffi::c_int,
        algoIdsArray: *mut ::core::ffi::c_int,
        returnAlgoCount: *mut ::core::ffi::c_int,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoGetIds
            .as_ref()
            .expect("Expected function, got error."))(
            lightHandle,
            computeType,
            scaleType,
            Atype,
            Btype,
            Ctype,
            Dtype,
            requestedAlgoCount,
            algoIdsArray,
            returnAlgoCount,
        )
    }
    pub unsafe fn cublasLtMatmulAlgoInit(
        &self,
        lightHandle: cublasLtHandle_t,
        computeType: cublasComputeType_t,
        scaleType: cudaDataType_t,
        Atype: cudaDataType_t,
        Btype: cudaDataType_t,
        Ctype: cudaDataType_t,
        Dtype: cudaDataType_t,
        algoId: ::core::ffi::c_int,
        algo: *mut cublasLtMatmulAlgo_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoInit
            .as_ref()
            .expect("Expected function, got error."))(
            lightHandle,
            computeType,
            scaleType,
            Atype,
            Btype,
            Ctype,
            Dtype,
            algoId,
            algo,
        )
    }
    pub unsafe fn cublasLtMatmulAlgoCheck(
        &self,
        lightHandle: cublasLtHandle_t,
        operationDesc: cublasLtMatmulDesc_t,
        Adesc: cublasLtMatrixLayout_t,
        Bdesc: cublasLtMatrixLayout_t,
        Cdesc: cublasLtMatrixLayout_t,
        Ddesc: cublasLtMatrixLayout_t,
        algo: *const cublasLtMatmulAlgo_t,
        result: *mut cublasLtMatmulHeuristicResult_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoCheck
            .as_ref()
            .expect("Expected function, got error."))(
            lightHandle,
            operationDesc,
            Adesc,
            Bdesc,
            Cdesc,
            Ddesc,
            algo,
            result,
        )
    }
    pub unsafe fn cublasLtMatmulAlgoCapGetAttribute(
        &self,
        algo: *const cublasLtMatmulAlgo_t,
        attr: cublasLtMatmulAlgoCapAttributes_t,
        buf: *mut ::core::ffi::c_void,
        sizeInBytes: usize,
        sizeWritten: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoCapGetAttribute
            .as_ref()
            .expect("Expected function, got error."))(
            algo, attr, buf, sizeInBytes, sizeWritten
        )
    }
    pub unsafe fn cublasLtMatmulAlgoConfigSetAttribute(
        &self,
        algo: *mut cublasLtMatmulAlgo_t,
        attr: cublasLtMatmulAlgoConfigAttributes_t,
        buf: *const ::core::ffi::c_void,
        sizeInBytes: usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoConfigSetAttribute
            .as_ref()
            .expect("Expected function, got error."))(algo, attr, buf, sizeInBytes)
    }
    pub unsafe fn cublasLtMatmulAlgoConfigGetAttribute(
        &self,
        algo: *const cublasLtMatmulAlgo_t,
        attr: cublasLtMatmulAlgoConfigAttributes_t,
        buf: *mut ::core::ffi::c_void,
        sizeInBytes: usize,
        sizeWritten: *mut usize,
    ) -> cublasStatus_t {
        (self
            .cublasLtMatmulAlgoConfigGetAttribute
            .as_ref()
            .expect("Expected function, got error."))(
            algo, attr, buf, sizeInBytes, sizeWritten
        )
    }
    pub unsafe fn cublasLtLoggerSetCallback(
        &self,
        callback: cublasLtLoggerCallback_t,
    ) -> cublasStatus_t {
        (self
            .cublasLtLoggerSetCallback
            .as_ref()
            .expect("Expected function, got error."))(callback)
    }
    pub unsafe fn cublasLtLoggerSetFile(&self, file: *mut FILE) -> cublasStatus_t {
        (self
            .cublasLtLoggerSetFile
            .as_ref()
            .expect("Expected function, got error."))(file)
    }
    pub unsafe fn cublasLtLoggerOpenFile(
        &self,
        logFile: *const ::core::ffi::c_char,
    ) -> cublasStatus_t {
        (self
            .cublasLtLoggerOpenFile
            .as_ref()
            .expect("Expected function, got error."))(logFile)
    }
    pub unsafe fn cublasLtLoggerSetLevel(&self, level: ::core::ffi::c_int) -> cublasStatus_t {
        (self
            .cublasLtLoggerSetLevel
            .as_ref()
            .expect("Expected function, got error."))(level)
    }
    pub unsafe fn cublasLtLoggerSetMask(&self, mask: ::core::ffi::c_int) -> cublasStatus_t {
        (self
            .cublasLtLoggerSetMask
            .as_ref()
            .expect("Expected function, got error."))(mask)
    }
    pub unsafe fn cublasLtLoggerForceDisable(&self) -> cublasStatus_t {
        (self
            .cublasLtLoggerForceDisable
            .as_ref()
            .expect("Expected function, got error."))()
    }
}
