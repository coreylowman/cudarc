use super :: * ;pub unsafe fn cudnnGetVersion () -> usize { unsafe { culib () . cudnnGetVersion () } }
pub unsafe fn cudnnGetMaxDeviceVersion () -> usize { unsafe { culib () . cudnnGetMaxDeviceVersion () } }
pub unsafe fn cudnnGetCudartVersion () -> usize { unsafe { culib () . cudnnGetCudartVersion () } }
pub unsafe fn cudnnGetErrorString (status : cudnnStatus_t) -> * const :: core :: ffi :: c_char { unsafe { culib () . cudnnGetErrorString (status) } }
pub unsafe fn cudnnGetLastErrorString (message : * mut :: core :: ffi :: c_char , max_size : usize) { unsafe { culib () . cudnnGetLastErrorString (message , max_size) } }
pub unsafe fn cudnnQueryRuntimeError (handle : cudnnHandle_t , rstatus : * mut cudnnStatus_t , mode : cudnnErrQueryMode_t , tag : * mut cudnnRuntimeTag_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnQueryRuntimeError (handle , rstatus , mode , tag) } }
pub unsafe fn cudnnGetProperty (type_ : libraryPropertyType , value : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetProperty (type_ , value) } }
pub unsafe fn cudnnCreate (handle : * mut cudnnHandle_t) -> cudnnStatus_t { unsafe { culib () . cudnnCreate (handle) } }
pub unsafe fn cudnnDestroy (handle : cudnnHandle_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroy (handle) } }
pub unsafe fn cudnnSetStream (handle : cudnnHandle_t , streamId : cudaStream_t) -> cudnnStatus_t { unsafe { culib () . cudnnSetStream (handle , streamId) } }
pub unsafe fn cudnnGetStream (handle : cudnnHandle_t , streamId : * mut cudaStream_t) -> cudnnStatus_t { unsafe { culib () . cudnnGetStream (handle , streamId) } }
pub unsafe fn cudnnSetCallback (mask : :: core :: ffi :: c_uint , udata : * mut :: core :: ffi :: c_void , fptr : cudnnCallback_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetCallback (mask , udata , fptr) } }
pub unsafe fn cudnnGetCallback (mask : * mut :: core :: ffi :: c_uint , udata : * mut * mut :: core :: ffi :: c_void , fptr : * mut cudnnCallback_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCallback (mask , udata , fptr) } }
pub unsafe fn cudnnGraphVersionCheck () -> cudnnStatus_t { unsafe { culib () . cudnnGraphVersionCheck () } }
pub unsafe fn cudnnBackendCreateDescriptor (descriptorType : cudnnBackendDescriptorType_t , descriptor : * mut cudnnBackendDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnBackendCreateDescriptor (descriptorType , descriptor) } }
pub unsafe fn cudnnBackendDestroyDescriptor (descriptor : cudnnBackendDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnBackendDestroyDescriptor (descriptor) } }
pub unsafe fn cudnnBackendInitialize (descriptor : cudnnBackendDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnBackendInitialize (descriptor) } }
pub unsafe fn cudnnBackendFinalize (descriptor : cudnnBackendDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnBackendFinalize (descriptor) } }
pub unsafe fn cudnnBackendSetAttribute (descriptor : cudnnBackendDescriptor_t , attributeName : cudnnBackendAttributeName_t , attributeType : cudnnBackendAttributeType_t , elementCount : i64 , arrayOfElements : * const :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnBackendSetAttribute (descriptor , attributeName , attributeType , elementCount , arrayOfElements) } }
pub unsafe fn cudnnBackendGetAttribute (descriptor : cudnnBackendDescriptor_t , attributeName : cudnnBackendAttributeName_t , attributeType : cudnnBackendAttributeType_t , requestedElementCount : i64 , elementCount : * mut i64 , arrayOfElements : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnBackendGetAttribute (descriptor , attributeName , attributeType , requestedElementCount , elementCount , arrayOfElements) } }
pub unsafe fn cudnnBackendExecute (handle : cudnnHandle_t , executionPlan : cudnnBackendDescriptor_t , variantPack : cudnnBackendDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnBackendExecute (handle , executionPlan , variantPack) } }
pub unsafe fn cudnnBackendPopulateCudaGraph (handle : cudnnHandle_t , executionPlan : cudnnBackendDescriptor_t , variantPack : cudnnBackendDescriptor_t , graph : cudaGraph_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnBackendPopulateCudaGraph (handle , executionPlan , variantPack , graph) } }
pub unsafe fn cudnnBackendUpdateCudaGraph (handle : cudnnHandle_t , executionPlan : cudnnBackendDescriptor_t , variantPack : cudnnBackendDescriptor_t , graph : cudaGraph_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnBackendUpdateCudaGraph (handle , executionPlan , variantPack , graph) } }
pub unsafe fn cudnnCreateTensorDescriptor (tensorDesc : * mut cudnnTensorDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnCreateTensorDescriptor (tensorDesc) } }
pub unsafe fn cudnnSetTensor4dDescriptor (tensorDesc : cudnnTensorDescriptor_t , format : cudnnTensorFormat_t , dataType : cudnnDataType_t , n : :: core :: ffi :: c_int , c : :: core :: ffi :: c_int , h : :: core :: ffi :: c_int , w : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetTensor4dDescriptor (tensorDesc , format , dataType , n , c , h , w) } }
pub unsafe fn cudnnSetTensor4dDescriptorEx (tensorDesc : cudnnTensorDescriptor_t , dataType : cudnnDataType_t , n : :: core :: ffi :: c_int , c : :: core :: ffi :: c_int , h : :: core :: ffi :: c_int , w : :: core :: ffi :: c_int , nStride : :: core :: ffi :: c_int , cStride : :: core :: ffi :: c_int , hStride : :: core :: ffi :: c_int , wStride : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetTensor4dDescriptorEx (tensorDesc , dataType , n , c , h , w , nStride , cStride , hStride , wStride) } }
pub unsafe fn cudnnGetTensor4dDescriptor (tensorDesc : cudnnTensorDescriptor_t , dataType : * mut cudnnDataType_t , n : * mut :: core :: ffi :: c_int , c : * mut :: core :: ffi :: c_int , h : * mut :: core :: ffi :: c_int , w : * mut :: core :: ffi :: c_int , nStride : * mut :: core :: ffi :: c_int , cStride : * mut :: core :: ffi :: c_int , hStride : * mut :: core :: ffi :: c_int , wStride : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetTensor4dDescriptor (tensorDesc , dataType , n , c , h , w , nStride , cStride , hStride , wStride) } }
pub unsafe fn cudnnSetTensorNdDescriptor (tensorDesc : cudnnTensorDescriptor_t , dataType : cudnnDataType_t , nbDims : :: core :: ffi :: c_int , dimA : * const :: core :: ffi :: c_int , strideA : * const :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetTensorNdDescriptor (tensorDesc , dataType , nbDims , dimA , strideA) } }
pub unsafe fn cudnnSetTensorNdDescriptorEx (tensorDesc : cudnnTensorDescriptor_t , format : cudnnTensorFormat_t , dataType : cudnnDataType_t , nbDims : :: core :: ffi :: c_int , dimA : * const :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetTensorNdDescriptorEx (tensorDesc , format , dataType , nbDims , dimA) } }
pub unsafe fn cudnnGetTensorNdDescriptor (tensorDesc : cudnnTensorDescriptor_t , nbDimsRequested : :: core :: ffi :: c_int , dataType : * mut cudnnDataType_t , nbDims : * mut :: core :: ffi :: c_int , dimA : * mut :: core :: ffi :: c_int , strideA : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetTensorNdDescriptor (tensorDesc , nbDimsRequested , dataType , nbDims , dimA , strideA) } }
pub unsafe fn cudnnGetTensorSizeInBytes (tensorDesc : cudnnTensorDescriptor_t , size : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetTensorSizeInBytes (tensorDesc , size) } }
pub unsafe fn cudnnDestroyTensorDescriptor (tensorDesc : cudnnTensorDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyTensorDescriptor (tensorDesc) } }
pub unsafe fn cudnnInitTransformDest (transformDesc : cudnnTensorTransformDescriptor_t , srcDesc : cudnnTensorDescriptor_t , destDesc : cudnnTensorDescriptor_t , destSizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnInitTransformDest (transformDesc , srcDesc , destDesc , destSizeInBytes) } }
pub unsafe fn cudnnCreateTensorTransformDescriptor (transformDesc : * mut cudnnTensorTransformDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateTensorTransformDescriptor (transformDesc) } }
pub unsafe fn cudnnSetTensorTransformDescriptor (transformDesc : cudnnTensorTransformDescriptor_t , nbDims : u32 , destFormat : cudnnTensorFormat_t , padBeforeA : * const i32 , padAfterA : * const i32 , foldA : * const u32 , direction : cudnnFoldingDirection_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetTensorTransformDescriptor (transformDesc , nbDims , destFormat , padBeforeA , padAfterA , foldA , direction) } }
pub unsafe fn cudnnGetTensorTransformDescriptor (transformDesc : cudnnTensorTransformDescriptor_t , nbDimsRequested : u32 , destFormat : * mut cudnnTensorFormat_t , padBeforeA : * mut i32 , padAfterA : * mut i32 , foldA : * mut u32 , direction : * mut cudnnFoldingDirection_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetTensorTransformDescriptor (transformDesc , nbDimsRequested , destFormat , padBeforeA , padAfterA , foldA , direction) } }
pub unsafe fn cudnnDestroyTensorTransformDescriptor (transformDesc : cudnnTensorTransformDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyTensorTransformDescriptor (transformDesc) } }
pub unsafe fn cudnnTransformTensor (handle : cudnnHandle_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnTransformTensor (handle , alpha , xDesc , x , beta , yDesc , y) } }
pub unsafe fn cudnnTransformTensorEx (handle : cudnnHandle_t , transDesc : cudnnTensorTransformDescriptor_t , alpha : * const :: core :: ffi :: c_void , srcDesc : cudnnTensorDescriptor_t , srcData : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , destDesc : cudnnTensorDescriptor_t , destData : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnTransformTensorEx (handle , transDesc , alpha , srcDesc , srcData , beta , destDesc , destData) } }
pub unsafe fn cudnnAddTensor (handle : cudnnHandle_t , alpha : * const :: core :: ffi :: c_void , aDesc : cudnnTensorDescriptor_t , A : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , cDesc : cudnnTensorDescriptor_t , C : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnAddTensor (handle , alpha , aDesc , A , beta , cDesc , C) } }
pub unsafe fn cudnnCreateOpTensorDescriptor (opTensorDesc : * mut cudnnOpTensorDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateOpTensorDescriptor (opTensorDesc) } }
pub unsafe fn cudnnSetOpTensorDescriptor (opTensorDesc : cudnnOpTensorDescriptor_t , opTensorOp : cudnnOpTensorOp_t , opTensorCompType : cudnnDataType_t , opTensorNanOpt : cudnnNanPropagation_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetOpTensorDescriptor (opTensorDesc , opTensorOp , opTensorCompType , opTensorNanOpt) } }
pub unsafe fn cudnnGetOpTensorDescriptor (opTensorDesc : cudnnOpTensorDescriptor_t , opTensorOp : * mut cudnnOpTensorOp_t , opTensorCompType : * mut cudnnDataType_t , opTensorNanOpt : * mut cudnnNanPropagation_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetOpTensorDescriptor (opTensorDesc , opTensorOp , opTensorCompType , opTensorNanOpt) } }
pub unsafe fn cudnnDestroyOpTensorDescriptor (opTensorDesc : cudnnOpTensorDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyOpTensorDescriptor (opTensorDesc) } }
pub unsafe fn cudnnOpTensor (handle : cudnnHandle_t , opTensorDesc : cudnnOpTensorDescriptor_t , alpha1 : * const :: core :: ffi :: c_void , aDesc : cudnnTensorDescriptor_t , A : * const :: core :: ffi :: c_void , alpha2 : * const :: core :: ffi :: c_void , bDesc : cudnnTensorDescriptor_t , B : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , cDesc : cudnnTensorDescriptor_t , C : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnOpTensor (handle , opTensorDesc , alpha1 , aDesc , A , alpha2 , bDesc , B , beta , cDesc , C) } }
pub unsafe fn cudnnCreateReduceTensorDescriptor (reduceTensorDesc : * mut cudnnReduceTensorDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateReduceTensorDescriptor (reduceTensorDesc) } }
pub unsafe fn cudnnSetReduceTensorDescriptor (reduceTensorDesc : cudnnReduceTensorDescriptor_t , reduceTensorOp : cudnnReduceTensorOp_t , reduceTensorCompType : cudnnDataType_t , reduceTensorNanOpt : cudnnNanPropagation_t , reduceTensorIndices : cudnnReduceTensorIndices_t , reduceTensorIndicesType : cudnnIndicesType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetReduceTensorDescriptor (reduceTensorDesc , reduceTensorOp , reduceTensorCompType , reduceTensorNanOpt , reduceTensorIndices , reduceTensorIndicesType) } }
pub unsafe fn cudnnGetReduceTensorDescriptor (reduceTensorDesc : cudnnReduceTensorDescriptor_t , reduceTensorOp : * mut cudnnReduceTensorOp_t , reduceTensorCompType : * mut cudnnDataType_t , reduceTensorNanOpt : * mut cudnnNanPropagation_t , reduceTensorIndices : * mut cudnnReduceTensorIndices_t , reduceTensorIndicesType : * mut cudnnIndicesType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetReduceTensorDescriptor (reduceTensorDesc , reduceTensorOp , reduceTensorCompType , reduceTensorNanOpt , reduceTensorIndices , reduceTensorIndicesType) } }
pub unsafe fn cudnnDestroyReduceTensorDescriptor (reduceTensorDesc : cudnnReduceTensorDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyReduceTensorDescriptor (reduceTensorDesc) } }
pub unsafe fn cudnnGetReductionIndicesSize (handle : cudnnHandle_t , reduceTensorDesc : cudnnReduceTensorDescriptor_t , aDesc : cudnnTensorDescriptor_t , cDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetReductionIndicesSize (handle , reduceTensorDesc , aDesc , cDesc , sizeInBytes) } }
pub unsafe fn cudnnGetReductionWorkspaceSize (handle : cudnnHandle_t , reduceTensorDesc : cudnnReduceTensorDescriptor_t , aDesc : cudnnTensorDescriptor_t , cDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetReductionWorkspaceSize (handle , reduceTensorDesc , aDesc , cDesc , sizeInBytes) } }
pub unsafe fn cudnnReduceTensor (handle : cudnnHandle_t , reduceTensorDesc : cudnnReduceTensorDescriptor_t , indices : * mut :: core :: ffi :: c_void , indicesSizeInBytes : usize , workspace : * mut :: core :: ffi :: c_void , workspaceSizeInBytes : usize , alpha : * const :: core :: ffi :: c_void , aDesc : cudnnTensorDescriptor_t , A : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , cDesc : cudnnTensorDescriptor_t , C : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnReduceTensor (handle , reduceTensorDesc , indices , indicesSizeInBytes , workspace , workspaceSizeInBytes , alpha , aDesc , A , beta , cDesc , C) } }
pub unsafe fn cudnnSetTensor (handle : cudnnHandle_t , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , valuePtr : * const :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetTensor (handle , yDesc , y , valuePtr) } }
pub unsafe fn cudnnScaleTensor (handle : cudnnHandle_t , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , alpha : * const :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnScaleTensor (handle , yDesc , y , alpha) } }
pub unsafe fn cudnnCreateFilterDescriptor (filterDesc : * mut cudnnFilterDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnCreateFilterDescriptor (filterDesc) } }
pub unsafe fn cudnnSetFilter4dDescriptor (filterDesc : cudnnFilterDescriptor_t , dataType : cudnnDataType_t , format : cudnnTensorFormat_t , k : :: core :: ffi :: c_int , c : :: core :: ffi :: c_int , h : :: core :: ffi :: c_int , w : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetFilter4dDescriptor (filterDesc , dataType , format , k , c , h , w) } }
pub unsafe fn cudnnGetFilter4dDescriptor (filterDesc : cudnnFilterDescriptor_t , dataType : * mut cudnnDataType_t , format : * mut cudnnTensorFormat_t , k : * mut :: core :: ffi :: c_int , c : * mut :: core :: ffi :: c_int , h : * mut :: core :: ffi :: c_int , w : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetFilter4dDescriptor (filterDesc , dataType , format , k , c , h , w) } }
pub unsafe fn cudnnSetFilterNdDescriptor (filterDesc : cudnnFilterDescriptor_t , dataType : cudnnDataType_t , format : cudnnTensorFormat_t , nbDims : :: core :: ffi :: c_int , filterDimA : * const :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetFilterNdDescriptor (filterDesc , dataType , format , nbDims , filterDimA) } }
pub unsafe fn cudnnGetFilterNdDescriptor (filterDesc : cudnnFilterDescriptor_t , nbDimsRequested : :: core :: ffi :: c_int , dataType : * mut cudnnDataType_t , format : * mut cudnnTensorFormat_t , nbDims : * mut :: core :: ffi :: c_int , filterDimA : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetFilterNdDescriptor (filterDesc , nbDimsRequested , dataType , format , nbDims , filterDimA) } }
pub unsafe fn cudnnGetFilterSizeInBytes (filterDesc : cudnnFilterDescriptor_t , size : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetFilterSizeInBytes (filterDesc , size) } }
pub unsafe fn cudnnTransformFilter (handle : cudnnHandle_t , transDesc : cudnnTensorTransformDescriptor_t , alpha : * const :: core :: ffi :: c_void , srcDesc : cudnnFilterDescriptor_t , srcData : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , destDesc : cudnnFilterDescriptor_t , destData : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnTransformFilter (handle , transDesc , alpha , srcDesc , srcData , beta , destDesc , destData) } }
pub unsafe fn cudnnDestroyFilterDescriptor (filterDesc : cudnnFilterDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyFilterDescriptor (filterDesc) } }
pub unsafe fn cudnnSoftmaxForward (handle : cudnnHandle_t , algo : cudnnSoftmaxAlgorithm_t , mode : cudnnSoftmaxMode_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSoftmaxForward (handle , algo , mode , alpha , xDesc , x , beta , yDesc , y) } }
pub unsafe fn cudnnCreatePoolingDescriptor (poolingDesc : * mut cudnnPoolingDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreatePoolingDescriptor (poolingDesc) } }
pub unsafe fn cudnnSetPooling2dDescriptor (poolingDesc : cudnnPoolingDescriptor_t , mode : cudnnPoolingMode_t , maxpoolingNanOpt : cudnnNanPropagation_t , windowHeight : :: core :: ffi :: c_int , windowWidth : :: core :: ffi :: c_int , verticalPadding : :: core :: ffi :: c_int , horizontalPadding : :: core :: ffi :: c_int , verticalStride : :: core :: ffi :: c_int , horizontalStride : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetPooling2dDescriptor (poolingDesc , mode , maxpoolingNanOpt , windowHeight , windowWidth , verticalPadding , horizontalPadding , verticalStride , horizontalStride) } }
pub unsafe fn cudnnGetPooling2dDescriptor (poolingDesc : cudnnPoolingDescriptor_t , mode : * mut cudnnPoolingMode_t , maxpoolingNanOpt : * mut cudnnNanPropagation_t , windowHeight : * mut :: core :: ffi :: c_int , windowWidth : * mut :: core :: ffi :: c_int , verticalPadding : * mut :: core :: ffi :: c_int , horizontalPadding : * mut :: core :: ffi :: c_int , verticalStride : * mut :: core :: ffi :: c_int , horizontalStride : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetPooling2dDescriptor (poolingDesc , mode , maxpoolingNanOpt , windowHeight , windowWidth , verticalPadding , horizontalPadding , verticalStride , horizontalStride) } }
pub unsafe fn cudnnSetPoolingNdDescriptor (poolingDesc : cudnnPoolingDescriptor_t , mode : cudnnPoolingMode_t , maxpoolingNanOpt : cudnnNanPropagation_t , nbDims : :: core :: ffi :: c_int , windowDimA : * const :: core :: ffi :: c_int , paddingA : * const :: core :: ffi :: c_int , strideA : * const :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetPoolingNdDescriptor (poolingDesc , mode , maxpoolingNanOpt , nbDims , windowDimA , paddingA , strideA) } }
pub unsafe fn cudnnGetPoolingNdDescriptor (poolingDesc : cudnnPoolingDescriptor_t , nbDimsRequested : :: core :: ffi :: c_int , mode : * mut cudnnPoolingMode_t , maxpoolingNanOpt : * mut cudnnNanPropagation_t , nbDims : * mut :: core :: ffi :: c_int , windowDimA : * mut :: core :: ffi :: c_int , paddingA : * mut :: core :: ffi :: c_int , strideA : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetPoolingNdDescriptor (poolingDesc , nbDimsRequested , mode , maxpoolingNanOpt , nbDims , windowDimA , paddingA , strideA) } }
pub unsafe fn cudnnGetPoolingNdForwardOutputDim (poolingDesc : cudnnPoolingDescriptor_t , inputTensorDesc : cudnnTensorDescriptor_t , nbDims : :: core :: ffi :: c_int , outputTensorDimA : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetPoolingNdForwardOutputDim (poolingDesc , inputTensorDesc , nbDims , outputTensorDimA) } }
pub unsafe fn cudnnGetPooling2dForwardOutputDim (poolingDesc : cudnnPoolingDescriptor_t , inputTensorDesc : cudnnTensorDescriptor_t , n : * mut :: core :: ffi :: c_int , c : * mut :: core :: ffi :: c_int , h : * mut :: core :: ffi :: c_int , w : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetPooling2dForwardOutputDim (poolingDesc , inputTensorDesc , n , c , h , w) } }
pub unsafe fn cudnnDestroyPoolingDescriptor (poolingDesc : cudnnPoolingDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyPoolingDescriptor (poolingDesc) } }
pub unsafe fn cudnnPoolingForward (handle : cudnnHandle_t , poolingDesc : cudnnPoolingDescriptor_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnPoolingForward (handle , poolingDesc , alpha , xDesc , x , beta , yDesc , y) } }
pub unsafe fn cudnnCreateActivationDescriptor (activationDesc : * mut cudnnActivationDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateActivationDescriptor (activationDesc) } }
pub unsafe fn cudnnSetActivationDescriptor (activationDesc : cudnnActivationDescriptor_t , mode : cudnnActivationMode_t , reluNanOpt : cudnnNanPropagation_t , coef : f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetActivationDescriptor (activationDesc , mode , reluNanOpt , coef) } }
pub unsafe fn cudnnGetActivationDescriptor (activationDesc : cudnnActivationDescriptor_t , mode : * mut cudnnActivationMode_t , reluNanOpt : * mut cudnnNanPropagation_t , coef : * mut f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetActivationDescriptor (activationDesc , mode , reluNanOpt , coef) } }
pub unsafe fn cudnnSetActivationDescriptorSwishBeta (activationDesc : cudnnActivationDescriptor_t , swish_beta : f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetActivationDescriptorSwishBeta (activationDesc , swish_beta) } }
pub unsafe fn cudnnGetActivationDescriptorSwishBeta (activationDesc : cudnnActivationDescriptor_t , swish_beta : * mut f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetActivationDescriptorSwishBeta (activationDesc , swish_beta) } }
pub unsafe fn cudnnDestroyActivationDescriptor (activationDesc : cudnnActivationDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyActivationDescriptor (activationDesc) } }
pub unsafe fn cudnnActivationForward (handle : cudnnHandle_t , activationDesc : cudnnActivationDescriptor_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnActivationForward (handle , activationDesc , alpha , xDesc , x , beta , yDesc , y) } }
pub unsafe fn cudnnCreateLRNDescriptor (normDesc : * mut cudnnLRNDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnCreateLRNDescriptor (normDesc) } }
pub unsafe fn cudnnSetLRNDescriptor (normDesc : cudnnLRNDescriptor_t , lrnN : :: core :: ffi :: c_uint , lrnAlpha : f64 , lrnBeta : f64 , lrnK : f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetLRNDescriptor (normDesc , lrnN , lrnAlpha , lrnBeta , lrnK) } }
pub unsafe fn cudnnGetLRNDescriptor (normDesc : cudnnLRNDescriptor_t , lrnN : * mut :: core :: ffi :: c_uint , lrnAlpha : * mut f64 , lrnBeta : * mut f64 , lrnK : * mut f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetLRNDescriptor (normDesc , lrnN , lrnAlpha , lrnBeta , lrnK) } }
pub unsafe fn cudnnDestroyLRNDescriptor (lrnDesc : cudnnLRNDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyLRNDescriptor (lrnDesc) } }
pub unsafe fn cudnnLRNCrossChannelForward (handle : cudnnHandle_t , normDesc : cudnnLRNDescriptor_t , lrnMode : cudnnLRNMode_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnLRNCrossChannelForward (handle , normDesc , lrnMode , alpha , xDesc , x , beta , yDesc , y) } }
pub unsafe fn cudnnDivisiveNormalizationForward (handle : cudnnHandle_t , normDesc : cudnnLRNDescriptor_t , mode : cudnnDivNormMode_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , means : * const :: core :: ffi :: c_void , temp : * mut :: core :: ffi :: c_void , temp2 : * mut :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnDivisiveNormalizationForward (handle , normDesc , mode , alpha , xDesc , x , means , temp , temp2 , beta , yDesc , y) } }
pub unsafe fn cudnnDeriveBNTensorDescriptor (derivedBnDesc : cudnnTensorDescriptor_t , xDesc : cudnnTensorDescriptor_t , mode : cudnnBatchNormMode_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDeriveBNTensorDescriptor (derivedBnDesc , xDesc , mode) } }
pub unsafe fn cudnnBatchNormalizationForwardInference (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , alpha : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , bnScaleBiasMeanVarDesc : cudnnTensorDescriptor_t , bnScale : * const :: core :: ffi :: c_void , bnBias : * const :: core :: ffi :: c_void , estimatedMean : * const :: core :: ffi :: c_void , estimatedVariance : * const :: core :: ffi :: c_void , epsilon : f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnBatchNormalizationForwardInference (handle , mode , alpha , beta , xDesc , x , yDesc , y , bnScaleBiasMeanVarDesc , bnScale , bnBias , estimatedMean , estimatedVariance , epsilon) } }
pub unsafe fn cudnnDeriveNormTensorDescriptor (derivedNormScaleBiasDesc : cudnnTensorDescriptor_t , derivedNormMeanVarDesc : cudnnTensorDescriptor_t , xDesc : cudnnTensorDescriptor_t , mode : cudnnNormMode_t , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnDeriveNormTensorDescriptor (derivedNormScaleBiasDesc , derivedNormMeanVarDesc , xDesc , mode , groupCnt) } }
pub unsafe fn cudnnNormalizationForwardInference (handle : cudnnHandle_t , mode : cudnnNormMode_t , normOps : cudnnNormOps_t , algo : cudnnNormAlgo_t , alpha : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , normScaleBiasDesc : cudnnTensorDescriptor_t , normScale : * const :: core :: ffi :: c_void , normBias : * const :: core :: ffi :: c_void , normMeanVarDesc : cudnnTensorDescriptor_t , estimatedMean : * const :: core :: ffi :: c_void , estimatedVariance : * const :: core :: ffi :: c_void , zDesc : cudnnTensorDescriptor_t , z : * const :: core :: ffi :: c_void , activationDesc : cudnnActivationDescriptor_t , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , epsilon : f64 , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnNormalizationForwardInference (handle , mode , normOps , algo , alpha , beta , xDesc , x , normScaleBiasDesc , normScale , normBias , normMeanVarDesc , estimatedMean , estimatedVariance , zDesc , z , activationDesc , yDesc , y , epsilon , groupCnt) } }
pub unsafe fn cudnnCreateSpatialTransformerDescriptor (stDesc : * mut cudnnSpatialTransformerDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateSpatialTransformerDescriptor (stDesc) } }
pub unsafe fn cudnnSetSpatialTransformerNdDescriptor (stDesc : cudnnSpatialTransformerDescriptor_t , samplerType : cudnnSamplerType_t , dataType : cudnnDataType_t , nbDims : :: core :: ffi :: c_int , dimA : * const :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetSpatialTransformerNdDescriptor (stDesc , samplerType , dataType , nbDims , dimA) } }
pub unsafe fn cudnnDestroySpatialTransformerDescriptor (stDesc : cudnnSpatialTransformerDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroySpatialTransformerDescriptor (stDesc) } }
pub unsafe fn cudnnSpatialTfGridGeneratorForward (handle : cudnnHandle_t , stDesc : cudnnSpatialTransformerDescriptor_t , theta : * const :: core :: ffi :: c_void , grid : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSpatialTfGridGeneratorForward (handle , stDesc , theta , grid) } }
pub unsafe fn cudnnSpatialTfSamplerForward (handle : cudnnHandle_t , stDesc : cudnnSpatialTransformerDescriptor_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , grid : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSpatialTfSamplerForward (handle , stDesc , alpha , xDesc , x , grid , beta , yDesc , y) } }
pub unsafe fn cudnnCreateDropoutDescriptor (dropoutDesc : * mut cudnnDropoutDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateDropoutDescriptor (dropoutDesc) } }
pub unsafe fn cudnnDestroyDropoutDescriptor (dropoutDesc : cudnnDropoutDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyDropoutDescriptor (dropoutDesc) } }
pub unsafe fn cudnnDropoutGetStatesSize (handle : cudnnHandle_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnDropoutGetStatesSize (handle , sizeInBytes) } }
pub unsafe fn cudnnDropoutGetReserveSpaceSize (xdesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnDropoutGetReserveSpaceSize (xdesc , sizeInBytes) } }
pub unsafe fn cudnnSetDropoutDescriptor (dropoutDesc : cudnnDropoutDescriptor_t , handle : cudnnHandle_t , dropout : f32 , states : * mut :: core :: ffi :: c_void , stateSizeInBytes : usize , seed : :: core :: ffi :: c_ulonglong ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetDropoutDescriptor (dropoutDesc , handle , dropout , states , stateSizeInBytes , seed) } }
pub unsafe fn cudnnRestoreDropoutDescriptor (dropoutDesc : cudnnDropoutDescriptor_t , handle : cudnnHandle_t , dropout : f32 , states : * mut :: core :: ffi :: c_void , stateSizeInBytes : usize , seed : :: core :: ffi :: c_ulonglong ,) -> cudnnStatus_t { unsafe { culib () . cudnnRestoreDropoutDescriptor (dropoutDesc , handle , dropout , states , stateSizeInBytes , seed) } }
pub unsafe fn cudnnGetDropoutDescriptor (dropoutDesc : cudnnDropoutDescriptor_t , handle : cudnnHandle_t , dropout : * mut f32 , states : * mut * mut :: core :: ffi :: c_void , seed : * mut :: core :: ffi :: c_ulonglong ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetDropoutDescriptor (dropoutDesc , handle , dropout , states , seed) } }
pub unsafe fn cudnnDropoutForward (handle : cudnnHandle_t , dropoutDesc : cudnnDropoutDescriptor_t , xdesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , ydesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , reserveSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnDropoutForward (handle , dropoutDesc , xdesc , x , ydesc , y , reserveSpace , reserveSpaceSizeInBytes) } }
pub unsafe fn cudnnOpsVersionCheck () -> cudnnStatus_t { unsafe { culib () . cudnnOpsVersionCheck () } }
pub unsafe fn cudnnSoftmaxBackward (handle : cudnnHandle_t , algo : cudnnSoftmaxAlgorithm_t , mode : cudnnSoftmaxMode_t , alpha : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSoftmaxBackward (handle , algo , mode , alpha , yDesc , y , dyDesc , dy , beta , dxDesc , dx) } }
pub unsafe fn cudnnPoolingBackward (handle : cudnnHandle_t , poolingDesc : cudnnPoolingDescriptor_t , alpha : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnPoolingBackward (handle , poolingDesc , alpha , yDesc , y , dyDesc , dy , xDesc , x , beta , dxDesc , dx) } }
pub unsafe fn cudnnActivationBackward (handle : cudnnHandle_t , activationDesc : cudnnActivationDescriptor_t , alpha : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnActivationBackward (handle , activationDesc , alpha , yDesc , y , dyDesc , dy , xDesc , x , beta , dxDesc , dx) } }
pub unsafe fn cudnnLRNCrossChannelBackward (handle : cudnnHandle_t , normDesc : cudnnLRNDescriptor_t , lrnMode : cudnnLRNMode_t , alpha : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnLRNCrossChannelBackward (handle , normDesc , lrnMode , alpha , yDesc , y , dyDesc , dy , xDesc , x , beta , dxDesc , dx) } }
pub unsafe fn cudnnDivisiveNormalizationBackward (handle : cudnnHandle_t , normDesc : cudnnLRNDescriptor_t , mode : cudnnDivNormMode_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , means : * const :: core :: ffi :: c_void , dy : * const :: core :: ffi :: c_void , temp : * mut :: core :: ffi :: c_void , temp2 : * mut :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dXdMeansDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void , dMeans : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnDivisiveNormalizationBackward (handle , normDesc , mode , alpha , xDesc , x , means , dy , temp , temp2 , beta , dXdMeansDesc , dx , dMeans) } }
pub unsafe fn cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , bnOps : cudnnBatchNormOps_t , xDesc : cudnnTensorDescriptor_t , zDesc : cudnnTensorDescriptor_t , yDesc : cudnnTensorDescriptor_t , bnScaleBiasMeanVarDesc : cudnnTensorDescriptor_t , activationDesc : cudnnActivationDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetBatchNormalizationForwardTrainingExWorkspaceSize (handle , mode , bnOps , xDesc , zDesc , yDesc , bnScaleBiasMeanVarDesc , activationDesc , sizeInBytes) } }
pub unsafe fn cudnnGetBatchNormalizationBackwardExWorkspaceSize (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , bnOps : cudnnBatchNormOps_t , xDesc : cudnnTensorDescriptor_t , yDesc : cudnnTensorDescriptor_t , dyDesc : cudnnTensorDescriptor_t , dzDesc : cudnnTensorDescriptor_t , dxDesc : cudnnTensorDescriptor_t , dBnScaleBiasDesc : cudnnTensorDescriptor_t , activationDesc : cudnnActivationDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetBatchNormalizationBackwardExWorkspaceSize (handle , mode , bnOps , xDesc , yDesc , dyDesc , dzDesc , dxDesc , dBnScaleBiasDesc , activationDesc , sizeInBytes) } }
pub unsafe fn cudnnGetBatchNormalizationTrainingExReserveSpaceSize (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , bnOps : cudnnBatchNormOps_t , activationDesc : cudnnActivationDescriptor_t , xDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetBatchNormalizationTrainingExReserveSpaceSize (handle , mode , bnOps , activationDesc , xDesc , sizeInBytes) } }
pub unsafe fn cudnnBatchNormalizationForwardTraining (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , alpha : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , bnScaleBiasMeanVarDesc : cudnnTensorDescriptor_t , bnScale : * const :: core :: ffi :: c_void , bnBias : * const :: core :: ffi :: c_void , exponentialAverageFactor : f64 , resultRunningMean : * mut :: core :: ffi :: c_void , resultRunningVariance : * mut :: core :: ffi :: c_void , epsilon : f64 , resultSaveMean : * mut :: core :: ffi :: c_void , resultSaveInvVariance : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnBatchNormalizationForwardTraining (handle , mode , alpha , beta , xDesc , x , yDesc , y , bnScaleBiasMeanVarDesc , bnScale , bnBias , exponentialAverageFactor , resultRunningMean , resultRunningVariance , epsilon , resultSaveMean , resultSaveInvVariance) } }
pub unsafe fn cudnnBatchNormalizationForwardTrainingEx (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , bnOps : cudnnBatchNormOps_t , alpha : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , xData : * const :: core :: ffi :: c_void , zDesc : cudnnTensorDescriptor_t , zData : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , yData : * mut :: core :: ffi :: c_void , bnScaleBiasMeanVarDesc : cudnnTensorDescriptor_t , bnScale : * const :: core :: ffi :: c_void , bnBias : * const :: core :: ffi :: c_void , exponentialAverageFactor : f64 , resultRunningMean : * mut :: core :: ffi :: c_void , resultRunningVariance : * mut :: core :: ffi :: c_void , epsilon : f64 , resultSaveMean : * mut :: core :: ffi :: c_void , resultSaveInvVariance : * mut :: core :: ffi :: c_void , activationDesc : cudnnActivationDescriptor_t , workspace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnBatchNormalizationForwardTrainingEx (handle , mode , bnOps , alpha , beta , xDesc , xData , zDesc , zData , yDesc , yData , bnScaleBiasMeanVarDesc , bnScale , bnBias , exponentialAverageFactor , resultRunningMean , resultRunningVariance , epsilon , resultSaveMean , resultSaveInvVariance , activationDesc , workspace , workSpaceSizeInBytes , reserveSpace , reserveSpaceSizeInBytes) } }
pub unsafe fn cudnnBatchNormalizationBackward (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , alphaDataDiff : * const :: core :: ffi :: c_void , betaDataDiff : * const :: core :: ffi :: c_void , alphaParamDiff : * const :: core :: ffi :: c_void , betaParamDiff : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void , dBnScaleBiasDesc : cudnnTensorDescriptor_t , bnScale : * const :: core :: ffi :: c_void , dBnScaleResult : * mut :: core :: ffi :: c_void , dBnBiasResult : * mut :: core :: ffi :: c_void , epsilon : f64 , savedMean : * const :: core :: ffi :: c_void , savedInvVariance : * const :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnBatchNormalizationBackward (handle , mode , alphaDataDiff , betaDataDiff , alphaParamDiff , betaParamDiff , xDesc , x , dyDesc , dy , dxDesc , dx , dBnScaleBiasDesc , bnScale , dBnScaleResult , dBnBiasResult , epsilon , savedMean , savedInvVariance) } }
pub unsafe fn cudnnBatchNormalizationBackwardEx (handle : cudnnHandle_t , mode : cudnnBatchNormMode_t , bnOps : cudnnBatchNormOps_t , alphaDataDiff : * const :: core :: ffi :: c_void , betaDataDiff : * const :: core :: ffi :: c_void , alphaParamDiff : * const :: core :: ffi :: c_void , betaParamDiff : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , xData : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , yData : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dyData : * const :: core :: ffi :: c_void , dzDesc : cudnnTensorDescriptor_t , dzData : * mut :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dxData : * mut :: core :: ffi :: c_void , dBnScaleBiasDesc : cudnnTensorDescriptor_t , bnScaleData : * const :: core :: ffi :: c_void , bnBiasData : * const :: core :: ffi :: c_void , dBnScaleData : * mut :: core :: ffi :: c_void , dBnBiasData : * mut :: core :: ffi :: c_void , epsilon : f64 , savedMean : * const :: core :: ffi :: c_void , savedInvVariance : * const :: core :: ffi :: c_void , activationDesc : cudnnActivationDescriptor_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnBatchNormalizationBackwardEx (handle , mode , bnOps , alphaDataDiff , betaDataDiff , alphaParamDiff , betaParamDiff , xDesc , xData , yDesc , yData , dyDesc , dyData , dzDesc , dzData , dxDesc , dxData , dBnScaleBiasDesc , bnScaleData , bnBiasData , dBnScaleData , dBnBiasData , epsilon , savedMean , savedInvVariance , activationDesc , workSpace , workSpaceSizeInBytes , reserveSpace , reserveSpaceSizeInBytes) } }
pub unsafe fn cudnnGetNormalizationForwardTrainingWorkspaceSize (handle : cudnnHandle_t , mode : cudnnNormMode_t , normOps : cudnnNormOps_t , algo : cudnnNormAlgo_t , xDesc : cudnnTensorDescriptor_t , zDesc : cudnnTensorDescriptor_t , yDesc : cudnnTensorDescriptor_t , normScaleBiasDesc : cudnnTensorDescriptor_t , activationDesc : cudnnActivationDescriptor_t , normMeanVarDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetNormalizationForwardTrainingWorkspaceSize (handle , mode , normOps , algo , xDesc , zDesc , yDesc , normScaleBiasDesc , activationDesc , normMeanVarDesc , sizeInBytes , groupCnt) } }
pub unsafe fn cudnnGetNormalizationBackwardWorkspaceSize (handle : cudnnHandle_t , mode : cudnnNormMode_t , normOps : cudnnNormOps_t , algo : cudnnNormAlgo_t , xDesc : cudnnTensorDescriptor_t , yDesc : cudnnTensorDescriptor_t , dyDesc : cudnnTensorDescriptor_t , dzDesc : cudnnTensorDescriptor_t , dxDesc : cudnnTensorDescriptor_t , dNormScaleBiasDesc : cudnnTensorDescriptor_t , activationDesc : cudnnActivationDescriptor_t , normMeanVarDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetNormalizationBackwardWorkspaceSize (handle , mode , normOps , algo , xDesc , yDesc , dyDesc , dzDesc , dxDesc , dNormScaleBiasDesc , activationDesc , normMeanVarDesc , sizeInBytes , groupCnt) } }
pub unsafe fn cudnnGetNormalizationTrainingReserveSpaceSize (handle : cudnnHandle_t , mode : cudnnNormMode_t , normOps : cudnnNormOps_t , algo : cudnnNormAlgo_t , activationDesc : cudnnActivationDescriptor_t , xDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetNormalizationTrainingReserveSpaceSize (handle , mode , normOps , algo , activationDesc , xDesc , sizeInBytes , groupCnt) } }
pub unsafe fn cudnnNormalizationForwardTraining (handle : cudnnHandle_t , mode : cudnnNormMode_t , normOps : cudnnNormOps_t , algo : cudnnNormAlgo_t , alpha : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , xData : * const :: core :: ffi :: c_void , normScaleBiasDesc : cudnnTensorDescriptor_t , normScale : * const :: core :: ffi :: c_void , normBias : * const :: core :: ffi :: c_void , exponentialAverageFactor : f64 , normMeanVarDesc : cudnnTensorDescriptor_t , resultRunningMean : * mut :: core :: ffi :: c_void , resultRunningVariance : * mut :: core :: ffi :: c_void , epsilon : f64 , resultSaveMean : * mut :: core :: ffi :: c_void , resultSaveInvVariance : * mut :: core :: ffi :: c_void , activationDesc : cudnnActivationDescriptor_t , zDesc : cudnnTensorDescriptor_t , zData : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , yData : * mut :: core :: ffi :: c_void , workspace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnNormalizationForwardTraining (handle , mode , normOps , algo , alpha , beta , xDesc , xData , normScaleBiasDesc , normScale , normBias , exponentialAverageFactor , normMeanVarDesc , resultRunningMean , resultRunningVariance , epsilon , resultSaveMean , resultSaveInvVariance , activationDesc , zDesc , zData , yDesc , yData , workspace , workSpaceSizeInBytes , reserveSpace , reserveSpaceSizeInBytes , groupCnt) } }
pub unsafe fn cudnnNormalizationBackward (handle : cudnnHandle_t , mode : cudnnNormMode_t , normOps : cudnnNormOps_t , algo : cudnnNormAlgo_t , alphaDataDiff : * const :: core :: ffi :: c_void , betaDataDiff : * const :: core :: ffi :: c_void , alphaParamDiff : * const :: core :: ffi :: c_void , betaParamDiff : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , xData : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , yData : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dyData : * const :: core :: ffi :: c_void , dzDesc : cudnnTensorDescriptor_t , dzData : * mut :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dxData : * mut :: core :: ffi :: c_void , dNormScaleBiasDesc : cudnnTensorDescriptor_t , normScaleData : * const :: core :: ffi :: c_void , normBiasData : * const :: core :: ffi :: c_void , dNormScaleData : * mut :: core :: ffi :: c_void , dNormBiasData : * mut :: core :: ffi :: c_void , epsilon : f64 , normMeanVarDesc : cudnnTensorDescriptor_t , savedMean : * const :: core :: ffi :: c_void , savedInvVariance : * const :: core :: ffi :: c_void , activationDesc : cudnnActivationDescriptor_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize , groupCnt : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnNormalizationBackward (handle , mode , normOps , algo , alphaDataDiff , betaDataDiff , alphaParamDiff , betaParamDiff , xDesc , xData , yDesc , yData , dyDesc , dyData , dzDesc , dzData , dxDesc , dxData , dNormScaleBiasDesc , normScaleData , normBiasData , dNormScaleData , dNormBiasData , epsilon , normMeanVarDesc , savedMean , savedInvVariance , activationDesc , workSpace , workSpaceSizeInBytes , reserveSpace , reserveSpaceSizeInBytes , groupCnt) } }
pub unsafe fn cudnnSpatialTfGridGeneratorBackward (handle : cudnnHandle_t , stDesc : cudnnSpatialTransformerDescriptor_t , dgrid : * const :: core :: ffi :: c_void , dtheta : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSpatialTfGridGeneratorBackward (handle , stDesc , dgrid , dtheta) } }
pub unsafe fn cudnnSpatialTfSamplerBackward (handle : cudnnHandle_t , stDesc : cudnnSpatialTransformerDescriptor_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void , alphaDgrid : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , grid : * const :: core :: ffi :: c_void , betaDgrid : * const :: core :: ffi :: c_void , dgrid : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSpatialTfSamplerBackward (handle , stDesc , alpha , xDesc , x , beta , dxDesc , dx , alphaDgrid , dyDesc , dy , grid , betaDgrid , dgrid) } }
pub unsafe fn cudnnDropoutBackward (handle : cudnnHandle_t , dropoutDesc : cudnnDropoutDescriptor_t , dydesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , dxdesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void , reserveSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnDropoutBackward (handle , dropoutDesc , dydesc , dy , dxdesc , dx , reserveSpace , reserveSpaceSizeInBytes) } }
pub unsafe fn cudnnCreateRNNDescriptor (rnnDesc : * mut cudnnRNNDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnCreateRNNDescriptor (rnnDesc) } }
pub unsafe fn cudnnDestroyRNNDescriptor (rnnDesc : cudnnRNNDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyRNNDescriptor (rnnDesc) } }
pub unsafe fn cudnnSetRNNDescriptor_v8 (rnnDesc : cudnnRNNDescriptor_t , algo : cudnnRNNAlgo_t , cellMode : cudnnRNNMode_t , biasMode : cudnnRNNBiasMode_t , dirMode : cudnnDirectionMode_t , inputMode : cudnnRNNInputMode_t , dataType : cudnnDataType_t , mathPrec : cudnnDataType_t , mathType : cudnnMathType_t , inputSize : i32 , hiddenSize : i32 , projSize : i32 , numLayers : i32 , dropoutDesc : cudnnDropoutDescriptor_t , auxFlags : u32 ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetRNNDescriptor_v8 (rnnDesc , algo , cellMode , biasMode , dirMode , inputMode , dataType , mathPrec , mathType , inputSize , hiddenSize , projSize , numLayers , dropoutDesc , auxFlags) } }
pub unsafe fn cudnnGetRNNDescriptor_v8 (rnnDesc : cudnnRNNDescriptor_t , algo : * mut cudnnRNNAlgo_t , cellMode : * mut cudnnRNNMode_t , biasMode : * mut cudnnRNNBiasMode_t , dirMode : * mut cudnnDirectionMode_t , inputMode : * mut cudnnRNNInputMode_t , dataType : * mut cudnnDataType_t , mathPrec : * mut cudnnDataType_t , mathType : * mut cudnnMathType_t , inputSize : * mut i32 , hiddenSize : * mut i32 , projSize : * mut i32 , numLayers : * mut i32 , dropoutDesc : * mut cudnnDropoutDescriptor_t , auxFlags : * mut u32 ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetRNNDescriptor_v8 (rnnDesc , algo , cellMode , biasMode , dirMode , inputMode , dataType , mathPrec , mathType , inputSize , hiddenSize , projSize , numLayers , dropoutDesc , auxFlags) } }
pub unsafe fn cudnnRNNSetClip_v8 (rnnDesc : cudnnRNNDescriptor_t , clipMode : cudnnRNNClipMode_t , clipNanOpt : cudnnNanPropagation_t , lclip : f64 , rclip : f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNSetClip_v8 (rnnDesc , clipMode , clipNanOpt , lclip , rclip) } }
pub unsafe fn cudnnRNNSetClip_v9 (rnnDesc : cudnnRNNDescriptor_t , clipMode : cudnnRNNClipMode_t , lclip : f64 , rclip : f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNSetClip_v9 (rnnDesc , clipMode , lclip , rclip) } }
pub unsafe fn cudnnRNNGetClip_v8 (rnnDesc : cudnnRNNDescriptor_t , clipMode : * mut cudnnRNNClipMode_t , clipNanOpt : * mut cudnnNanPropagation_t , lclip : * mut f64 , rclip : * mut f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNGetClip_v8 (rnnDesc , clipMode , clipNanOpt , lclip , rclip) } }
pub unsafe fn cudnnRNNGetClip_v9 (rnnDesc : cudnnRNNDescriptor_t , clipMode : * mut cudnnRNNClipMode_t , lclip : * mut f64 , rclip : * mut f64 ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNGetClip_v9 (rnnDesc , clipMode , lclip , rclip) } }
pub unsafe fn cudnnBuildRNNDynamic (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , miniBatch : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnBuildRNNDynamic (handle , rnnDesc , miniBatch) } }
pub unsafe fn cudnnGetRNNTempSpaceSizes (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , fwdMode : cudnnForwardMode_t , xDesc : cudnnRNNDataDescriptor_t , workSpaceSize : * mut usize , reserveSpaceSize : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetRNNTempSpaceSizes (handle , rnnDesc , fwdMode , xDesc , workSpaceSize , reserveSpaceSize) } }
pub unsafe fn cudnnGetRNNWeightSpaceSize (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , weightSpaceSize : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetRNNWeightSpaceSize (handle , rnnDesc , weightSpaceSize) } }
pub unsafe fn cudnnGetRNNWeightParams (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , pseudoLayer : i32 , weightSpaceSize : usize , weightSpace : * const :: core :: ffi :: c_void , linLayerID : i32 , mDesc : cudnnTensorDescriptor_t , mAddr : * mut * mut :: core :: ffi :: c_void , bDesc : cudnnTensorDescriptor_t , bAddr : * mut * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetRNNWeightParams (handle , rnnDesc , pseudoLayer , weightSpaceSize , weightSpace , linLayerID , mDesc , mAddr , bDesc , bAddr) } }
pub unsafe fn cudnnCreateRNNDataDescriptor (rnnDataDesc : * mut cudnnRNNDataDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateRNNDataDescriptor (rnnDataDesc) } }
pub unsafe fn cudnnDestroyRNNDataDescriptor (rnnDataDesc : cudnnRNNDataDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyRNNDataDescriptor (rnnDataDesc) } }
pub unsafe fn cudnnSetRNNDataDescriptor (rnnDataDesc : cudnnRNNDataDescriptor_t , dataType : cudnnDataType_t , layout : cudnnRNNDataLayout_t , maxSeqLength : :: core :: ffi :: c_int , batchSize : :: core :: ffi :: c_int , vectorSize : :: core :: ffi :: c_int , seqLengthArray : * const :: core :: ffi :: c_int , paddingFill : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetRNNDataDescriptor (rnnDataDesc , dataType , layout , maxSeqLength , batchSize , vectorSize , seqLengthArray , paddingFill) } }
pub unsafe fn cudnnGetRNNDataDescriptor (rnnDataDesc : cudnnRNNDataDescriptor_t , dataType : * mut cudnnDataType_t , layout : * mut cudnnRNNDataLayout_t , maxSeqLength : * mut :: core :: ffi :: c_int , batchSize : * mut :: core :: ffi :: c_int , vectorSize : * mut :: core :: ffi :: c_int , arrayLengthRequested : :: core :: ffi :: c_int , seqLengthArray : * mut :: core :: ffi :: c_int , paddingFill : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetRNNDataDescriptor (rnnDataDesc , dataType , layout , maxSeqLength , batchSize , vectorSize , arrayLengthRequested , seqLengthArray , paddingFill) } }
pub unsafe fn cudnnRNNForward (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , fwdMode : cudnnForwardMode_t , devSeqLengths : * const i32 , xDesc : cudnnRNNDataDescriptor_t , x : * const :: core :: ffi :: c_void , yDesc : cudnnRNNDataDescriptor_t , y : * mut :: core :: ffi :: c_void , hDesc : cudnnTensorDescriptor_t , hx : * const :: core :: ffi :: c_void , hy : * mut :: core :: ffi :: c_void , cDesc : cudnnTensorDescriptor_t , cx : * const :: core :: ffi :: c_void , cy : * mut :: core :: ffi :: c_void , weightSpaceSize : usize , weightSpace : * const :: core :: ffi :: c_void , workSpaceSize : usize , workSpace : * mut :: core :: ffi :: c_void , reserveSpaceSize : usize , reserveSpace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNForward (handle , rnnDesc , fwdMode , devSeqLengths , xDesc , x , yDesc , y , hDesc , hx , hy , cDesc , cx , cy , weightSpaceSize , weightSpace , workSpaceSize , workSpace , reserveSpaceSize , reserveSpace) } }
pub unsafe fn cudnnCreateSeqDataDescriptor (seqDataDesc : * mut cudnnSeqDataDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateSeqDataDescriptor (seqDataDesc) } }
pub unsafe fn cudnnDestroySeqDataDescriptor (seqDataDesc : cudnnSeqDataDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroySeqDataDescriptor (seqDataDesc) } }
pub unsafe fn cudnnSetSeqDataDescriptor (seqDataDesc : cudnnSeqDataDescriptor_t , dataType : cudnnDataType_t , nbDims : :: core :: ffi :: c_int , dimA : * const :: core :: ffi :: c_int , axes : * const cudnnSeqDataAxis_t , seqLengthArraySize : usize , seqLengthArray : * const :: core :: ffi :: c_int , paddingFill : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetSeqDataDescriptor (seqDataDesc , dataType , nbDims , dimA , axes , seqLengthArraySize , seqLengthArray , paddingFill) } }
pub unsafe fn cudnnGetSeqDataDescriptor (seqDataDesc : cudnnSeqDataDescriptor_t , dataType : * mut cudnnDataType_t , nbDims : * mut :: core :: ffi :: c_int , nbDimsRequested : :: core :: ffi :: c_int , dimA : * mut :: core :: ffi :: c_int , axes : * mut cudnnSeqDataAxis_t , seqLengthArraySize : * mut usize , seqLengthSizeRequested : usize , seqLengthArray : * mut :: core :: ffi :: c_int , paddingFill : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetSeqDataDescriptor (seqDataDesc , dataType , nbDims , nbDimsRequested , dimA , axes , seqLengthArraySize , seqLengthSizeRequested , seqLengthArray , paddingFill) } }
pub unsafe fn cudnnCreateAttnDescriptor (attnDesc : * mut cudnnAttnDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnCreateAttnDescriptor (attnDesc) } }
pub unsafe fn cudnnDestroyAttnDescriptor (attnDesc : cudnnAttnDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyAttnDescriptor (attnDesc) } }
pub unsafe fn cudnnSetAttnDescriptor (attnDesc : cudnnAttnDescriptor_t , attnMode : :: core :: ffi :: c_uint , nHeads : :: core :: ffi :: c_int , smScaler : f64 , dataType : cudnnDataType_t , computePrec : cudnnDataType_t , mathType : cudnnMathType_t , attnDropoutDesc : cudnnDropoutDescriptor_t , postDropoutDesc : cudnnDropoutDescriptor_t , qSize : :: core :: ffi :: c_int , kSize : :: core :: ffi :: c_int , vSize : :: core :: ffi :: c_int , qProjSize : :: core :: ffi :: c_int , kProjSize : :: core :: ffi :: c_int , vProjSize : :: core :: ffi :: c_int , oProjSize : :: core :: ffi :: c_int , qoMaxSeqLength : :: core :: ffi :: c_int , kvMaxSeqLength : :: core :: ffi :: c_int , maxBatchSize : :: core :: ffi :: c_int , maxBeamSize : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetAttnDescriptor (attnDesc , attnMode , nHeads , smScaler , dataType , computePrec , mathType , attnDropoutDesc , postDropoutDesc , qSize , kSize , vSize , qProjSize , kProjSize , vProjSize , oProjSize , qoMaxSeqLength , kvMaxSeqLength , maxBatchSize , maxBeamSize) } }
pub unsafe fn cudnnGetAttnDescriptor (attnDesc : cudnnAttnDescriptor_t , attnMode : * mut :: core :: ffi :: c_uint , nHeads : * mut :: core :: ffi :: c_int , smScaler : * mut f64 , dataType : * mut cudnnDataType_t , computePrec : * mut cudnnDataType_t , mathType : * mut cudnnMathType_t , attnDropoutDesc : * mut cudnnDropoutDescriptor_t , postDropoutDesc : * mut cudnnDropoutDescriptor_t , qSize : * mut :: core :: ffi :: c_int , kSize : * mut :: core :: ffi :: c_int , vSize : * mut :: core :: ffi :: c_int , qProjSize : * mut :: core :: ffi :: c_int , kProjSize : * mut :: core :: ffi :: c_int , vProjSize : * mut :: core :: ffi :: c_int , oProjSize : * mut :: core :: ffi :: c_int , qoMaxSeqLength : * mut :: core :: ffi :: c_int , kvMaxSeqLength : * mut :: core :: ffi :: c_int , maxBatchSize : * mut :: core :: ffi :: c_int , maxBeamSize : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetAttnDescriptor (attnDesc , attnMode , nHeads , smScaler , dataType , computePrec , mathType , attnDropoutDesc , postDropoutDesc , qSize , kSize , vSize , qProjSize , kProjSize , vProjSize , oProjSize , qoMaxSeqLength , kvMaxSeqLength , maxBatchSize , maxBeamSize) } }
pub unsafe fn cudnnGetMultiHeadAttnBuffers (handle : cudnnHandle_t , attnDesc : cudnnAttnDescriptor_t , weightSizeInBytes : * mut usize , workSpaceSizeInBytes : * mut usize , reserveSpaceSizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetMultiHeadAttnBuffers (handle , attnDesc , weightSizeInBytes , workSpaceSizeInBytes , reserveSpaceSizeInBytes) } }
pub unsafe fn cudnnGetMultiHeadAttnWeights (handle : cudnnHandle_t , attnDesc : cudnnAttnDescriptor_t , wKind : cudnnMultiHeadAttnWeightKind_t , weightSizeInBytes : usize , weights : * const :: core :: ffi :: c_void , wDesc : cudnnTensorDescriptor_t , wAddr : * mut * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetMultiHeadAttnWeights (handle , attnDesc , wKind , weightSizeInBytes , weights , wDesc , wAddr) } }
pub unsafe fn cudnnMultiHeadAttnForward (handle : cudnnHandle_t , attnDesc : cudnnAttnDescriptor_t , currIdx : :: core :: ffi :: c_int , loWinIdx : * const :: core :: ffi :: c_int , hiWinIdx : * const :: core :: ffi :: c_int , devSeqLengthsQO : * const :: core :: ffi :: c_int , devSeqLengthsKV : * const :: core :: ffi :: c_int , qDesc : cudnnSeqDataDescriptor_t , queries : * const :: core :: ffi :: c_void , residuals : * const :: core :: ffi :: c_void , kDesc : cudnnSeqDataDescriptor_t , keys : * const :: core :: ffi :: c_void , vDesc : cudnnSeqDataDescriptor_t , values : * const :: core :: ffi :: c_void , oDesc : cudnnSeqDataDescriptor_t , out : * mut :: core :: ffi :: c_void , weightSizeInBytes : usize , weights : * const :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , workSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnMultiHeadAttnForward (handle , attnDesc , currIdx , loWinIdx , hiWinIdx , devSeqLengthsQO , devSeqLengthsKV , qDesc , queries , residuals , kDesc , keys , vDesc , values , oDesc , out , weightSizeInBytes , weights , workSpaceSizeInBytes , workSpace , reserveSpaceSizeInBytes , reserveSpace) } }
pub unsafe fn cudnnAdvVersionCheck () -> cudnnStatus_t { unsafe { culib () . cudnnAdvVersionCheck () } }
pub unsafe fn cudnnRNNBackwardData_v8 (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , devSeqLengths : * const i32 , yDesc : cudnnRNNDataDescriptor_t , y : * const :: core :: ffi :: c_void , dy : * const :: core :: ffi :: c_void , xDesc : cudnnRNNDataDescriptor_t , dx : * mut :: core :: ffi :: c_void , hDesc : cudnnTensorDescriptor_t , hx : * const :: core :: ffi :: c_void , dhy : * const :: core :: ffi :: c_void , dhx : * mut :: core :: ffi :: c_void , cDesc : cudnnTensorDescriptor_t , cx : * const :: core :: ffi :: c_void , dcy : * const :: core :: ffi :: c_void , dcx : * mut :: core :: ffi :: c_void , weightSpaceSize : usize , weightSpace : * const :: core :: ffi :: c_void , workSpaceSize : usize , workSpace : * mut :: core :: ffi :: c_void , reserveSpaceSize : usize , reserveSpace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNBackwardData_v8 (handle , rnnDesc , devSeqLengths , yDesc , y , dy , xDesc , dx , hDesc , hx , dhy , dhx , cDesc , cx , dcy , dcx , weightSpaceSize , weightSpace , workSpaceSize , workSpace , reserveSpaceSize , reserveSpace) } }
pub unsafe fn cudnnRNNBackwardWeights_v8 (handle : cudnnHandle_t , rnnDesc : cudnnRNNDescriptor_t , addGrad : cudnnWgradMode_t , devSeqLengths : * const i32 , xDesc : cudnnRNNDataDescriptor_t , x : * const :: core :: ffi :: c_void , hDesc : cudnnTensorDescriptor_t , hx : * const :: core :: ffi :: c_void , yDesc : cudnnRNNDataDescriptor_t , y : * const :: core :: ffi :: c_void , weightSpaceSize : usize , dweightSpace : * mut :: core :: ffi :: c_void , workSpaceSize : usize , workSpace : * mut :: core :: ffi :: c_void , reserveSpaceSize : usize , reserveSpace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnRNNBackwardWeights_v8 (handle , rnnDesc , addGrad , devSeqLengths , xDesc , x , hDesc , hx , yDesc , y , weightSpaceSize , dweightSpace , workSpaceSize , workSpace , reserveSpaceSize , reserveSpace) } }
pub unsafe fn cudnnMultiHeadAttnBackwardData (handle : cudnnHandle_t , attnDesc : cudnnAttnDescriptor_t , loWinIdx : * const :: core :: ffi :: c_int , hiWinIdx : * const :: core :: ffi :: c_int , devSeqLengthsDQDO : * const :: core :: ffi :: c_int , devSeqLengthsDKDV : * const :: core :: ffi :: c_int , doDesc : cudnnSeqDataDescriptor_t , dout : * const :: core :: ffi :: c_void , dqDesc : cudnnSeqDataDescriptor_t , dqueries : * mut :: core :: ffi :: c_void , queries : * const :: core :: ffi :: c_void , dkDesc : cudnnSeqDataDescriptor_t , dkeys : * mut :: core :: ffi :: c_void , keys : * const :: core :: ffi :: c_void , dvDesc : cudnnSeqDataDescriptor_t , dvalues : * mut :: core :: ffi :: c_void , values : * const :: core :: ffi :: c_void , weightSizeInBytes : usize , weights : * const :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , workSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnMultiHeadAttnBackwardData (handle , attnDesc , loWinIdx , hiWinIdx , devSeqLengthsDQDO , devSeqLengthsDKDV , doDesc , dout , dqDesc , dqueries , queries , dkDesc , dkeys , keys , dvDesc , dvalues , values , weightSizeInBytes , weights , workSpaceSizeInBytes , workSpace , reserveSpaceSizeInBytes , reserveSpace) } }
pub unsafe fn cudnnMultiHeadAttnBackwardWeights (handle : cudnnHandle_t , attnDesc : cudnnAttnDescriptor_t , addGrad : cudnnWgradMode_t , qDesc : cudnnSeqDataDescriptor_t , queries : * const :: core :: ffi :: c_void , kDesc : cudnnSeqDataDescriptor_t , keys : * const :: core :: ffi :: c_void , vDesc : cudnnSeqDataDescriptor_t , values : * const :: core :: ffi :: c_void , doDesc : cudnnSeqDataDescriptor_t , dout : * const :: core :: ffi :: c_void , weightSizeInBytes : usize , weights : * const :: core :: ffi :: c_void , dweights : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , workSpace : * mut :: core :: ffi :: c_void , reserveSpaceSizeInBytes : usize , reserveSpace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnMultiHeadAttnBackwardWeights (handle , attnDesc , addGrad , qDesc , queries , kDesc , keys , vDesc , values , doDesc , dout , weightSizeInBytes , weights , dweights , workSpaceSizeInBytes , workSpace , reserveSpaceSizeInBytes , reserveSpace) } }
pub unsafe fn cudnnCreateCTCLossDescriptor (ctcLossDesc : * mut cudnnCTCLossDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateCTCLossDescriptor (ctcLossDesc) } }
pub unsafe fn cudnnSetCTCLossDescriptor (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : cudnnDataType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetCTCLossDescriptor (ctcLossDesc , compType) } }
pub unsafe fn cudnnSetCTCLossDescriptorEx (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : cudnnDataType_t , normMode : cudnnLossNormalizationMode_t , gradMode : cudnnNanPropagation_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetCTCLossDescriptorEx (ctcLossDesc , compType , normMode , gradMode) } }
pub unsafe fn cudnnSetCTCLossDescriptor_v8 (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : cudnnDataType_t , normMode : cudnnLossNormalizationMode_t , gradMode : cudnnNanPropagation_t , maxLabelLength : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetCTCLossDescriptor_v8 (ctcLossDesc , compType , normMode , gradMode , maxLabelLength) } }
pub unsafe fn cudnnSetCTCLossDescriptor_v9 (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : cudnnDataType_t , normMode : cudnnLossNormalizationMode_t , ctcGradMode : cudnnCTCGradMode_t , maxLabelLength : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetCTCLossDescriptor_v9 (ctcLossDesc , compType , normMode , ctcGradMode , maxLabelLength) } }
pub unsafe fn cudnnGetCTCLossDescriptor (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : * mut cudnnDataType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCTCLossDescriptor (ctcLossDesc , compType) } }
pub unsafe fn cudnnGetCTCLossDescriptorEx (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : * mut cudnnDataType_t , normMode : * mut cudnnLossNormalizationMode_t , gradMode : * mut cudnnNanPropagation_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCTCLossDescriptorEx (ctcLossDesc , compType , normMode , gradMode) } }
pub unsafe fn cudnnGetCTCLossDescriptor_v8 (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : * mut cudnnDataType_t , normMode : * mut cudnnLossNormalizationMode_t , gradMode : * mut cudnnNanPropagation_t , maxLabelLength : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCTCLossDescriptor_v8 (ctcLossDesc , compType , normMode , gradMode , maxLabelLength) } }
pub unsafe fn cudnnGetCTCLossDescriptor_v9 (ctcLossDesc : cudnnCTCLossDescriptor_t , compType : * mut cudnnDataType_t , normMode : * mut cudnnLossNormalizationMode_t , ctcGradMode : * mut cudnnCTCGradMode_t , maxLabelLength : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCTCLossDescriptor_v9 (ctcLossDesc , compType , normMode , ctcGradMode , maxLabelLength) } }
pub unsafe fn cudnnDestroyCTCLossDescriptor (ctcLossDesc : cudnnCTCLossDescriptor_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyCTCLossDescriptor (ctcLossDesc) } }
pub unsafe fn cudnnCTCLoss (handle : cudnnHandle_t , probsDesc : cudnnTensorDescriptor_t , probs : * const :: core :: ffi :: c_void , hostLabels : * const :: core :: ffi :: c_int , hostLabelLengths : * const :: core :: ffi :: c_int , hostInputLengths : * const :: core :: ffi :: c_int , costs : * mut :: core :: ffi :: c_void , gradientsDesc : cudnnTensorDescriptor_t , gradients : * mut :: core :: ffi :: c_void , algo : cudnnCTCLossAlgo_t , ctcLossDesc : cudnnCTCLossDescriptor_t , workspace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnCTCLoss (handle , probsDesc , probs , hostLabels , hostLabelLengths , hostInputLengths , costs , gradientsDesc , gradients , algo , ctcLossDesc , workspace , workSpaceSizeInBytes) } }
pub unsafe fn cudnnCTCLoss_v8 (handle : cudnnHandle_t , algo : cudnnCTCLossAlgo_t , ctcLossDesc : cudnnCTCLossDescriptor_t , probsDesc : cudnnTensorDescriptor_t , probs : * const :: core :: ffi :: c_void , labels : * const :: core :: ffi :: c_int , labelLengths : * const :: core :: ffi :: c_int , inputLengths : * const :: core :: ffi :: c_int , costs : * mut :: core :: ffi :: c_void , gradientsDesc : cudnnTensorDescriptor_t , gradients : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , workspace : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnCTCLoss_v8 (handle , algo , ctcLossDesc , probsDesc , probs , labels , labelLengths , inputLengths , costs , gradientsDesc , gradients , workSpaceSizeInBytes , workspace) } }
pub unsafe fn cudnnGetCTCLossWorkspaceSize (handle : cudnnHandle_t , probsDesc : cudnnTensorDescriptor_t , gradientsDesc : cudnnTensorDescriptor_t , labels : * const :: core :: ffi :: c_int , labelLengths : * const :: core :: ffi :: c_int , inputLengths : * const :: core :: ffi :: c_int , algo : cudnnCTCLossAlgo_t , ctcLossDesc : cudnnCTCLossDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCTCLossWorkspaceSize (handle , probsDesc , gradientsDesc , labels , labelLengths , inputLengths , algo , ctcLossDesc , sizeInBytes) } }
pub unsafe fn cudnnGetCTCLossWorkspaceSize_v8 (handle : cudnnHandle_t , algo : cudnnCTCLossAlgo_t , ctcLossDesc : cudnnCTCLossDescriptor_t , probsDesc : cudnnTensorDescriptor_t , gradientsDesc : cudnnTensorDescriptor_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetCTCLossWorkspaceSize_v8 (handle , algo , ctcLossDesc , probsDesc , gradientsDesc , sizeInBytes) } }
pub unsafe fn cudnnCreateConvolutionDescriptor (convDesc : * mut cudnnConvolutionDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateConvolutionDescriptor (convDesc) } }
pub unsafe fn cudnnDestroyConvolutionDescriptor (convDesc : cudnnConvolutionDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyConvolutionDescriptor (convDesc) } }
pub unsafe fn cudnnSetConvolutionMathType (convDesc : cudnnConvolutionDescriptor_t , mathType : cudnnMathType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetConvolutionMathType (convDesc , mathType) } }
pub unsafe fn cudnnGetConvolutionMathType (convDesc : cudnnConvolutionDescriptor_t , mathType : * mut cudnnMathType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionMathType (convDesc , mathType) } }
pub unsafe fn cudnnSetConvolutionGroupCount (convDesc : cudnnConvolutionDescriptor_t , groupCount : :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetConvolutionGroupCount (convDesc , groupCount) } }
pub unsafe fn cudnnGetConvolutionGroupCount (convDesc : cudnnConvolutionDescriptor_t , groupCount : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionGroupCount (convDesc , groupCount) } }
pub unsafe fn cudnnSetConvolutionReorderType (convDesc : cudnnConvolutionDescriptor_t , reorderType : cudnnReorderType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetConvolutionReorderType (convDesc , reorderType) } }
pub unsafe fn cudnnGetConvolutionReorderType (convDesc : cudnnConvolutionDescriptor_t , reorderType : * mut cudnnReorderType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionReorderType (convDesc , reorderType) } }
pub unsafe fn cudnnSetConvolution2dDescriptor (convDesc : cudnnConvolutionDescriptor_t , pad_h : :: core :: ffi :: c_int , pad_w : :: core :: ffi :: c_int , u : :: core :: ffi :: c_int , v : :: core :: ffi :: c_int , dilation_h : :: core :: ffi :: c_int , dilation_w : :: core :: ffi :: c_int , mode : cudnnConvolutionMode_t , computeType : cudnnDataType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetConvolution2dDescriptor (convDesc , pad_h , pad_w , u , v , dilation_h , dilation_w , mode , computeType) } }
pub unsafe fn cudnnGetConvolution2dDescriptor (convDesc : cudnnConvolutionDescriptor_t , pad_h : * mut :: core :: ffi :: c_int , pad_w : * mut :: core :: ffi :: c_int , u : * mut :: core :: ffi :: c_int , v : * mut :: core :: ffi :: c_int , dilation_h : * mut :: core :: ffi :: c_int , dilation_w : * mut :: core :: ffi :: c_int , mode : * mut cudnnConvolutionMode_t , computeType : * mut cudnnDataType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolution2dDescriptor (convDesc , pad_h , pad_w , u , v , dilation_h , dilation_w , mode , computeType) } }
pub unsafe fn cudnnSetConvolutionNdDescriptor (convDesc : cudnnConvolutionDescriptor_t , arrayLength : :: core :: ffi :: c_int , padA : * const :: core :: ffi :: c_int , filterStrideA : * const :: core :: ffi :: c_int , dilationA : * const :: core :: ffi :: c_int , mode : cudnnConvolutionMode_t , computeType : cudnnDataType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetConvolutionNdDescriptor (convDesc , arrayLength , padA , filterStrideA , dilationA , mode , computeType) } }
pub unsafe fn cudnnGetConvolutionNdDescriptor (convDesc : cudnnConvolutionDescriptor_t , arrayLengthRequested : :: core :: ffi :: c_int , arrayLength : * mut :: core :: ffi :: c_int , padA : * mut :: core :: ffi :: c_int , strideA : * mut :: core :: ffi :: c_int , dilationA : * mut :: core :: ffi :: c_int , mode : * mut cudnnConvolutionMode_t , computeType : * mut cudnnDataType_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionNdDescriptor (convDesc , arrayLengthRequested , arrayLength , padA , strideA , dilationA , mode , computeType) } }
pub unsafe fn cudnnGetConvolution2dForwardOutputDim (convDesc : cudnnConvolutionDescriptor_t , inputTensorDesc : cudnnTensorDescriptor_t , filterDesc : cudnnFilterDescriptor_t , n : * mut :: core :: ffi :: c_int , c : * mut :: core :: ffi :: c_int , h : * mut :: core :: ffi :: c_int , w : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolution2dForwardOutputDim (convDesc , inputTensorDesc , filterDesc , n , c , h , w) } }
pub unsafe fn cudnnGetConvolutionNdForwardOutputDim (convDesc : cudnnConvolutionDescriptor_t , inputTensorDesc : cudnnTensorDescriptor_t , filterDesc : cudnnFilterDescriptor_t , nbDims : :: core :: ffi :: c_int , tensorOuputDimA : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionNdForwardOutputDim (convDesc , inputTensorDesc , filterDesc , nbDims , tensorOuputDimA) } }
pub unsafe fn cudnnGetConvolutionForwardAlgorithmMaxCount (handle : cudnnHandle_t , count : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionForwardAlgorithmMaxCount (handle , count) } }
pub unsafe fn cudnnGetConvolutionForwardAlgorithm_v7 (handle : cudnnHandle_t , srcDesc : cudnnTensorDescriptor_t , filterDesc : cudnnFilterDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , destDesc : cudnnTensorDescriptor_t , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionFwdAlgoPerf_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionForwardAlgorithm_v7 (handle , srcDesc , filterDesc , convDesc , destDesc , requestedAlgoCount , returnedAlgoCount , perfResults) } }
pub unsafe fn cudnnFindConvolutionForwardAlgorithm (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , wDesc : cudnnFilterDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , yDesc : cudnnTensorDescriptor_t , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionFwdAlgoPerf_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnFindConvolutionForwardAlgorithm (handle , xDesc , wDesc , convDesc , yDesc , requestedAlgoCount , returnedAlgoCount , perfResults) } }
pub unsafe fn cudnnFindConvolutionForwardAlgorithmEx (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , wDesc : cudnnFilterDescriptor_t , w : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionFwdAlgoPerf_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnFindConvolutionForwardAlgorithmEx (handle , xDesc , x , wDesc , w , convDesc , yDesc , y , requestedAlgoCount , returnedAlgoCount , perfResults , workSpace , workSpaceSizeInBytes) } }
pub unsafe fn cudnnIm2Col (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , wDesc : cudnnFilterDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , colBuffer : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnIm2Col (handle , xDesc , x , wDesc , convDesc , colBuffer) } }
pub unsafe fn cudnnReorderFilterAndBias (handle : cudnnHandle_t , filterDesc : cudnnFilterDescriptor_t , reorderType : cudnnReorderType_t , filterData : * const :: core :: ffi :: c_void , reorderedFilterData : * mut :: core :: ffi :: c_void , reorderBias : :: core :: ffi :: c_int , biasData : * const :: core :: ffi :: c_void , reorderedBiasData : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnReorderFilterAndBias (handle , filterDesc , reorderType , filterData , reorderedFilterData , reorderBias , biasData , reorderedBiasData) } }
pub unsafe fn cudnnGetConvolutionForwardWorkspaceSize (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , wDesc : cudnnFilterDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , yDesc : cudnnTensorDescriptor_t , algo : cudnnConvolutionFwdAlgo_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionForwardWorkspaceSize (handle , xDesc , wDesc , convDesc , yDesc , algo , sizeInBytes) } }
pub unsafe fn cudnnConvolutionForward (handle : cudnnHandle_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , wDesc : cudnnFilterDescriptor_t , w : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , algo : cudnnConvolutionFwdAlgo_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , beta : * const :: core :: ffi :: c_void , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnConvolutionForward (handle , alpha , xDesc , x , wDesc , w , convDesc , algo , workSpace , workSpaceSizeInBytes , beta , yDesc , y) } }
pub unsafe fn cudnnConvolutionBiasActivationForward (handle : cudnnHandle_t , alpha1 : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , wDesc : cudnnFilterDescriptor_t , w : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , algo : cudnnConvolutionFwdAlgo_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , alpha2 : * const :: core :: ffi :: c_void , zDesc : cudnnTensorDescriptor_t , z : * const :: core :: ffi :: c_void , biasDesc : cudnnTensorDescriptor_t , bias : * const :: core :: ffi :: c_void , activationDesc : cudnnActivationDescriptor_t , yDesc : cudnnTensorDescriptor_t , y : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnConvolutionBiasActivationForward (handle , alpha1 , xDesc , x , wDesc , w , convDesc , algo , workSpace , workSpaceSizeInBytes , alpha2 , zDesc , z , biasDesc , bias , activationDesc , yDesc , y) } }
pub unsafe fn cudnnGetConvolutionBackwardDataAlgorithmMaxCount (handle : cudnnHandle_t , count : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionBackwardDataAlgorithmMaxCount (handle , count) } }
pub unsafe fn cudnnFindConvolutionBackwardDataAlgorithm (handle : cudnnHandle_t , wDesc : cudnnFilterDescriptor_t , dyDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , dxDesc : cudnnTensorDescriptor_t , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionBwdDataAlgoPerf_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnFindConvolutionBackwardDataAlgorithm (handle , wDesc , dyDesc , convDesc , dxDesc , requestedAlgoCount , returnedAlgoCount , perfResults) } }
pub unsafe fn cudnnFindConvolutionBackwardDataAlgorithmEx (handle : cudnnHandle_t , wDesc : cudnnFilterDescriptor_t , w : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionBwdDataAlgoPerf_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnFindConvolutionBackwardDataAlgorithmEx (handle , wDesc , w , dyDesc , dy , convDesc , dxDesc , dx , requestedAlgoCount , returnedAlgoCount , perfResults , workSpace , workSpaceSizeInBytes) } }
pub unsafe fn cudnnGetConvolutionBackwardDataAlgorithm_v7 (handle : cudnnHandle_t , filterDesc : cudnnFilterDescriptor_t , diffDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , gradDesc : cudnnTensorDescriptor_t , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionBwdDataAlgoPerf_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionBackwardDataAlgorithm_v7 (handle , filterDesc , diffDesc , convDesc , gradDesc , requestedAlgoCount , returnedAlgoCount , perfResults) } }
pub unsafe fn cudnnGetConvolutionBackwardDataWorkspaceSize (handle : cudnnHandle_t , wDesc : cudnnFilterDescriptor_t , dyDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , dxDesc : cudnnTensorDescriptor_t , algo : cudnnConvolutionBwdDataAlgo_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionBackwardDataWorkspaceSize (handle , wDesc , dyDesc , convDesc , dxDesc , algo , sizeInBytes) } }
pub unsafe fn cudnnConvolutionBackwardData (handle : cudnnHandle_t , alpha : * const :: core :: ffi :: c_void , wDesc : cudnnFilterDescriptor_t , w : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , algo : cudnnConvolutionBwdDataAlgo_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , beta : * const :: core :: ffi :: c_void , dxDesc : cudnnTensorDescriptor_t , dx : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnConvolutionBackwardData (handle , alpha , wDesc , w , dyDesc , dy , convDesc , algo , workSpace , workSpaceSizeInBytes , beta , dxDesc , dx) } }
pub unsafe fn cudnnGetFoldedConvBackwardDataDescriptors (handle : cudnnHandle_t , filterDesc : cudnnFilterDescriptor_t , diffDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , gradDesc : cudnnTensorDescriptor_t , transformFormat : cudnnTensorFormat_t , foldedFilterDesc : cudnnFilterDescriptor_t , paddedDiffDesc : cudnnTensorDescriptor_t , foldedConvDesc : cudnnConvolutionDescriptor_t , foldedGradDesc : cudnnTensorDescriptor_t , filterFoldTransDesc : cudnnTensorTransformDescriptor_t , diffPadTransDesc : cudnnTensorTransformDescriptor_t , gradFoldTransDesc : cudnnTensorTransformDescriptor_t , gradUnfoldTransDesc : cudnnTensorTransformDescriptor_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetFoldedConvBackwardDataDescriptors (handle , filterDesc , diffDesc , convDesc , gradDesc , transformFormat , foldedFilterDesc , paddedDiffDesc , foldedConvDesc , foldedGradDesc , filterFoldTransDesc , diffPadTransDesc , gradFoldTransDesc , gradUnfoldTransDesc) } }
pub unsafe fn cudnnCnnVersionCheck () -> cudnnStatus_t { unsafe { culib () . cudnnCnnVersionCheck () } }
pub unsafe fn cudnnGetConvolutionBackwardFilterAlgorithmMaxCount (handle : cudnnHandle_t , count : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionBackwardFilterAlgorithmMaxCount (handle , count) } }
pub unsafe fn cudnnFindConvolutionBackwardFilterAlgorithm (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , dyDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , dwDesc : cudnnFilterDescriptor_t , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionBwdFilterAlgoPerf_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnFindConvolutionBackwardFilterAlgorithm (handle , xDesc , dyDesc , convDesc , dwDesc , requestedAlgoCount , returnedAlgoCount , perfResults) } }
pub unsafe fn cudnnFindConvolutionBackwardFilterAlgorithmEx (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , y : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , dwDesc : cudnnFilterDescriptor_t , dw : * mut :: core :: ffi :: c_void , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionBwdFilterAlgoPerf_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnFindConvolutionBackwardFilterAlgorithmEx (handle , xDesc , x , dyDesc , y , convDesc , dwDesc , dw , requestedAlgoCount , returnedAlgoCount , perfResults , workSpace , workSpaceSizeInBytes) } }
pub unsafe fn cudnnGetConvolutionBackwardFilterAlgorithm_v7 (handle : cudnnHandle_t , srcDesc : cudnnTensorDescriptor_t , diffDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , gradDesc : cudnnFilterDescriptor_t , requestedAlgoCount : :: core :: ffi :: c_int , returnedAlgoCount : * mut :: core :: ffi :: c_int , perfResults : * mut cudnnConvolutionBwdFilterAlgoPerf_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionBackwardFilterAlgorithm_v7 (handle , srcDesc , diffDesc , convDesc , gradDesc , requestedAlgoCount , returnedAlgoCount , perfResults) } }
pub unsafe fn cudnnGetConvolutionBackwardFilterWorkspaceSize (handle : cudnnHandle_t , xDesc : cudnnTensorDescriptor_t , dyDesc : cudnnTensorDescriptor_t , convDesc : cudnnConvolutionDescriptor_t , gradDesc : cudnnFilterDescriptor_t , algo : cudnnConvolutionBwdFilterAlgo_t , sizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetConvolutionBackwardFilterWorkspaceSize (handle , xDesc , dyDesc , convDesc , gradDesc , algo , sizeInBytes) } }
pub unsafe fn cudnnConvolutionBackwardFilter (handle : cudnnHandle_t , alpha : * const :: core :: ffi :: c_void , xDesc : cudnnTensorDescriptor_t , x : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , convDesc : cudnnConvolutionDescriptor_t , algo : cudnnConvolutionBwdFilterAlgo_t , workSpace : * mut :: core :: ffi :: c_void , workSpaceSizeInBytes : usize , beta : * const :: core :: ffi :: c_void , dwDesc : cudnnFilterDescriptor_t , dw : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnConvolutionBackwardFilter (handle , alpha , xDesc , x , dyDesc , dy , convDesc , algo , workSpace , workSpaceSizeInBytes , beta , dwDesc , dw) } }
pub unsafe fn cudnnConvolutionBackwardBias (handle : cudnnHandle_t , alpha : * const :: core :: ffi :: c_void , dyDesc : cudnnTensorDescriptor_t , dy : * const :: core :: ffi :: c_void , beta : * const :: core :: ffi :: c_void , dbDesc : cudnnTensorDescriptor_t , db : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnConvolutionBackwardBias (handle , alpha , dyDesc , dy , beta , dbDesc , db) } }
pub unsafe fn cudnnCreateFusedOpsConstParamPack (constPack : * mut cudnnFusedOpsConstParamPack_t , ops : cudnnFusedOps_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateFusedOpsConstParamPack (constPack , ops) } }
pub unsafe fn cudnnDestroyFusedOpsConstParamPack (constPack : cudnnFusedOpsConstParamPack_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyFusedOpsConstParamPack (constPack) } }
pub unsafe fn cudnnSetFusedOpsConstParamPackAttribute (constPack : cudnnFusedOpsConstParamPack_t , paramLabel : cudnnFusedOpsConstParamLabel_t , param : * const :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetFusedOpsConstParamPackAttribute (constPack , paramLabel , param) } }
pub unsafe fn cudnnGetFusedOpsConstParamPackAttribute (constPack : cudnnFusedOpsConstParamPack_t , paramLabel : cudnnFusedOpsConstParamLabel_t , param : * mut :: core :: ffi :: c_void , isNULL : * mut :: core :: ffi :: c_int ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetFusedOpsConstParamPackAttribute (constPack , paramLabel , param , isNULL) } }
pub unsafe fn cudnnCreateFusedOpsVariantParamPack (varPack : * mut cudnnFusedOpsVariantParamPack_t , ops : cudnnFusedOps_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateFusedOpsVariantParamPack (varPack , ops) } }
pub unsafe fn cudnnDestroyFusedOpsVariantParamPack (varPack : cudnnFusedOpsVariantParamPack_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyFusedOpsVariantParamPack (varPack) } }
pub unsafe fn cudnnSetFusedOpsVariantParamPackAttribute (varPack : cudnnFusedOpsVariantParamPack_t , paramLabel : cudnnFusedOpsVariantParamLabel_t , ptr : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnSetFusedOpsVariantParamPackAttribute (varPack , paramLabel , ptr) } }
pub unsafe fn cudnnGetFusedOpsVariantParamPackAttribute (varPack : cudnnFusedOpsVariantParamPack_t , paramLabel : cudnnFusedOpsVariantParamLabel_t , ptr : * mut :: core :: ffi :: c_void ,) -> cudnnStatus_t { unsafe { culib () . cudnnGetFusedOpsVariantParamPackAttribute (varPack , paramLabel , ptr) } }
pub unsafe fn cudnnCreateFusedOpsPlan (plan : * mut cudnnFusedOpsPlan_t , ops : cudnnFusedOps_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnCreateFusedOpsPlan (plan , ops) } }
pub unsafe fn cudnnDestroyFusedOpsPlan (plan : cudnnFusedOpsPlan_t) -> cudnnStatus_t { unsafe { culib () . cudnnDestroyFusedOpsPlan (plan) } }
pub unsafe fn cudnnMakeFusedOpsPlan (handle : cudnnHandle_t , plan : cudnnFusedOpsPlan_t , constPack : cudnnFusedOpsConstParamPack_t , workspaceSizeInBytes : * mut usize ,) -> cudnnStatus_t { unsafe { culib () . cudnnMakeFusedOpsPlan (handle , plan , constPack , workspaceSizeInBytes) } }
pub unsafe fn cudnnFusedOpsExecute (handle : cudnnHandle_t , plan : cudnnFusedOpsPlan_t , varPack : cudnnFusedOpsVariantParamPack_t ,) -> cudnnStatus_t { unsafe { culib () . cudnnFusedOpsExecute (handle , plan , varPack) } }
